<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>枫哲&#39;s文栖小筑</title>
  
  <subtitle>君子终日乾乾，夕惕若厉，无咎</subtitle>
  <link href="http://ai.mak.cn/atom.xml" rel="self"/>
  
  <link href="http://ai.mak.cn/"/>
  <updated>2023-04-11T07:41:29.454Z</updated>
  <id>http://ai.mak.cn/</id>
  
  <author>
    <name>fantasykai</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>G6的自环边设置-Loop</title>
    <link href="http://ai.mak.cn/2023/04/11/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/G6%E7%9A%84%E8%87%AA%E7%8E%AF%E8%BE%B9%E8%AE%BE%E7%BD%AE-Loop/"/>
    <id>http://ai.mak.cn/2023/04/11/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/G6%E7%9A%84%E8%87%AA%E7%8E%AF%E8%BE%B9%E8%AE%BE%E7%BD%AE-Loop/</id>
    <published>2023-04-10T16:00:00.000Z</published>
    <updated>2023-04-11T07:41:29.454Z</updated>
    
    <content type="html"><![CDATA[<h1 id="G6的自环边设置-Loop"><a href="#G6的自环边设置-Loop" class="headerlink" title="G6的自环边设置-Loop"></a>G6的自环边设置-Loop</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (item.<span class="property">source</span> == item.<span class="property">target</span>) &#123;</span><br><span class="line">    <span class="comment">// 自环边的设置，增加loop属性即可</span></span><br><span class="line">     <span class="variable language_">this</span>.$set(item, <span class="string">&quot;type&quot;</span>, <span class="string">&quot;loop&quot;</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>参考文档</p><p><a href="https://g6.antv.antgroup.com/manual/middle/elements/edges/built-in/loop#%E6%A0%87%E7%AD%BE%E6%96%87%E6%9C%AC%E9%85%8D%E7%BD%AE-labelcfg">https://g6.antv.antgroup.com/manual/middle/elements/edges/built-in/loop#%E6%A0%87%E7%AD%BE%E6%96%87%E6%9C%AC%E9%85%8D%E7%BD%AE-labelcfg</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;G6的自环边设置-Loop&quot;&gt;&lt;a href=&quot;#G6的自环边设置-Loop&quot; class=&quot;headerlink&quot; title=&quot;G6的自环边设置-Loop&quot;&gt;&lt;/a&gt;G6的自环边设置-Loop&lt;/h1&gt;&lt;figure class=&quot;highlight js&quot;&gt;</summary>
      
    
    
    
    <category term="前端" scheme="http://ai.mak.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="js" scheme="http://ai.mak.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>容器中Java应用PID为1的问题</title>
    <link href="http://ai.mak.cn/2023/04/07/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/%E5%AE%B9%E5%99%A8%E4%B8%ADJava%E5%BA%94%E7%94%A8PID%E4%B8%BA1%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://ai.mak.cn/2023/04/07/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/%E5%AE%B9%E5%99%A8%E4%B8%ADJava%E5%BA%94%E7%94%A8PID%E4%B8%BA1%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2023-04-06T16:00:00.000Z</published>
    <updated>2023-04-07T14:20:02.114Z</updated>
    
    <content type="html"><![CDATA[<h2 id="容器中Java应用PID为1的问题"><a href="#容器中Java应用PID为1的问题" class="headerlink" title="容器中Java应用PID为1的问题"></a>容器中Java应用PID为1的问题</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><blockquote><p>Dockerfile中如果通过ENTRYPOINT 直接执行java -jar命令，会发现在容器中的java进程id是1，这样无法通过jstack，jmap，jinfo查看JVM相关信息。</p></blockquote><ul><li>PID 1~5是Linux的特殊进程。</li></ul><table><thead><tr><th>pid</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>init进程，系统启动的第一个用户级进程，是其他所有进程的父进程，引导用户空间服务</td></tr><tr><td>2</td><td>kthreadd，内核线程管理</td></tr><tr><td>3</td><td>migration，用于进程在不同CPU间迁移</td></tr><tr><td>4</td><td>ksoftirqd，内核中软中断守护线程，用于系统空闲时定时处理软中断事务</td></tr><tr><td>5</td><td>watchdog，看门狗进程，用于监听内核异常，当系统出现宕机时，可利用watchdog记录宕机时堆栈信息</td></tr></tbody></table><h4 id="Dockerfile配置："><a href="#Dockerfile配置：" class="headerlink" title="Dockerfile配置："></a>Dockerfile配置：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">环境</span></span><br><span class="line">FROM williamyeh/java8:latest</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝jar文件</span></span><br><span class="line">COPY /target/app.jar app.jar</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置端口号</span></span><br><span class="line">EXPOSE 2023</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行jar包</span></span><br><span class="line">ENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;app.jar&quot;, &quot;&amp;&quot;]</span><br></pre></td></tr></table></figure><ul><li>容器中查询 app.jar pid 为 1</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/ # export LINES=32; export COLUMNS=142</span><br><span class="line">/ # jps -l</span><br><span class="line">1 app.jar</span><br><span class="line">42387 sun.tools.jps.Jps</span><br><span class="line">/ # </span><br></pre></td></tr></table></figure><h3 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h3><p>避免java应用作为第一个启动的应用。添加tini，作为第一个启动的应用。</p><ul><li>运行apk add –no-cache tini</li><li>添加tini作为第一个运行的参数[“tini”, “java”, “-jar”, “app.jar”, “&amp;”]</li></ul><h4 id="Dockerfile配置"><a href="#Dockerfile配置" class="headerlink" title="Dockerfile配置"></a>Dockerfile配置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">环境</span></span><br><span class="line">FROM openjdk:8-jdk-alpine</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝jar文件</span></span><br><span class="line">COPY /target/app.jar app.jar</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行tini</span></span><br><span class="line">RUN apk add --no-cache tini</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置端口号</span></span><br><span class="line">EXPOSE 2023</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行jar包</span></span><br><span class="line">ENTRYPOINT [&quot;tini&quot;, &quot;java&quot;, &quot;-jar&quot;, &quot;app.jar&quot;, &quot;&amp;&quot;]</span><br></pre></td></tr></table></figure><ul><li>容器中查询 app.jar pid 为 7</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/ # export LINES=32; export COLUMNS=142</span><br><span class="line">/ # jps -l</span><br><span class="line">434 sun.tools.jps.Jps</span><br><span class="line">354 arthas-boot.jar</span><br><span class="line">7 app.jar</span><br><span class="line">/ # </span><br></pre></td></tr></table></figure><h3 id="其他方案"><a href="#其他方案" class="headerlink" title="其他方案"></a>其他方案</h3><blockquote><p>除了使用tini来解决外，通过sh简单再开一个子进程也是可以的：<br>  写好run.sh脚本放到项目中:</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">java $JAVA_OPTS   -jar tmp/$app.jar </span><br></pre></td></tr></table></figure><ul><li>修改dockerfile：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">COPY ./target/$app.jar /tmp</span><br><span class="line">ENTRYPOINT [ &quot;sh&quot;,&quot;-c&quot;,&quot;/tmp/run.sh&quot;]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;容器中Java应用PID为1的问题&quot;&gt;&lt;a href=&quot;#容器中Java应用PID为1的问题&quot; class=&quot;headerlink&quot; title=&quot;容器中Java应用PID为1的问题&quot;&gt;&lt;/a&gt;容器中Java应用PID为1的问题&lt;/h2&gt;&lt;h3 id=&quot;背景&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="容器" scheme="http://ai.mak.cn/categories/%E5%AE%B9%E5%99%A8/"/>
    
    
    <category term="Linux" scheme="http://ai.mak.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>rocketmq单机命令</title>
    <link href="http://ai.mak.cn/2023/04/06/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/rocketmq%E5%8D%95%E6%9C%BA%E5%91%BD%E4%BB%A4/"/>
    <id>http://ai.mak.cn/2023/04/06/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/rocketmq%E5%8D%95%E6%9C%BA%E5%91%BD%E4%BB%A4/</id>
    <published>2023-04-05T16:00:00.000Z</published>
    <updated>2023-04-07T14:30:45.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="rocketmq单机"><a href="#rocketmq单机" class="headerlink" title="rocketmq单机"></a>rocketmq单机</h2><ul><li>启动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nohup sh mqnamesrv &amp;</span><br><span class="line">nohup sh mqbroker -n localhost:9876 &amp;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># dashboard</span></span></span><br><span class="line">nohup java -jar rocketmq-dashboard-1.0.0.jar --rocketmq.config.namesrvAddr=localhost:9876 --server.port=7000 &amp;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>停止</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">先停止 broker</span></span><br><span class="line">sh bin/mqshutdown broker</span><br><span class="line">The mqbroker(243199) is running...</span><br><span class="line">Send shutdown request to mqbroker(243199) OK</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">后停止 namesrv</span></span><br><span class="line">sh bin/mqshutdown namesrv</span><br><span class="line">The mqnamesrv(242743) is running...</span><br><span class="line">Send shutdown request to mqnamesrv(242743) OK</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>修改存储路径</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">自动创建Topic</span></span><br><span class="line">autoCreateTopicEnable=true</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">存储路径</span></span><br><span class="line">storePathRootDir=/data/rocketmq/data/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">commitLog路径</span></span><br><span class="line">storePathCommitLog=/data/rocketmq/data/commitlog</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">消息队列存储路径</span></span><br><span class="line">storePathConsumeQueue=/data/rocketmq/data/consumequeue</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">消息索引存储路径</span></span><br><span class="line">storePathIndex=/data/rocketmq/data/index</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">checkpoint文件路径</span></span><br><span class="line">storeCheckpoint=/data/rocketmq/data/checkpoint</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">abort文件存储路径</span></span><br><span class="line">abortFile=/data/rocketmq/data/abort</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;rocketmq单机&quot;&gt;&lt;a href=&quot;#rocketmq单机&quot; class=&quot;headerlink&quot; title=&quot;rocketmq单机&quot;&gt;&lt;/a&gt;rocketmq单机&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;启动&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;hig</summary>
      
    
    
    
    <category term="容器" scheme="http://ai.mak.cn/categories/%E5%AE%B9%E5%99%A8/"/>
    
    
    <category term="Linux" scheme="http://ai.mak.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>早安</title>
    <link href="http://ai.mak.cn/2023/04/03/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890403/"/>
    <id>http://ai.mak.cn/2023/04/03/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890403/</id>
    <published>2023-04-02T16:00:00.000Z</published>
    <updated>2023-04-05T10:37:46.543Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>大风可以吹起一张白纸，却无法吹走一只蝴蝶，因为生命的力量在于不顺从。我们的一生都在对抗与治愈的路上，理想，爱与自由，从无到有，愿你挺过岁月的磨砺，扬风纵马踏花，云程发轨，万里可期。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;大风可以吹起一张白纸，却无法吹走一只蝴蝶，因为生命的力量在于不顺从。我们的一生都在对抗与治愈的路上，理想，爱与自由，从无到有，愿你挺过岁月的磨砺，扬风纵马踏花，云程发轨，万里可期。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>早安</title>
    <link href="http://ai.mak.cn/2023/04/02/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890402/"/>
    <id>http://ai.mak.cn/2023/04/02/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890402/</id>
    <published>2023-04-01T16:00:00.000Z</published>
    <updated>2023-04-05T10:39:01.367Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我迷失在哪片土地上，天空好像把所有的时间，都融合在一起</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;我迷失在哪片土地上，天空好像把所有的时间，都融合在一起&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>早安</title>
    <link href="http://ai.mak.cn/2023/03/25/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890325/"/>
    <id>http://ai.mak.cn/2023/03/25/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890325/</id>
    <published>2023-03-24T16:00:00.000Z</published>
    <updated>2023-04-05T10:47:07.993Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>真正坚持到最后的人，<br>靠的都不是激情，而是恰到好处的喜欢和投入。<br>葡萄藤上开不出百合花，找不到答案的时候就找自己。<br>那从什么时候开始呢？比如今天</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;真正坚持到最后的人，&lt;br&gt;靠的都不是激情，而是恰到好处的喜欢和投入。&lt;br&gt;葡萄藤上开不出百合花，找不到答案的时候就找自己。&lt;br&gt;那从什么时候开始呢？比如今天&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>如何通过写计划，赢得工作掌控感</title>
    <link href="http://ai.mak.cn/2023/03/20/%E8%AF%AD%E5%BD%95/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E5%86%99%E8%AE%A1%E5%88%92%EF%BC%8C%E8%B5%A2%E5%BE%97%E5%B7%A5%E4%BD%9C%E6%8E%8C%E6%8E%A7%E6%84%9F/"/>
    <id>http://ai.mak.cn/2023/03/20/%E8%AF%AD%E5%BD%95/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E5%86%99%E8%AE%A1%E5%88%92%EF%BC%8C%E8%B5%A2%E5%BE%97%E5%B7%A5%E4%BD%9C%E6%8E%8C%E6%8E%A7%E6%84%9F/</id>
    <published>2023-03-19T16:00:00.000Z</published>
    <updated>2023-04-05T10:53:05.302Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>目标刻在钢板上，计划写在沙滩上。</p></blockquote><ul><li>工作计划公式：对标对表<ul><li>对目标：将自己的小目标与组织的大目标相融合对进程表：<br>考虑队友的时间安排，上下左右对齐，完善计划可行性</li><li>目标写作技巧“卡路里写作法”。<ul><li>卡点：要达到这个目标，会有什么问题呢？</li><li>路径：要通过什么路径去实现目标？</li><li>里程碑：在过程中，取得什么阶段性成果，可以作为里程碑？</li></ul></li></ul></li><li>目标工具SMART原则：具体、可衡量、可达成、有相关性和可实现性</li></ul><p>光事前做计划，是为了把控全局，让自己在以后可能出现的变化中提前做准备。计划是可以根据具体情况而随时变化。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;目标刻在钢板上，计划写在沙滩上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;工作计划公式：对标对表&lt;ul&gt;
&lt;li&gt;对目标：将自己的小目标与组织的大目标相融合对进程表：&lt;br&gt;考虑队友的时间安排，上下左右对齐，完善计划可行性&lt;/li&gt;
</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>早安</title>
    <link href="http://ai.mak.cn/2023/03/10/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890310/"/>
    <id>http://ai.mak.cn/2023/03/10/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890310/</id>
    <published>2023-03-09T16:00:00.000Z</published>
    <updated>2023-04-05T10:40:53.785Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>看见别人聚沙成塔的过程，就知道不应该小看自己手里的这捧土。”努力必有结果！</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;看见别人聚沙成塔的过程，就知道不应该小看自己手里的这捧土。”努力必有结果！&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>升维 不确定时代的决策博弈 选段</title>
    <link href="http://ai.mak.cn/2023/03/07/%E8%AF%AD%E5%BD%95/%E5%8D%87%E7%BB%B4%20%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%97%B6%E4%BB%A3%E7%9A%84%E5%86%B3%E7%AD%96%E5%8D%9A%E5%BC%88/"/>
    <id>http://ai.mak.cn/2023/03/07/%E8%AF%AD%E5%BD%95/%E5%8D%87%E7%BB%B4%20%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%97%B6%E4%BB%A3%E7%9A%84%E5%86%B3%E7%AD%96%E5%8D%9A%E5%BC%88/</id>
    <published>2023-03-06T16:00:00.000Z</published>
    <updated>2023-04-05T10:57:07.799Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>你沿给定的思路解决问题无解的时候，就需要突破原有格局。<br>把注意力放在博弈结构上，突破原有格局，<br>是一种挑战问题本身的能力。<br>如果问题本身是错误的、过时的或不具代表性的，<br>那么试图解决这个问题是没有意义的，<br>这时，我们需要做的是重新定义问题。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;你沿给定的思路解决问题无解的时候，就需要突破原有格局。&lt;br&gt;把注意力放在博弈结构上，突破原有格局，&lt;br&gt;是一种挑战问题本身的能力。&lt;br&gt;如果问题本身是错误的、过时的或不具代表性的，&lt;br&gt;那么试图解决这个问题是没有意义的，&lt;br&gt;这时，我们需</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>雷军：听完总理工作报告，我有三点感受</title>
    <link href="http://ai.mak.cn/2023/03/05/%E6%9D%82%E8%AE%B0/%E9%9B%B7%E5%86%9B%EF%BC%9A%E5%90%AC%E5%AE%8C%E6%80%BB%E7%90%86%E5%B7%A5%E4%BD%9C%E6%8A%A5%E5%91%8A%EF%BC%8C%E6%88%91%E6%9C%89%E4%B8%89%E7%82%B9%E6%84%9F%E5%8F%97/"/>
    <id>http://ai.mak.cn/2023/03/05/%E6%9D%82%E8%AE%B0/%E9%9B%B7%E5%86%9B%EF%BC%9A%E5%90%AC%E5%AE%8C%E6%80%BB%E7%90%86%E5%B7%A5%E4%BD%9C%E6%8A%A5%E5%91%8A%EF%BC%8C%E6%88%91%E6%9C%89%E4%B8%89%E7%82%B9%E6%84%9F%E5%8F%97/</id>
    <published>2023-03-04T16:00:00.000Z</published>
    <updated>2023-04-05T14:01:36.298Z</updated>
    
    <content type="html"><![CDATA[<p>转载 ：<a href="https://mp.weixin.qq.com/s/jdCpdRpEVv4XkBRedfaQnw">https://mp.weixin.qq.com/s/jdCpdRpEVv4XkBRedfaQnw</a></p><p>今天上午聆听了总理的政府工作报告，我感受非常震撼。对过去一年和过去五年的总结，以及对今年发展的建议，都<strong>极为稳健、极为务实，极具韧性、极具信心。</strong> <strong>既有高屋建瓴的全局构建，又细致入微地落在实处，</strong>“奋斗铸就辉煌，实干赢得未来”给予了我们巨大的鼓舞。</p><p><strong>“企稳向上”来之不易</strong></p><p><strong>方向正确、持续实干是关键</strong></p><p>总理将过去五年总结为 <strong>“极不寻常、极不平凡”，让我印象非常深刻。更让我感受到震撼的，是过去一年的成绩，“来之极为不易”。</strong></p><p>面对多重超预期因素的冲击，政府展现出了超强的执政能力，果断应对、及时调控，多措并举稳经济，国内生产总值迈上了121万亿新台阶，“全球通胀”和“中国稳健”形成了鲜明的对比。今年政府设定5％左右的经济增长目标，充分体现了“稳字当头、稳中求进”的政策定力，体现了中国经济发展的强大韧性、厚实底力和向好潜力。</p><p> <strong>而在这背后，党和政府高屋建瓴的英明领导，和持续实干、落在实处的务实作风，是赢得这“来之极为不易”成果的关键。</strong></p><p>比如，政府对市场主体的支持空前突出，尤其是对小微企业的关怀持续显著加码。过去5年累计减税5.4万亿、降费2.8万亿，过去一年增值税留抵退税超过2.4万亿，新增减税降费超过1万亿。如此政策力度，如此落实效率，有力提振市场信心，显著改善了市场主体的发展环境，让企业经营者们深感暖意。</p><p>此外，政府工作报告中，很多政策举措的规划和执行都更加细致入微 。<strong>比如“提升全社会研发投入强度”、“推动线上线下消费深度融合”等政策方向的目标和进展，都首次在政府工作报告中披露了具体的数字。</strong> 干实事、落实处，让我备受鼓舞。</p><p><strong>关注民生、增进人民福祉</strong></p><p><strong>是不变的主旋律</strong></p><p>“稳增长、稳就业、稳物价”，政府工作报告中再次强调了关注人民福祉的主旋律，始终体现了对“民生”的极度重视。<strong>我粗略统计了一下，全文出现“民生”20次，“保障”37次。</strong></p><p>“在发展中不断增进民生福祉”，让我印象特别深刻的是，过去5年中，70%以上的财政支出用于民生，充分体现了党和政府执政为民的初心与担当。今年政府工作的目标设定中，也延续了这一基调。</p><p><strong>民生兴，则市场兴；民生旺，则国家旺。</strong> 今年政府工作的重点中，第一项就是着力扩大国内需求，把恢复和扩大消费摆在优先位置，多渠道增加城乡居民收入。</p><p>我从报告中感受到了，<strong>政府从消费需求入手，激活市场经济活力的信心与决心，报告中“消费”出现23次。</strong> 而在全球通胀压力高企的大环境下，今年居民消费价格涨幅控制在3%左右，同时新增城镇就业人口1200万人左右、居民实际入增长与经济增长基本同步的目标，既务实又扎实，让我们看到了中国经济持续向好最坚实的保障。</p><p><strong>创新引领发展</strong></p><p> <strong>科技企业使命光荣</strong></p><p>报告中也再次强调了对科技创新的重视，让我深切感受感到，科技企业群体已经走进了奋进发展的又一个春天。</p><p>报告中提及，<strong>创新引领发展的作用持续增强，科技进步贡献率提高到 60％以上 ，全社会研发经费投入强度从2.1%提高到2.5%以上，我注意到，这也是政府工作报告首次披露这一具体数字，充分体现了我们的科技创新能力越来越强，基底越来越扎实。</strong></p><p>同时，政府对科技创新企业的的鼓励也是实实在在、沉甸甸的：5年来不断提高企业研发费用加计扣除比例，各类支持创新的税收优惠政策年度规模已超过万亿元。</p><p>报告中还提到，要突出企业科技创新主体地位，围绕制造业重点产业链，集中优质资源合力推进关键核心技术攻关。这是对科技企业的殷切期望和热烈感召，作为科技企业界的代表，我深感使命光荣、责任重大，<strong>勇做探索先锋、勇闯科研高地、勇担发展重任，科技企业界义不容辞。</strong></p><p>今年是贯彻党的二十大精神的开局之年，值此历史性新局面开启之时，在党和政府的正确领导下，在一系列强有力的政策指引和激励之下，在稳健、务实、坚韧、自信的时代精神引领之下，<strong>我们坚定地“稳字当头，稳中求进”，就一定能承担起历史赋予的使命，我们的国家、社会、企业的抗风险能力一定越来越强，持续的高质量发展就一定能实现！</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;转载 ：&lt;a href=&quot;https://mp.weixin.qq.com/s/jdCpdRpEVv4XkBRedfaQnw&quot;&gt;https://mp.weixin.qq.com/s/jdCpdRpEVv4XkBRedfaQnw&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;今天上午聆听了总理的政府</summary>
      
    
    
    
    <category term="杂记" scheme="http://ai.mak.cn/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="杂记" scheme="http://ai.mak.cn/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>centos防火墙未开启，端口还是访问不了的问题</title>
    <link href="http://ai.mak.cn/2023/03/02/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/centos%E9%98%B2%E7%81%AB%E5%A2%99%E6%9C%AA%E5%BC%80%E5%90%AF%EF%BC%8C%E7%AB%AF%E5%8F%A3%E8%BF%98%E6%98%AF%E8%AE%BF%E9%97%AE%E4%B8%8D%E4%BA%86%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://ai.mak.cn/2023/03/02/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/centos%E9%98%B2%E7%81%AB%E5%A2%99%E6%9C%AA%E5%BC%80%E5%90%AF%EF%BC%8C%E7%AB%AF%E5%8F%A3%E8%BF%98%E6%98%AF%E8%AE%BF%E9%97%AE%E4%B8%8D%E4%BA%86%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2023-03-01T16:00:00.000Z</published>
    <updated>2023-03-08T01:59:13.317Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>重新找了一台centos安装了一下nebula，之前无法链接的问题是防火墙未开启端口，今天发现防火墙并未开启的情况下， 依然访问不了</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>排查原来 centos 即便关闭防火墙，也只能使用22端口连接ssh，别的端口还是不能用的，所以需要开启防火墙，手动设置要开放的端口</p><p>查看状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>1、先开启firewalld：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、放通端口：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br></pre></td></tr></table></figure><p>3、重新加载配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>参考 <a href="https://blog.51cto.com/11461281/2179025">centos7系列关闭防火墙但是端口依然无法访问</a></p><p>FirewallD 常用的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state ##查看防火墙状态，是否是running</span><br><span class="line"></span><br><span class="line">systemctl status firewalld.service ##查看防火墙状态</span><br><span class="line"></span><br><span class="line">systemctl start firewalld.service ##启动防火墙</span><br><span class="line"></span><br><span class="line">systemctl stop firewalld.service ##临时关闭防火墙</span><br><span class="line"></span><br><span class="line">systemctl enable firewalld.service ##设置开机启动防火墙</span><br><span class="line"></span><br><span class="line">systemctl disable firewalld.service ##设置禁止开机启动防火墙</span><br><span class="line"></span><br><span class="line">firewall-cmd --permanent --query-port=80/tcp ##查看80端口有没开放</span><br><span class="line"></span><br><span class="line">firewall-cmd --reload ##重新载入配置，比如添加规则之后，需要执行此命令</span><br><span class="line"></span><br><span class="line">firewall-cmd --get-zones ##列出支持的zone</span><br><span class="line"></span><br><span class="line">firewall-cmd --get-services ##列出预定义的服务</span><br><span class="line"></span><br><span class="line">firewall-cmd --query-service ftp ##查看ftp服务是否放行，返回yes或者no</span><br><span class="line"></span><br><span class="line">firewall-cmd --add-service=ftp ##临时开放ftp服务</span><br><span class="line"></span><br><span class="line">firewall-cmd --add-service=ftp --permanent ##永久开放ftp服务</span><br><span class="line"></span><br><span class="line">firewall-cmd --remove-service=ftp --permanent ##永久移除ftp服务</span><br><span class="line"></span><br><span class="line">firewall-cmd --add-port=80/tcp --permanent ##永久添加80端口</span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=public --remove-port=80/tcp --permanent ##移除80端口</span><br><span class="line"></span><br><span class="line">iptables -L -n ##查看规则，这个命令是和iptables的相同的</span><br><span class="line"></span><br><span class="line">man firewall-cmd ##查看帮助</span><br><span class="line"></span><br><span class="line">参数含义：</span><br><span class="line"></span><br><span class="line">--zone #作用域</span><br><span class="line"></span><br><span class="line">--permanent #永久生效，没有此参数重启后失效</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;p&gt;重新找了一台centos安装了一下nebula，之前无法链接的问题是防火墙未开启端口，今天发现防火墙并未开启的情况下， 依然访问不了&lt;/p&gt;</summary>
      
    
    
    
    <category term="linux" scheme="http://ai.mak.cn/categories/linux/"/>
    
    
    <category term="Linux" scheme="http://ai.mak.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>早安</title>
    <link href="http://ai.mak.cn/2023/02/26/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890226/"/>
    <id>http://ai.mak.cn/2023/02/26/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890226/</id>
    <published>2023-02-25T16:00:00.000Z</published>
    <updated>2023-04-05T10:44:46.796Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>人到中年，最好的日子不是惊艳<br>不是繁华,而是远离喧嚣，一半清醒<br>做好自己，一半努力包容别人!<br>最好的生活状态就是，低配你的<br>生活，高配你的灵魂，年龄只是符号，<br>把生活调成自己喜欢的频道，<br>一地鸡毛，<br>不需人知，<br>岁月静好，<br>且自从容!<br>人字有两笔，<br>一撒写前半生，<br>一捺写后生，<br>前半生写执着，<br>后半生写<br>释怀！</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;人到中年，最好的日子不是惊艳&lt;br&gt;不是繁华,而是远离喧嚣，一半清醒&lt;br&gt;做好自己，一半努力包容别人!&lt;br&gt;最好的生活状态就是，低配你的&lt;br&gt;生活，高配你的灵魂，年龄只是符号，&lt;br&gt;把生活调成自己喜欢的频道，&lt;br&gt;一地鸡毛，&lt;br&gt;不需人</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>心态是最好的风水</title>
    <link href="http://ai.mak.cn/2023/02/22/%E8%AF%AD%E5%BD%95/%E5%BF%83%E6%80%81%E6%98%AF%E6%9C%80%E5%A5%BD%E7%9A%84%E9%A3%8E%E6%B0%B4/"/>
    <id>http://ai.mak.cn/2023/02/22/%E8%AF%AD%E5%BD%95/%E5%BF%83%E6%80%81%E6%98%AF%E6%9C%80%E5%A5%BD%E7%9A%84%E9%A3%8E%E6%B0%B4/</id>
    <published>2023-02-21T16:00:00.000Z</published>
    <updated>2023-03-08T01:27:30.794Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>杨绛先生说,<br>如果别人说你两句，你就受不了了，被两句话干扰得吃不好，睡不好，你想想你得有多脆弱啊！何必计较呢？<br>在乌鸦的世界里，天鹅也有罪，思想不在一个高度，尊重就好，三观不在一个层次，微笑就好!<br>发自己的光，不必在意别人的流言蜚语。不要和<br>重要的人，计较不重要的事，不要和不重要的人，计较重要的事，记住，你的人品是你最好的运气，你的心态是你最好的风水。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;杨绛先生说,&lt;br&gt;如果别人说你两句，你就受不了了，被两句话干扰得吃不好，睡不好，你想想你得有多脆弱啊！何必计较呢？&lt;br&gt;在乌鸦的世界里，天鹅也有罪，思想不在一个高度，尊重就好，三观不在一个层次，微笑就好!&lt;br&gt;发自己的光，不必在意别人的流言蜚</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>党的三会一课制度</title>
    <link href="http://ai.mak.cn/2023/02/13/%E6%9D%82%E8%AE%B0/%E5%85%9A%E7%9A%84%E4%B8%89%E4%BC%9A%E4%B8%80%E8%AF%BE%E5%88%B6%E5%BA%A6/"/>
    <id>http://ai.mak.cn/2023/02/13/%E6%9D%82%E8%AE%B0/%E5%85%9A%E7%9A%84%E4%B8%89%E4%BC%9A%E4%B8%80%E8%AF%BE%E5%88%B6%E5%BA%A6/</id>
    <published>2023-02-12T16:00:00.000Z</published>
    <updated>2023-04-05T13:35:50.706Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> “三会一课”制度是党的组织生活的基本制度，是党的基层支部应该长期坚持的重要制度，也是健全党的组织生活，严格党员管理，加强党员教育的重要制度，是我党经过长期实践证明的一种行之有效的党组织生活制度。</p></blockquote><ul><li>“三会”是：定期召开支部党员大会、支委会、党小组会；“一课”是：按时上好党课。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt; “三会一课”制度是党的组织生活的基本制度，是党的基层支部应该长期坚持的重要制度，也是健全党的组织生活，严格党员管理，加强党员教育的重要制度，是我党经过长期实践证明的一种行之有效的党组织生活制度。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;l</summary>
      
    
    
    
    <category term="杂记" scheme="http://ai.mak.cn/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="杂记" scheme="http://ai.mak.cn/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>知识图谱学习参考</title>
    <link href="http://ai.mak.cn/2023/02/12/ai/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E5%AD%A6%E4%B9%A0%E5%8F%82%E8%80%83/"/>
    <id>http://ai.mak.cn/2023/02/12/ai/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E5%AD%A6%E4%B9%A0%E5%8F%82%E8%80%83/</id>
    <published>2023-02-11T16:00:00.000Z</published>
    <updated>2023-04-05T13:27:09.601Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、Pvthon基础"><a href="#1、Pvthon基础" class="headerlink" title="1、Pvthon基础"></a>1、Pvthon基础</h3><ul><li><p>快速过基础:莫凡Python<br><a href="https://mofanpy.com/">https://mofanpy.com/</a></p></li><li><p>详细学习:黑马Pvthon (1-294节即可，后面内容用处不大) 这里包含pycharm<br><a href="https://www.bilibili.com/video/BV1qW4y1a7fU/?spm_id_from=333.337.search-card.all.click&amp;vd_source=dceb5bc9ab2706e715bedaca815df3e4">https://www.bilibili.com/video/BV1qW4y1a7fU/?spm_id_from=333.337.search-card.all.click&amp;vd_source=dceb5bc9ab2706e715bedaca815df3e4</a></p></li></ul><h3 id="2、常用数据科学包Numpy，-Pandas，matplot"><a href="#2、常用数据科学包Numpy，-Pandas，matplot" class="headerlink" title="2、常用数据科学包Numpy， Pandas，matplot:"></a>2、常用数据科学包Numpy， Pandas，matplot:</h3><h3 id="3、常用机器学习包scikit-learn"><a href="#3、常用机器学习包scikit-learn" class="headerlink" title="3、常用机器学习包scikit-learn;"></a>3、常用机器学习包scikit-learn;</h3><p>[莫烦Pvthon] Scikit-earn (sklearn)优雅地学会机器学习<br><a href="https://www.bilibili.com/video/BV1xW411Y7Qd?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1xW411Y7Qd?spm_id_from=333.337.search-card.all.click</a></p><h3 id="4、深度学习"><a href="#4、深度学习" class="headerlink" title="4、深度学习"></a>4、深度学习</h3><p>配合花书中文版，当做工具书字典，遇到不懂的数学原理去查花书，相辅相成。<br>花书网上有陈云老师《深度学习框架PyTorch: 入门与实践》<br>网上有电子版快速学习:<br>PyTorch深度学习快速入门教程(绝对通俗易懂!)[小土堆]<br><a href="https://www.bilibili.com/video/BV1hE411t7RN/?spm_id_from=333.337.search-card.all.click&amp;vd_source=dceb5bc9ab2706e715bedaca815df3e4">https://www.bilibili.com/video/BV1hE411t7RN/?spm_id_from=333.337.search-card.all.click&amp;vd_source=dceb5bc9ab2706e715bedaca815df3e4</a></p><h3 id="5、知识图谱入门课程-北大邹磊教授课程"><a href="#5、知识图谱入门课程-北大邹磊教授课程" class="headerlink" title="5、知识图谱入门课程:北大邹磊教授课程"></a>5、知识图谱入门课程:北大邹磊教授课程</h3><p><a href="https://space.bilibili.com/601583767/channel/seriesdetail?sid=2224875%E6%96%AF%E5%9D%A6%E7%A6%8F%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E5%85%A5%E9%97%A8%E8%AF%BE%E7%A8%8B">https://space.bilibili.com/601583767/channel/seriesdetail?sid=2224875斯坦福知识图谱入门课程</a>:<br><a href="https://www.bilibili.com/video/BV1754y1j7J1?p=1">https://www.bilibili.com/video/BV1754y1j7J1?p=1</a></p><h3 id="6、图数据库"><a href="#6、图数据库" class="headerlink" title="6、图数据库"></a>6、图数据库</h3><h3 id="7、py2neo-能完成neo4j数据库的基础操作，如增删改查等"><a href="#7、py2neo-能完成neo4j数据库的基础操作，如增删改查等" class="headerlink" title="7、py2neo: 能完成neo4j数据库的基础操作，如增删改查等"></a>7、py2neo: 能完成neo4j数据库的基础操作，如增删改查等</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1、Pvthon基础&quot;&gt;&lt;a href=&quot;#1、Pvthon基础&quot; class=&quot;headerlink&quot; title=&quot;1、Pvthon基础&quot;&gt;&lt;/a&gt;1、Pvthon基础&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;快速过基础:莫凡Python&lt;br&gt;&lt;a href=&quot;ht</summary>
      
    
    
    
    <category term="AI" scheme="http://ai.mak.cn/categories/AI/"/>
    
    
    <category term="深度学习" scheme="http://ai.mak.cn/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>wget报错处理无法解析主机</title>
    <link href="http://ai.mak.cn/2023/02/08/%E7%BD%91%E7%BB%9C/wget%E6%8A%A5%E9%94%99%E5%A4%84%E7%90%86%E6%97%A0%E6%B3%95%E8%A7%A3%E6%9E%90%E4%B8%BB%E6%9C%BA/"/>
    <id>http://ai.mak.cn/2023/02/08/%E7%BD%91%E7%BB%9C/wget%E6%8A%A5%E9%94%99%E5%A4%84%E7%90%86%E6%97%A0%E6%B3%95%E8%A7%A3%E6%9E%90%E4%B8%BB%E6%9C%BA/</id>
    <published>2023-02-07T16:00:00.000Z</published>
    <updated>2023-02-11T05:34:19.401Z</updated>
    
    <content type="html"><![CDATA[<p>centos上准备更新一下国内的yum镜像源，更新时报错：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"></span><br><span class="line">http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">正在解析主机 mirrors.aliyun.com (mirrors.aliyun.com)... 失败：未知的名称或服务。</span><br><span class="line">wget: 无法解析主机地址 “mirrors.aliyun.com”</span><br><span class="line">使用wget命令显示无法解析主机地址</span><br></pre></td></tr></table></figure><ul><li>检查网络配置</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vi /etc/sysconfig/network-scripts/ifcfg-ensWifi5</span></span><br></pre></td></tr></table></figure><ul><li>在网卡中查看DNS，如果没有8.8.8.8，就加一个DNS上去</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ensWifi5</span><br><span class="line">UUID=4f28ed1b-9cc1-4a2f-8c2a-b09435fff313</span><br><span class="line">DEVICE=ensWifi5</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.100.151</span><br><span class="line">DNS1=192.168.100.151</span><br><span class="line">DNS2=8.8.8.8</span><br><span class="line">GATEWAY=192.168.100.1</span><br></pre></td></tr></table></figure><ul><li>退出重启网络</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl restart network</span></span><br></pre></td></tr></table></figure><p>再次执行wget命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;centos上准备更新一下国内的yum镜像源，更新时报错：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span</summary>
      
    
    
    
    <category term="linux" scheme="http://ai.mak.cn/categories/linux/"/>
    
    
    <category term="Linux" scheme="http://ai.mak.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>浦口龙虎巷</title>
    <link href="http://ai.mak.cn/2023/02/05/%E6%9D%82%E8%AE%B0/%E6%B5%A6%E5%8F%A3%E9%BE%99%E8%99%8E%E5%B7%B7/"/>
    <id>http://ai.mak.cn/2023/02/05/%E6%9D%82%E8%AE%B0/%E6%B5%A6%E5%8F%A3%E9%BE%99%E8%99%8E%E5%B7%B7/</id>
    <published>2023-02-04T16:00:00.000Z</published>
    <updated>2023-02-07T12:38:40.378Z</updated>
    
    <content type="html"><![CDATA[<p>偶然路过这条街巷，很多建筑像北方的风格，游览一番，也了解了一段历史～龙虎巷，沿线是津派建筑，最早的建筑建于清光绪三十四年，清末民初时期随着浦镇车辆厂在南门建立，职工在此在原有明清建筑(徽派）的基础上改建后用于办公居住，逐步形成了北方津派建筑群，是近现代南京大工业初始期产业形成的重要证物，这里住民北方籍居多（天津、唐山人等），老南门话也夹杂了许多天津味，显得比较俏皮，历史的车轮缓缓前进，往日的喧闹已经回归平淡与平静，一座座老房子已经挂上了文保的标牌与简介，就像老房子里的一盆盆小花，一树树盆景，宁静而安详。</p><iframe height=498 width=510 src='' frameborder=0 'allowfullscreen'></iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;偶然路过这条街巷，很多建筑像北方的风格，游览一番，也了解了一段历史～龙虎巷，沿线是津派建筑，最早的建筑建于清光绪三十四年，清末民初时期随着浦镇车辆厂在南门建立，职工在此在原有明清建筑(徽派）的基础上改建后用于办公居住，逐步形成了北方津派建筑群，是近现代南京大工业初始期产业形</summary>
      
    
    
    
    <category term="杂记" scheme="http://ai.mak.cn/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="杂记" scheme="http://ai.mak.cn/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>走运，走运，不走出来，哪来的运气</title>
    <link href="http://ai.mak.cn/2023/02/04/%E6%9D%82%E8%AE%B0/%E8%B5%B0%E8%BF%90%EF%BC%8C%E8%B5%B0%E8%BF%90%EF%BC%8C%E4%B8%8D%E8%B5%B0%E5%87%BA%E6%9D%A5%EF%BC%8C%E5%93%AA%E6%9D%A5%E7%9A%84%E8%BF%90%E6%B0%94/"/>
    <id>http://ai.mak.cn/2023/02/04/%E6%9D%82%E8%AE%B0/%E8%B5%B0%E8%BF%90%EF%BC%8C%E8%B5%B0%E8%BF%90%EF%BC%8C%E4%B8%8D%E8%B5%B0%E5%87%BA%E6%9D%A5%EF%BC%8C%E5%93%AA%E6%9D%A5%E7%9A%84%E8%BF%90%E6%B0%94/</id>
    <published>2023-02-03T16:00:00.000Z</published>
    <updated>2023-02-05T14:42:54.360Z</updated>
    
    <content type="html"><![CDATA[<p>骑行路上遇到一个老兵问路，刚好方向一致，就一起聊了一会儿，疫情好转了，老战友们让他组织个团聚活动，就出来探探路了。<br>老兵今年72了，精神特别好，看上相当年轻，之前的工作涉及科研保密，75岁前不能使用网络，又不想麻烦儿女，就自己出门乘车问路，自己也是好久没来过江北，一路上聊到了浦口的变化，和自己曾工作地方的变化，感叹祖国的强大，说了自己好多经历，还曾救过3个人，脊柱有6次受伤，平时都要用束带，但自己走路多，心态也好，到这个岁数也没驼背。<br>临别送了我一句话，“走运，走运，不走出来，哪来的运气”。<br>– 身体，和心态都要能及时的调整</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;骑行路上遇到一个老兵问路，刚好方向一致，就一起聊了一会儿，疫情好转了，老战友们让他组织个团聚活动，就出来探探路了。&lt;br&gt;老兵今年72了，精神特别好，看上相当年轻，之前的工作涉及科研保密，75岁前不能使用网络，又不想麻烦儿女，就自己出门乘车问路，自己也是好久没来过江北，一路</summary>
      
    
    
    
    <category term="杂记" scheme="http://ai.mak.cn/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="杂记" scheme="http://ai.mak.cn/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Transformer 统治的时代，为什么 LSTM 并没有被完全替代？</title>
    <link href="http://ai.mak.cn/2023/02/01/ai/Transformer%20%E7%BB%9F%E6%B2%BB%E7%9A%84%E6%97%B6%E4%BB%A3%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88%20LSTM%20%E5%B9%B6%E6%B2%A1%E6%9C%89%E8%A2%AB%E5%AE%8C%E5%85%A8%E6%9B%BF%E4%BB%A3%EF%BC%9F/"/>
    <id>http://ai.mak.cn/2023/02/01/ai/Transformer%20%E7%BB%9F%E6%B2%BB%E7%9A%84%E6%97%B6%E4%BB%A3%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88%20LSTM%20%E5%B9%B6%E6%B2%A1%E6%9C%89%E8%A2%AB%E5%AE%8C%E5%85%A8%E6%9B%BF%E4%BB%A3%EF%BC%9F/</id>
    <published>2023-01-31T16:00:00.000Z</published>
    <updated>2023-04-05T13:54:12.146Z</updated>
    
    <content type="html"><![CDATA[<p>LSTM 和 Transformer 都是当下主流的特征抽取结构，被应用到非常多的领域，各有它的擅长和优缺点。关于 LSTM 与 Transformer 结构的强弱争论，笔者认为还是要根据具体的研究领域进行讨论才有意义，毕竟目前很多模型改进的方向，其实就是改造使得它更匹配领域问题的特性。</p><p>本文基于时间序列上两种模型的具体实践，来聊聊 LSTM 这种 RNN 结构以及 Transformer 结构的实际差异与优劣，供大家参考。欢迎大家访问原文与我交流。</p><p><strong>LSTM 为什么火？</strong></p><p>RNN 的这种结构在某种程度上来讲，是在序列领域火起来的，为什么？主要原因还是因为RNN 的结构天然适配解决序列数据的问题，其输入往往是个不定长的线性序列句子，而 RNN本身结构就是个可以接纳不定长输入的由前向后进行信息线性传导的网络结构。更何况为了解决标准 RNN 的梯度爆炸和长程信息消失问题，诞生了 LSTM 这种引入三个门的结构，对于捕获长距离特征非常有效，也正是因为 RNN 特别适合线形序列应用场景，才使得它在序列研究领域如此流行的根本原因。</p><p>特别是在各种 Attention 注意力机制的加持下，几乎促使 RNN 在各个 SOTA 模型中频繁出没，通过叠加网络增加网络的深度，以及引入 Encoder-Decoder 框架，这些技术进展极大拓展了 RNN 的能力以及应用效果，比较典型的就是 Google NMT 了，结构如下：</p><p><img src="https://aimak.cn/blog_img/ai/Attention-01.png" alt="图片"></p><p>可以看到 NMT 的结构包含了双向 RNN、多层单向 RNN、注意力机制、Encoder-Decoder结构于一身，就是这样的结构才使得 NMT 的效果非常惊人。</p><p><strong>LSTM 的痛点</strong></p><p><strong>慢！</strong>之前写过利用 LSTM 的 seq2seq 模型以及在 LAS 中使用，参数一大训练速度慢的不行，吐槽！相关模型可以参见 GitHub：</p><p><a href="https://github.com/DengBoCong/nlp-paper">https://github.com/DengBoCong/nlp-paper</a></p><p>RNN 还有一个很明显的缺点，就是 RNN 本身的序列依赖结构对于大规模并行计算来说相当的不友好，换句话说，就是 RNN 很难具备高效的并行计算能力。深度学习大火的原因就是因为 GPU 硬件环境在支持，而 RNN 因为先天结构的问题（T 时刻的隐层状态 St 还依赖 T-1 时刻的隐层状态 St-1 的输出，这是最能体现RNN本质特征的一点），无法充分利用硬件的并行计算能力，这是一个非常非常大的问题！</p><p>反观 Transformer 就不存在这种序列依赖问题，所以对于这两者来说并行计算能力就不是问题，每个时间步的操作可以并行一起计算。</p><p>当然针对 RNN 结构的优化很多大牛都在研究，想方设法的改造 RNN 使其具备并行计算能力，主要是如下两种方式：</p><h3 id="隐层单元之间的并行计算"><a href="#隐层单元之间的并行计算" class="headerlink" title="隐层单元之间的并行计算"></a><strong>隐层单元之间的并行计算</strong></h3><p>这种方法的代表就是论文《Simple Recurrent Units for Highly Parallelizable Recurrence》 中提出的 SRU 方法，它最本质的改进是把多层 RNN 结构中，隐层之间的神经元依赖由全连接改成了哈达马乘积，这样 T 时刻隐层单元本来对 T-1 时刻所有隐层单元的依赖，改成了只是对 T-1 时刻对应单元的依赖，于是可以在隐层单元之间进行并行计算，但是收集信息仍然是按照时间序列来进行的。所以其并行性是在隐层单元之间发生的，而不是在不同时间步之间发生的。</p><p>用上面 Google NMT 中对 RNN 的优化方式来通俗的讲，就是多层 RNN 结构中，Encoder和 Decoder 的不同层的 LSTM 会在不同的 GPU 上运行，因为更上一层的 LSTM 不必等到下一层的神经网络完全计算完毕再开始工作。当然，上面这种方法的并行程度上限是有限的，并行程度取决于隐层神经元个数，而一般这个数值往往不会太大，再增加并行性已经不太可能。</p><h3 id="切断时间步关联进行并行计算"><a href="#切断时间步关联进行并行计算" class="headerlink" title="切断时间步关联进行并行计算"></a><strong>切断时间步关联进行并行计算</strong></h3><p>这种方法的代表就是论文《Sliced Recurrent Neural Networks》中提到的 Sliced RNN，从它的名字上我们可以体会到，通过对时间步的切片来实现并行计算。为了能够在不同时间步输入之间进行并行计算，Sliced RNN 就是打断隐层之间的连接，但是又不全打断，因为这样基本就无法捕获组合特征了，所以它选的策略就是部分打断，比如每隔2个时间步打断一次。对于距离稍微远点的特征，通过加深层深来建立远距离特征之间的联系，Sliced 的结构和普通RNN 的结构进行对比如下：</p><p><img src="https://aimak.cn/blog_img/ai/SlicedvsRNN-02.png" alt="图片"></p><p>看起来真的有点 CNN 的味道了，这貌似都不是 RNN 了，论文中提到这种类似于 CNN 结构的 RNN 比 GRU 模型快 5-15 倍，但是比 CNN 模型还是慢了大约3倍。我个人认为，从某种程度上讲，这种结构都不能叫做真正的 RNN 了，毕竟 RNN 的根本特征就是线性序列之间的连接，Sliced RNN 无非是为了让它看上去还像是 RNN，所以在打断片段里仍然采取RNN 结构，这样无疑会拉慢速度，所以这是个两难的选择，与其这样不如直接换成其它模型。</p><p>**Transformer 优势<br>**</p><p>Transformer 的模型结构细节我在这里就不多赘述了，在深度学习中混的，就算没用过Transformer，听也听的耳朵长茧了，它的论文《Attention Is All You Need》能够满足你的所有幻想。Transformer 牛逼之处在于，使用 Self-attention 以及 Muli-head Self-attention 进行语义抽取（关于序列中长距离依赖特征的问题，Self attention 天然就能解决这个问题，因为在集成信息的时候，当前单词和句子中任意单词都发生了联系，所以一步到位就把这个事情做掉了），并通过正弦位置编码保留输入句子单词之间的相对位置信息，这一套组合拳一打出来，威力惊人。不像 RNN 需要通过隐层节点序列往后传，也不像 CNN 需要通过增加网络深度来捕获远距离特征，Transformer 在这点上明显方案是相对简单直观的。</p><p><strong>Transformer 和</strong> <strong>LSTM 选谁？</strong></p><p>这个问题很难回答，就和最开始说的，根据特定的任务领域自行抉择，我这里针对几个关键点进行对比和比较，能够帮助你更好的选择，以下的数据和结论来源于论文《Why Self-Attention? A Targeted Evaluation of Neural Machine Translation Architectures》，论文中还带上了 CNN 一同进行对比，三个特征抽取模型：</p><p><strong>语义特征提取能力</strong></p><p><img src="https://aimak.cn/blog_img/ai/cnn-03.png" alt="图片"></p><p>从实验中我们可以看出，Transformer 在这方面的能力非常显著地超过 RNN 和 CNN（在考察语义类能力的任务 WSD 中，Transformer 超过 RNN 和 CNN 大约 4-8 个绝对百分点），RNN 和 CNN 两者能力差不太多。</p><p><strong>长距离特征捕获能力</strong></p><p><img src="https://aimak.cn/blog_img/ai/%E9%95%BF%E8%B7%9D%E7%A6%BB%E7%89%B9%E5%BE%81%E6%8D%95%E8%8E%B7%E8%83%BD%E5%8A%9B-04.png" alt="图片"></p><p>CNN 特征抽取器在这方面极为显著地弱于 RNN 和 Transformer，Transformer 微弱优于RNN 模型(尤其在主语谓语距离小于13时)，但在比较远的距离上（主语谓语距离大于13），RNN 微弱优于 Transformer，所以综合看，可以认为 Transformer 和 RNN 在这方面能力差不太多，而 CNN 则显著弱于前两者。</p><p><strong>任务综合特征抽取能力</strong></p><p>这里展示 GPT 论文中的实验数据：</p><p><img src="https://aimak.cn/blog_img/ai/%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97%E8%83%BD%E5%8A%9B%E5%8F%8A%E8%BF%90%E8%A1%8C%E6%95%88%E7%8E%87-06.png" alt="图片"></p><p>从综合特征抽取能力角度衡量，Transformer 显著强于 RNN 和 CNN，而 RNN 和 CNN 的表现差不太多，如果一定要在这两者之间比较的话，通常 CNN 的表现要稍微好于 RNN 的效果。</p><p><strong>并行计算能力及运行效率</strong></p><p>这里展示论文《Tensor2Tensor for Neural Machine Translation 》中的数据：</p><p><img src="https://aimak.cn/blog_img/ai/%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97%E8%83%BD%E5%8A%9B%E5%8F%8A%E8%BF%90%E8%A1%8C%E6%95%88%E7%8E%87-06.png" alt="图片"></p><p>self attention 的平方项是序列长度，因为每一个值都需要和任意一个值发生关系来计算 attention，所以包含一个 n 的平方项，而 RNN 和 CNN 的平方项则是 embedding size。当前常用的 embedding size 从 128 到 512 都常见，所以在大多数任务里面其实 self attention 计算效率是要高于 RNN 和 CNN 的。</p><p><strong>总结</strong></p><p>通过上述对比，是不是感觉 Transformer 真是个好东西？事实也证明 Transformer 确实在大部分场景下，是一个非常不错的选择，也正是 Transformer 的出现，打开了原本 RNN 占据的江山，现在还不能说LSTM（RNN）被替代，因为有着属于它自己的优势，比如长距离特征下的特征抽取，但是不得不承认现在的趋势已经向着 Transformer 的生态靠拢了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;LSTM 和 Transformer 都是当下主流的特征抽取结构，被应用到非常多的领域，各有它的擅长和优缺点。关于 LSTM 与 Transformer 结构的强弱争论，笔者认为还是要根据具体的研究领域进行讨论才有意义，毕竟目前很多模型改进的方向，其实就是改造使得它更匹配领</summary>
      
    
    
    
    <category term="AI" scheme="http://ai.mak.cn/categories/AI/"/>
    
    
    <category term="知识图谱" scheme="http://ai.mak.cn/tags/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
  </entry>
  
  <entry>
    <title>使用图数据库 Nebula Graph 数据导入快速体验知识图谱 OwnThink</title>
    <link href="http://ai.mak.cn/2023/01/28/ai/%E4%BD%BF%E7%94%A8%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93%20Nebula%20Graph%20%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%BF%AB%E9%80%9F%E4%BD%93%E9%AA%8C%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%20OwnThink/"/>
    <id>http://ai.mak.cn/2023/01/28/ai/%E4%BD%BF%E7%94%A8%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93%20Nebula%20Graph%20%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%BF%AB%E9%80%9F%E4%BD%93%E9%AA%8C%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%20OwnThink/</id>
    <published>2023-01-27T16:00:00.000Z</published>
    <updated>2023-01-29T06:28:38.930Z</updated>
    
    <content type="html"><![CDATA[<p>本文由 Nebula Graph 实习生@王杰贡献。</p><p>最近 @Yener 开源了史上最大规模的中文知识图谱——OwnThink（链接：<a href="https://github.com/ownthink/KnowledgeGraphData">https://github.com/ownthink/KnowledgeGraphData</a> ），数据量为 1.4 亿条。</p><p>本文介绍如何将这份数据快速导入图数据库 Nebula Graph，全过程大约需要 30 分钟。</p><h2 id="中文知识图谱-OwnThink-简介"><a href="#中文知识图谱-OwnThink-简介" class="headerlink" title="中文知识图谱 OwnThink 简介"></a>中文知识图谱 OwnThink 简介</h2><h3 id="思知（OwnThink）"><a href="#思知（OwnThink）" class="headerlink" title="思知（OwnThink）"></a>思知（OwnThink）</h3><p>知识图谱是由 Google 在 2012 年提出来的一个概念。主要是用来<strong>描述真实世界中存在的各种实体和概念，以及他们之间的关系</strong>。在搜索引擎、问答机器人、知识抽取等多个领域有着诸多应用。</p><p>最近 Yener 开源了史上最大规模的中文知识图谱—— OwnThink（链接：<a href="https://github.com/ownthink/KnowledgeGraphData%EF%BC%89%EF%BC%8C%E6%95%B0%E6%8D%AE%E9%87%8F%E4%B8%BA">https://github.com/ownthink/KnowledgeGraphData），数据量为</a> 1.4 亿条。数据以 (实体, 属性, 值) 和 (实体, 关系, 实体) 混合的<strong>三元组</strong>形式存储，数据格式为 csv。</p><p>可以点击这里下载：<a href="https://nebula-graph.oss-accelerate.aliyuncs.com/ownthink/kg_v2.tar.gz">https://nebula-graph.oss-accelerate.aliyuncs.com/ownthink/kg_v2.tar.gz</a></p><h3 id="查看原始文件"><a href="#查看原始文件" class="headerlink" title="查看原始文件"></a>查看原始文件</h3><p>由于 ownthink_v2.csv 数据过多，摘录部分数据为例：</p><table><thead><tr><th>1 2 3 4 5 6 7 8 9 10</th><th>红色食品,描述,红色食品是指食品为红色、橙红色或棕红色的食品。 红色食品,是否含防腐剂,否 红色食品,主要食用功效,预防感冒，缓解疲劳 红色食品,用途,增强表皮细胞再生和防止皮肤衰老 大龙湫,描述,雁荡山景区分散，东起羊角洞，西至锯板岭；南起筋竹溪，北至六坪山。 大龙湫,中文名称,大龙湫 大龙湫,外文名称,big dragon autrum 大龙湫,门票价格,50元 大龙湫,著名景点,芙蓉峰 姚明[中国篮球协会主席、中职联公司董事长],妻子,叶莉</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>这里的 (红色食品,是否含防腐剂,否) 就是典型的 (实体, 属性, 值) 形式的三元组数据; 而 (姚明[中国篮球协会主席、中职联公司董事长],妻子,叶莉) 是典型的 (实体, 关系, 实体) 形式的三元组数据。</p><h2 id="Step-1-数据建模与清洗准备"><a href="#Step-1-数据建模与清洗准备" class="headerlink" title="Step 1. 数据建模与清洗准备"></a>Step 1. 数据建模与清洗准备</h2><h3 id="建模"><a href="#建模" class="headerlink" title="建模"></a>建模</h3><p>Nebula Graph 是一个开源的分布式图数据库（链接：<a href="https://github.com/vesoft-inc/nebula%EF%BC%89%EF%BC%8C%E7%9B%B8%E6%AF%94">https://github.com/vesoft-inc/nebula），相比</a> Neo4j 来说，它的主要特点是完全的分布式，因此<strong>图数据库 Nebula Graph 适合处理数据量超过单机的场景</strong>。</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69341543-b9d2ef00-0ca4-11ea-8615-bb9d0e33c74a.png" alt="GitHub 主页"></p><p>图数据库<strong>通常支持的数据模型为有向属性图（directed property graph）</strong>。图中的每个顶点（vertex）可以用标签（tag）来表示类型（Neo4j 叫做 Label），顶点和顶点之间的关系用边（edge）连接起来。每种 tag 和 edge 还可以带有属性。——然而，这些功能对于知识图谱的三元组数据没什么意义:</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324280-263cf680-0c83-11ea-8195-3facde5c0bcd.png" alt="image"></p><p>分析上图的三元组数据，发现无论是 (实体, 属性, 值) 形式的三元组数据，还是 (实体, 关系, 实体) 形式的三元组数据，每条三元组数据均可以建模成<strong>两个点</strong>和<strong>一条边</strong>的形式。前者三元组中的“<strong>实体</strong>”和“<strong>值</strong>”建模为<strong>两个点</strong>（起点、终点），“<strong>属性</strong>”建模为<strong>一条边</strong>，后者三元组中的两个“<strong>实体</strong>”也建模为<strong>两个点</strong>（起点、终点），“<strong>关系</strong>”建模为<strong>一条边</strong>.</p><p>而且，所有的点都是相同类型（取名叫entity ），只需要一个属性（叫 name )，所有的边也都是同一类型(取名叫 relation ），边上也只有一个属性（叫 name ）。</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324336-3bb22080-0c83-11ea-9672-a0eb3a355f97.png" alt="image"></p><p>比如 (大龙湫,著名景点,芙蓉峰) 可以表示成下图这个样子：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324347-3f45a780-0c83-11ea-94bb-a1dd0df6ebef.png" alt="image"></p><h3 id="数据清洗和预处理"><a href="#数据清洗和预处理" class="headerlink" title="数据清洗和预处理"></a>数据清洗和预处理</h3><p>按照前一节的分析，原始的每条<strong>三元组数据</strong>，还需要清洗<strong>转换为两个点和一条边</strong>才能变成属性图的模型。</p><h4 id="下载清洗工具"><a href="#下载清洗工具" class="headerlink" title="下载清洗工具"></a>下载清洗工具</h4><p>本文测试的时候，使用的操作系统是 CentOS 7.5，工具由 Golang 语言编写而成。</p><p>你可以在这里 (链接：<a href="https://github.com/jievince/rdf-converter">https://github.com/jievince/rdf-converter</a>) 下载这个简单的清洗工具源代码并编译使用。</p><p>该工具会把转换后的顶点的数据写入到 vertex.csv 文件、边数据写入到 edge.csv 文件。</p><p>说明：在测试过程中，发现有大量的重复点数据，所以工具里面也做了去重。完全去重后的点的数据大概是 4600 万条，完全去重后的边的数据大概是 1 亿 4000 万条。</p><p>清洗完的 vertex.csv 文件长这样：</p><table><thead><tr><th>1 2 3 4 5 6 7 8</th><th>-2469395383949115281,过度包装 -5567206714840433083,Over  Package 3836323934884101628,有的商品故意增加包装层数 1185893106173039861,很多采用实木、金属制品 3455734391170888430,非科学 9183164258636124946,教育 5258679239570815125,成熟市场 -8062106589304861485,”成熟市场是指低增长率,高占有率的市场。”</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>说明：每一行是一个顶点，第一列整型 -2469395383949115281 是顶点的 ID（叫做 VID），它是由第二列文字通过 hash 计算出来的，例如 -2469395383949115281 就是由 std::hash(“过度包装”) 计算出来的值。</p><p>清洗完的 edge.csv 文件:</p><table><thead><tr><th>1 2 3 4 5 6 7 8 9 10</th><th>3413383836870836248,-948987595135324087,含义 3413383836870836248,8037179844375033188,定义 3413383836870836248,-2559124418148243756,标签 3413383836870836248,8108596883039039864,标签 2587975790775251569,-4666568475926279810,描述 2587975790775251569,2587975790775251569,中文名称 2587975790775251569,3771551033890875715,外文名称 2587975790775251569,2900555761857775043,地理位置 2587975790775251569,-1913521037799946160,占地面积 2587975790775251569,-1374607753051283066,开放时间</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>说明：第一列是起点的 VID，第二列是终点的 VID，第三列是这条边的”<strong>属性</strong>“或者”<strong>描述</strong>“。</p><p>在本机完全去重的清洗程序运行时间大约是 6 分钟。</p><h2 id="Step-2-Nebula-Graph-启动准备"><a href="#Step-2-Nebula-Graph-启动准备" class="headerlink" title="Step 2. Nebula Graph 启动准备"></a>Step 2. Nebula Graph 启动准备</h2><h3 id="下载和安装"><a href="#下载和安装" class="headerlink" title="下载和安装"></a>下载和安装</h3><p>登陆 GitHub 后，在这里 (链接：<a href="https://github.com/vesoft-inc/nebula/actions">https://github.com/vesoft-inc/nebula/actions</a>) 找到 Nebula 的安装包。</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69341796-3239b000-0ca5-11ea-8050-30d4d85c4e4d.png" alt="action"></p><p>找到你所用系统对应的下载链接：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69344341-32887a00-0caa-11ea-9065-b4a4ec6154ba.png" alt="package"></p><p>笔者系统是 CentOS 7.5，下载 CentOS 7.5 最新的压缩包，解压后能找到 rpm 安装包 nebula-5ace754.el7-5.x86_64.rpm，注意 5ace754 是 git commit 号，使用时可能会有所不同。下载好后解压，输入下面命令进行安装，记得替换成新的 git commit：</p><table><thead><tr><th>1</th><th>$ rpm -ivh nebula-5ace754.el7-5.x86_64.rpm</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><h3 id="启动-Nebula-Graph-服务"><a href="#启动-Nebula-Graph-服务" class="headerlink" title="启动 Nebula Graph 服务"></a>启动 Nebula Graph 服务</h3><p>在 命令行 CLI 输入下面命令启动服务</p><table><thead><tr><th>1</th><th>$ &#x2F;usr&#x2F;local&#x2F;nebula&#x2F;scripts&#x2F;nebula.service start all</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>命令执行结果如下：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324527-99df0380-0c83-11ea-9887-148143c18641.png" alt="image"></p><p>可以执行以下命令检查服务是否成功启动</p><table><thead><tr><th>1</th><th>$ &#x2F;usr&#x2F;local&#x2F;nebula&#x2F;scripts&#x2F;nebula.service status all</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>命令执行结果如下：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324588-b24f1e00-0c83-11ea-9f58-30f205bce272.png" alt="image"></p><h3 id="连接-Nebula-Graph-服务"><a href="#连接-Nebula-Graph-服务" class="headerlink" title="连接 Nebula Graph 服务"></a>连接 Nebula Graph 服务</h3><p>输入下面命令连接 Nebula Graph：</p><table><thead><tr><th>1</th><th>$ &#x2F;usr&#x2F;local&#x2F;nebula&#x2F;bin&#x2F;nebula -u user -p password</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>命令执行结果如下：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324631-c72bb180-0c83-11ea-9c32-ac349f9e3c9f.png" alt="image"></p><h3 id="准备-schema-等元数据"><a href="#准备-schema-等元数据" class="headerlink" title="准备 schema 等元数据"></a>准备 schema 等元数据</h3><p>Nebula Graph 的使用风格有点接近 MySQL，需要先准备各种元信息。</p><h4 id="新建图空间-space"><a href="#新建图空间-space" class="headerlink" title="新建图空间 space"></a>新建图空间 space</h4><p>create space 的概念接近 MySQL 里面 create database。在 nebula console 里面输入下面这个命令。</p><table><thead><tr><th>1</th><th>nebula&gt; CREATE SPACE test;</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><h4 id="进入-test-space"><a href="#进入-test-space" class="headerlink" title="进入 test space"></a>进入 test space</h4><table><thead><tr><th>1</th><th>nebula&gt; USE test;</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><h4 id="创建点类型（entity）"><a href="#创建点类型（entity）" class="headerlink" title="创建点类型（entity）"></a>创建点类型（entity）</h4><table><thead><tr><th>1</th><th>nebula&gt; CREATE TAG entity(name string);</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><h4 id="创建边类型-relation"><a href="#创建边类型-relation" class="headerlink" title="创建边类型 (relation)"></a>创建边类型 (relation)</h4><table><thead><tr><th>1</th><th>nebula&gt; CREATE EDGE relation(name string);</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>最后简单确认下元数据是不是正确。</p><p><strong>查看 entity 标签的属性</strong>：</p><table><thead><tr><th>1</th><th>nebula&gt; DESCRIBE TAG entity;</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>结果如下：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324705-e591ad00-0c83-11ea-9d5c-4172b146b762.png" alt="image"></p><p><strong>查看 relation 边类型的属性</strong>：</p><table><thead><tr><th>1</th><th>nebula&gt; DESCRIBE EDGE relation;</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>结果如下：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324702-e4f91680-0c83-11ea-80f8-293680b4a630.png" alt="image"></p><h2 id="Step-3-使用-nebula-importer-导入数据"><a href="#Step-3-使用-nebula-importer-导入数据" class="headerlink" title="Step 3. 使用 nebula-importer 导入数据"></a>Step 3. 使用 nebula-importer 导入数据</h2><p>登陆 GitHub 进入 <a href="https://github.com/vesoft-inc/nebula-importer">https://github.com/vesoft-inc/nebula-importer</a> ，nebula-importer 这个工具也是 Golang 语言写的，在这里下载并编译源代码。</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69342573-cb1cfb00-0ca6-11ea-8761-b5acbdcec5ae.png" alt="importer"></p><p>另外，准备一个 YAML 配置文件，告诉这个 importer 工具去哪里找 csv 文件。（可直接复制下面这段）</p><table><thead><tr><th>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42</th><th>version: v1rc1 description: example clientSettings:  concurrency: 10 # number of graph clients  channelBufferSize: 128  space: test  connection:   user: user   password: password   address: 127.0.0.1:3699 logPath: .&#x2F;err&#x2F;test.log files: - path: .&#x2F;vertex.csv   failDataPath: .&#x2F;err&#x2F;vertex.csv   batchSize: 100   type: csv   csv:    withHeader: false    withLabel: false   schema:    type: vertex    vertex:     tags:      - name: entity       props:        - name: name         type: string  - path: .&#x2F;edge.csv   failDataPath: .&#x2F;err&#x2F;edge.csv   batchSize: 100   type: csv   csv:    withHeader: false    withLabel: false   schema:    type: edge    edge:     name: relation     withRanking: false     props:      - name: name       type: string</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>说明：测试时候发现 csv 数据文件中有大量转义字符 () 和换行字符 (<br>)，nebula-importer 也做了处理。</p><p>最后：开始导入数据 ????</p><table><thead><tr><th>1</th><th>go run importer.go –config .&#x2F;config.yaml</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>执行过程如下：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324800-15d94b80-0c84-11ea-9d0e-6e1428c2de84.png" alt="image"></p><p>可以看到, 本次导入 QPS 大约在 40 w&#x2F;s。全部导入总耗时大约 15 min。</p><h2 id="Step-4-随便读点什么试试"><a href="#Step-4-随便读点什么试试" class="headerlink" title="Step 4. 随便读点什么试试"></a>Step 4. 随便读点什么试试</h2><p>导入完毕后，我们可以使用 Nebula Graph 服务做一些简单的查询。回到 Nebula Graph 的命令行 CLI ：</p><table><thead><tr><th>1</th><th>$ &#x2F;usr&#x2F;local&#x2F;nebula&#x2F;bin&#x2F;nebula -u user -p password</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>进入刚才导入的三元组数据的 test 空间：</p><table><thead><tr><th>1</th><th>nebula&gt; USE test;</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>现在，我们可以做一些简单查询</p><ul><li>例 1：与姚明有直接关联的边的类型和点的属性</li></ul><table><thead><tr><th>1</th><th>(<a href="mailto:&#x75;&#x73;&#101;&#x72;&#64;&#49;&#50;&#x37;&#x2e;&#x30;&#x2e;&#48;&#x2e;&#49;">&#x75;&#x73;&#101;&#x72;&#64;&#49;&#50;&#x37;&#x2e;&#x30;&#x2e;&#48;&#x2e;&#49;</a>) [test]&gt; GO FROM hash(“姚明[中国篮球协会主席、中职联公司董事长]”) OVER relation  YIELD relation.name AS Name, $$.entity.name AS Value;</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>执行结果如下：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69342925-834aa380-0ca7-11ea-8e71-1d7620320187.png" alt="result"></p><p>可以看到：本次查询返回 51 条数据，耗时 3 ms 左右；</p><ul><li>例2：查询姚明和其妻子叶莉在三跳之内的所有路径</li></ul><table><thead><tr><th>1</th><th>(<a href="mailto:&#x75;&#x73;&#101;&#x72;&#x40;&#49;&#x32;&#55;&#x2e;&#48;&#46;&#x30;&#x2e;&#49;">&#x75;&#x73;&#101;&#x72;&#x40;&#49;&#x32;&#55;&#x2e;&#48;&#46;&#x30;&#x2e;&#49;</a>) [test]&gt; FIND ALL PATH FROM hash(“姚明[中国篮球协会主席、中职联公司董事长]”)  TO hash(“叶莉”) OVER relation UPTO 3 STEPS;</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>执行结果如下：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324938-520cac00-0c84-11ea-97e5-956f8c739f89.png" alt="image"></p><p>当数据量较大时，查找全路径&#x2F;最短经之类的操作会比较耗时。可以看到：本次查询返回 8 条数据，说明姚明和其妻子叶莉在三跳之内共有 8 条直接或间接的关系。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本篇文章涉及到的一些概念和链接：</p><ul><li>OwnThink 的中文知识图谱数据：<a href="https://github.com/ownthink/KnowledgeGraphData%E3%80%82%E5%AE%83%E7%9A%84%E6%95%B0%E6%8D%AE%E4%BB%A5%E4%B8%89%E5%85%83%E7%BB%84%E5%BD%A2%E5%BC%8F%E4%BF%9D%E5%AD%98%E4%B8%BA">https://github.com/ownthink/KnowledgeGraphData。它的数据以三元组形式保存为</a> csv</li><li>Nebula Graph 是一个开源的图数据库，GitHub 地址：<a href="https://github.com/vesoft-inc/nebula%EF%BC%8C%E5%92%8C">https://github.com/vesoft-inc/nebula，和</a> Neo4j 相比，它是分布式的</li><li>数据清洗工具，GitHub 地址：<a href="https://github.com/jievince/rdf-converter%E3%80%82%E5%9B%A0%E4%B8%BA%E5%8E%9F%E5%A7%8B%E7%9A%84%E5%9B%BE%E8%B0%B1">https://github.com/jievince/rdf-converter。因为原始的图谱</a> ownthink_v2.csv 数据以三元组形式保存，并和一般图数据库的属性图模型略微有些不同，所以写了一个 Go 语言工具将原始 ownthink_v2.csv 变成 vertex.csv 和 edge.csv</li><li>数据导入工具，GitHub 地址：<a href="https://github.com/vesoft-inc/nebula-importer%E3%80%82%E5%B0%86%E6%B8%85%E6%B4%97%E5%AE%8C%E7%9A%84">https://github.com/vesoft-inc/nebula-importer。将清洗完的</a> vertex.csv 和 edge.csv 批量写入到 Nebula Graph。</li></ul><h3 id="后面的工作"><a href="#后面的工作" class="headerlink" title="后面的工作"></a>后面的工作</h3><ul><li>调整 Nebula 的参数。似乎默认的日志级别和内存都不是很好，可以用下面这个命令关闭日志，这样导入性能可以好很多。</li></ul><table><thead><tr><th>1</th><th>curl “<a href="http://127.0.0.1:12000/set_flags?flag=minloglevel&amp;value=4&quot;">http://127.0.0.1:12000/set_flags?flag=minloglevel&amp;value=4&quot;</a></th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><ul><li>写个对应的 Python 版本示例</li></ul><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><p>Nebula Graph GitHub 地址：<a href="https://github.com/vesoft-inc/nebula">https://github.com/vesoft-inc/nebula</a> ，加入 Nebula Graph 交流群，请联系 Nebula Graph 官方小助手微信号：NebulaGraphbot</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文由 Nebula Graph 实习生@王杰贡献。&lt;/p&gt;
&lt;p&gt;最近 @Yener 开源了史上最大规模的中文知识图谱——OwnThink（链接：&lt;a href=&quot;https://github.com/ownthink/KnowledgeGraphData&quot;&gt;https:</summary>
      
    
    
    
    <category term="AI" scheme="http://ai.mak.cn/categories/AI/"/>
    
    
    <category term="知识图谱" scheme="http://ai.mak.cn/tags/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
  </entry>
  
</feed>
