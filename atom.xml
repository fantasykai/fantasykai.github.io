<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>枫哲&#39;s文栖小筑</title>
  
  <subtitle>君子终日乾乾，夕惕若厉，无咎</subtitle>
  <link href="http://ai.mak.cn/atom.xml" rel="self"/>
  
  <link href="http://ai.mak.cn/"/>
  <updated>2023-04-05T10:37:46.543Z</updated>
  <id>http://ai.mak.cn/</id>
  
  <author>
    <name>fantasykai</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>早安</title>
    <link href="http://ai.mak.cn/2023/04/03/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890403/"/>
    <id>http://ai.mak.cn/2023/04/03/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890403/</id>
    <published>2023-04-02T16:00:00.000Z</published>
    <updated>2023-04-05T10:37:46.543Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>大风可以吹起一张白纸，却无法吹走一只蝴蝶，因为生命的力量在于不顺从。我们的一生都在对抗与治愈的路上，理想，爱与自由，从无到有，愿你挺过岁月的磨砺，扬风纵马踏花，云程发轨，万里可期。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;大风可以吹起一张白纸，却无法吹走一只蝴蝶，因为生命的力量在于不顺从。我们的一生都在对抗与治愈的路上，理想，爱与自由，从无到有，愿你挺过岁月的磨砺，扬风纵马踏花，云程发轨，万里可期。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>早安</title>
    <link href="http://ai.mak.cn/2023/04/02/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890402/"/>
    <id>http://ai.mak.cn/2023/04/02/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890402/</id>
    <published>2023-04-01T16:00:00.000Z</published>
    <updated>2023-04-05T10:39:01.367Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我迷失在哪片土地上，天空好像把所有的时间，都融合在一起</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;我迷失在哪片土地上，天空好像把所有的时间，都融合在一起&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>早安</title>
    <link href="http://ai.mak.cn/2023/03/25/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890325/"/>
    <id>http://ai.mak.cn/2023/03/25/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890325/</id>
    <published>2023-03-24T16:00:00.000Z</published>
    <updated>2023-04-05T10:47:07.993Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>真正坚持到最后的人，<br>靠的都不是激情，而是恰到好处的喜欢和投入。<br>葡萄藤上开不出百合花，找不到答案的时候就找自己。<br>那从什么时候开始呢？比如今天</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;真正坚持到最后的人，&lt;br&gt;靠的都不是激情，而是恰到好处的喜欢和投入。&lt;br&gt;葡萄藤上开不出百合花，找不到答案的时候就找自己。&lt;br&gt;那从什么时候开始呢？比如今天&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>如何通过写计划，赢得工作掌控感</title>
    <link href="http://ai.mak.cn/2023/03/20/%E8%AF%AD%E5%BD%95/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E5%86%99%E8%AE%A1%E5%88%92%EF%BC%8C%E8%B5%A2%E5%BE%97%E5%B7%A5%E4%BD%9C%E6%8E%8C%E6%8E%A7%E6%84%9F/"/>
    <id>http://ai.mak.cn/2023/03/20/%E8%AF%AD%E5%BD%95/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E5%86%99%E8%AE%A1%E5%88%92%EF%BC%8C%E8%B5%A2%E5%BE%97%E5%B7%A5%E4%BD%9C%E6%8E%8C%E6%8E%A7%E6%84%9F/</id>
    <published>2023-03-19T16:00:00.000Z</published>
    <updated>2023-04-05T10:53:05.302Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>目标刻在钢板上，计划写在沙滩上。</p></blockquote><ul><li>工作计划公式：对标对表<ul><li>对目标：将自己的小目标与组织的大目标相融合对进程表：<br>考虑队友的时间安排，上下左右对齐，完善计划可行性</li><li>目标写作技巧“卡路里写作法”。<ul><li>卡点：要达到这个目标，会有什么问题呢？</li><li>路径：要通过什么路径去实现目标？</li><li>里程碑：在过程中，取得什么阶段性成果，可以作为里程碑？</li></ul></li></ul></li><li>目标工具SMART原则：具体、可衡量、可达成、有相关性和可实现性</li></ul><p>光事前做计划，是为了把控全局，让自己在以后可能出现的变化中提前做准备。计划是可以根据具体情况而随时变化。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;目标刻在钢板上，计划写在沙滩上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;工作计划公式：对标对表&lt;ul&gt;
&lt;li&gt;对目标：将自己的小目标与组织的大目标相融合对进程表：&lt;br&gt;考虑队友的时间安排，上下左右对齐，完善计划可行性&lt;/li&gt;
</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>早安</title>
    <link href="http://ai.mak.cn/2023/03/10/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890310/"/>
    <id>http://ai.mak.cn/2023/03/10/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890310/</id>
    <published>2023-03-09T16:00:00.000Z</published>
    <updated>2023-04-05T10:40:53.785Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>看见别人聚沙成塔的过程，就知道不应该小看自己手里的这捧土。”努力必有结果！</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;看见别人聚沙成塔的过程，就知道不应该小看自己手里的这捧土。”努力必有结果！&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>升维 不确定时代的决策博弈 选段</title>
    <link href="http://ai.mak.cn/2023/03/07/%E8%AF%AD%E5%BD%95/%E5%8D%87%E7%BB%B4%20%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%97%B6%E4%BB%A3%E7%9A%84%E5%86%B3%E7%AD%96%E5%8D%9A%E5%BC%88/"/>
    <id>http://ai.mak.cn/2023/03/07/%E8%AF%AD%E5%BD%95/%E5%8D%87%E7%BB%B4%20%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%97%B6%E4%BB%A3%E7%9A%84%E5%86%B3%E7%AD%96%E5%8D%9A%E5%BC%88/</id>
    <published>2023-03-06T16:00:00.000Z</published>
    <updated>2023-04-05T10:57:07.799Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>你沿给定的思路解决问题无解的时候，就需要突破原有格局。<br>把注意力放在博弈结构上，突破原有格局，<br>是一种挑战问题本身的能力。<br>如果问题本身是错误的、过时的或不具代表性的，<br>那么试图解决这个问题是没有意义的，<br>这时，我们需要做的是重新定义问题。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;你沿给定的思路解决问题无解的时候，就需要突破原有格局。&lt;br&gt;把注意力放在博弈结构上，突破原有格局，&lt;br&gt;是一种挑战问题本身的能力。&lt;br&gt;如果问题本身是错误的、过时的或不具代表性的，&lt;br&gt;那么试图解决这个问题是没有意义的，&lt;br&gt;这时，我们需</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>centos防火墙未开启，端口还是访问不了的问题</title>
    <link href="http://ai.mak.cn/2023/03/02/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/centos%E9%98%B2%E7%81%AB%E5%A2%99%E6%9C%AA%E5%BC%80%E5%90%AF%EF%BC%8C%E7%AB%AF%E5%8F%A3%E8%BF%98%E6%98%AF%E8%AE%BF%E9%97%AE%E4%B8%8D%E4%BA%86%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://ai.mak.cn/2023/03/02/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/centos%E9%98%B2%E7%81%AB%E5%A2%99%E6%9C%AA%E5%BC%80%E5%90%AF%EF%BC%8C%E7%AB%AF%E5%8F%A3%E8%BF%98%E6%98%AF%E8%AE%BF%E9%97%AE%E4%B8%8D%E4%BA%86%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2023-03-01T16:00:00.000Z</published>
    <updated>2023-03-08T01:59:13.317Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>重新找了一台centos安装了一下nebula，之前无法链接的问题是防火墙未开启端口，今天发现防火墙并未开启的情况下， 依然访问不了</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>排查原来 centos 即便关闭防火墙，也只能使用22端口连接ssh，别的端口还是不能用的，所以需要开启防火墙，手动设置要开放的端口</p><p>查看状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>1、先开启firewalld：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、放通端口：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br></pre></td></tr></table></figure><p>3、重新加载配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>参考 <a href="https://blog.51cto.com/11461281/2179025">centos7系列关闭防火墙但是端口依然无法访问</a></p><p>FirewallD 常用的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state ##查看防火墙状态，是否是running</span><br><span class="line"></span><br><span class="line">systemctl status firewalld.service ##查看防火墙状态</span><br><span class="line"></span><br><span class="line">systemctl start firewalld.service ##启动防火墙</span><br><span class="line"></span><br><span class="line">systemctl stop firewalld.service ##临时关闭防火墙</span><br><span class="line"></span><br><span class="line">systemctl enable firewalld.service ##设置开机启动防火墙</span><br><span class="line"></span><br><span class="line">systemctl disable firewalld.service ##设置禁止开机启动防火墙</span><br><span class="line"></span><br><span class="line">firewall-cmd --permanent --query-port=80/tcp ##查看80端口有没开放</span><br><span class="line"></span><br><span class="line">firewall-cmd --reload ##重新载入配置，比如添加规则之后，需要执行此命令</span><br><span class="line"></span><br><span class="line">firewall-cmd --get-zones ##列出支持的zone</span><br><span class="line"></span><br><span class="line">firewall-cmd --get-services ##列出预定义的服务</span><br><span class="line"></span><br><span class="line">firewall-cmd --query-service ftp ##查看ftp服务是否放行，返回yes或者no</span><br><span class="line"></span><br><span class="line">firewall-cmd --add-service=ftp ##临时开放ftp服务</span><br><span class="line"></span><br><span class="line">firewall-cmd --add-service=ftp --permanent ##永久开放ftp服务</span><br><span class="line"></span><br><span class="line">firewall-cmd --remove-service=ftp --permanent ##永久移除ftp服务</span><br><span class="line"></span><br><span class="line">firewall-cmd --add-port=80/tcp --permanent ##永久添加80端口</span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=public --remove-port=80/tcp --permanent ##移除80端口</span><br><span class="line"></span><br><span class="line">iptables -L -n ##查看规则，这个命令是和iptables的相同的</span><br><span class="line"></span><br><span class="line">man firewall-cmd ##查看帮助</span><br><span class="line"></span><br><span class="line">参数含义：</span><br><span class="line"></span><br><span class="line">--zone #作用域</span><br><span class="line"></span><br><span class="line">--permanent #永久生效，没有此参数重启后失效</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;p&gt;重新找了一台centos安装了一下nebula，之前无法链接的问题是防火墙未开启端口，今天发现防火墙并未开启的情况下， 依然访问不了&lt;/p&gt;</summary>
      
    
    
    
    <category term="linux" scheme="http://ai.mak.cn/categories/linux/"/>
    
    
    <category term="Linux" scheme="http://ai.mak.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>早安</title>
    <link href="http://ai.mak.cn/2023/02/26/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890226/"/>
    <id>http://ai.mak.cn/2023/02/26/%E8%AF%AD%E5%BD%95/%E6%97%A9%E5%AE%890226/</id>
    <published>2023-02-25T16:00:00.000Z</published>
    <updated>2023-04-05T10:44:46.796Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>人到中年，最好的日子不是惊艳<br>不是繁华,而是远离喧嚣，一半清醒<br>做好自己，一半努力包容别人!<br>最好的生活状态就是，低配你的<br>生活，高配你的灵魂，年龄只是符号，<br>把生活调成自己喜欢的频道，<br>一地鸡毛，<br>不需人知，<br>岁月静好，<br>且自从容!<br>人字有两笔，<br>一撒写前半生，<br>一捺写后生，<br>前半生写执着，<br>后半生写<br>释怀！</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;人到中年，最好的日子不是惊艳&lt;br&gt;不是繁华,而是远离喧嚣，一半清醒&lt;br&gt;做好自己，一半努力包容别人!&lt;br&gt;最好的生活状态就是，低配你的&lt;br&gt;生活，高配你的灵魂，年龄只是符号，&lt;br&gt;把生活调成自己喜欢的频道，&lt;br&gt;一地鸡毛，&lt;br&gt;不需人</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>心态是最好的风水</title>
    <link href="http://ai.mak.cn/2023/02/22/%E8%AF%AD%E5%BD%95/%E5%BF%83%E6%80%81%E6%98%AF%E6%9C%80%E5%A5%BD%E7%9A%84%E9%A3%8E%E6%B0%B4/"/>
    <id>http://ai.mak.cn/2023/02/22/%E8%AF%AD%E5%BD%95/%E5%BF%83%E6%80%81%E6%98%AF%E6%9C%80%E5%A5%BD%E7%9A%84%E9%A3%8E%E6%B0%B4/</id>
    <published>2023-02-21T16:00:00.000Z</published>
    <updated>2023-03-08T01:27:30.794Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>杨绛先生说,<br>如果别人说你两句，你就受不了了，被两句话干扰得吃不好，睡不好，你想想你得有多脆弱啊！何必计较呢？<br>在乌鸦的世界里，天鹅也有罪，思想不在一个高度，尊重就好，三观不在一个层次，微笑就好!<br>发自己的光，不必在意别人的流言蜚语。不要和<br>重要的人，计较不重要的事，不要和不重要的人，计较重要的事，记住，你的人品是你最好的运气，你的心态是你最好的风水。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;杨绛先生说,&lt;br&gt;如果别人说你两句，你就受不了了，被两句话干扰得吃不好，睡不好，你想想你得有多脆弱啊！何必计较呢？&lt;br&gt;在乌鸦的世界里，天鹅也有罪，思想不在一个高度，尊重就好，三观不在一个层次，微笑就好!&lt;br&gt;发自己的光，不必在意别人的流言蜚</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>wget报错处理无法解析主机</title>
    <link href="http://ai.mak.cn/2023/02/08/%E7%BD%91%E7%BB%9C/wget%E6%8A%A5%E9%94%99%E5%A4%84%E7%90%86%E6%97%A0%E6%B3%95%E8%A7%A3%E6%9E%90%E4%B8%BB%E6%9C%BA/"/>
    <id>http://ai.mak.cn/2023/02/08/%E7%BD%91%E7%BB%9C/wget%E6%8A%A5%E9%94%99%E5%A4%84%E7%90%86%E6%97%A0%E6%B3%95%E8%A7%A3%E6%9E%90%E4%B8%BB%E6%9C%BA/</id>
    <published>2023-02-07T16:00:00.000Z</published>
    <updated>2023-02-11T05:34:19.401Z</updated>
    
    <content type="html"><![CDATA[<p>centos上准备更新一下国内的yum镜像源，更新时报错：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"></span><br><span class="line">http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">正在解析主机 mirrors.aliyun.com (mirrors.aliyun.com)... 失败：未知的名称或服务。</span><br><span class="line">wget: 无法解析主机地址 “mirrors.aliyun.com”</span><br><span class="line">使用wget命令显示无法解析主机地址</span><br></pre></td></tr></table></figure><ul><li>检查网络配置</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vi /etc/sysconfig/network-scripts/ifcfg-ensWifi5</span></span><br></pre></td></tr></table></figure><ul><li>在网卡中查看DNS，如果没有8.8.8.8，就加一个DNS上去</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ensWifi5</span><br><span class="line">UUID=4f28ed1b-9cc1-4a2f-8c2a-b09435fff313</span><br><span class="line">DEVICE=ensWifi5</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.100.151</span><br><span class="line">DNS1=192.168.100.151</span><br><span class="line">DNS2=8.8.8.8</span><br><span class="line">GATEWAY=192.168.100.1</span><br></pre></td></tr></table></figure><ul><li>退出重启网络</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl restart network</span></span><br></pre></td></tr></table></figure><p>再次执行wget命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;centos上准备更新一下国内的yum镜像源，更新时报错：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span</summary>
      
    
    
    
    <category term="linux" scheme="http://ai.mak.cn/categories/linux/"/>
    
    
    <category term="Linux" scheme="http://ai.mak.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>浦口龙虎巷</title>
    <link href="http://ai.mak.cn/2023/02/05/%E6%9D%82%E8%AE%B0/%E6%B5%A6%E5%8F%A3%E9%BE%99%E8%99%8E%E5%B7%B7/"/>
    <id>http://ai.mak.cn/2023/02/05/%E6%9D%82%E8%AE%B0/%E6%B5%A6%E5%8F%A3%E9%BE%99%E8%99%8E%E5%B7%B7/</id>
    <published>2023-02-04T16:00:00.000Z</published>
    <updated>2023-02-07T12:38:40.378Z</updated>
    
    <content type="html"><![CDATA[<p>偶然路过这条街巷，很多建筑像北方的风格，游览一番，也了解了一段历史～龙虎巷，沿线是津派建筑，最早的建筑建于清光绪三十四年，清末民初时期随着浦镇车辆厂在南门建立，职工在此在原有明清建筑(徽派）的基础上改建后用于办公居住，逐步形成了北方津派建筑群，是近现代南京大工业初始期产业形成的重要证物，这里住民北方籍居多（天津、唐山人等），老南门话也夹杂了许多天津味，显得比较俏皮，历史的车轮缓缓前进，往日的喧闹已经回归平淡与平静，一座座老房子已经挂上了文保的标牌与简介，就像老房子里的一盆盆小花，一树树盆景，宁静而安详。</p><iframe height=498 width=510 src='' frameborder=0 'allowfullscreen'></iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;偶然路过这条街巷，很多建筑像北方的风格，游览一番，也了解了一段历史～龙虎巷，沿线是津派建筑，最早的建筑建于清光绪三十四年，清末民初时期随着浦镇车辆厂在南门建立，职工在此在原有明清建筑(徽派）的基础上改建后用于办公居住，逐步形成了北方津派建筑群，是近现代南京大工业初始期产业形</summary>
      
    
    
    
    <category term="杂记" scheme="http://ai.mak.cn/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="杂记" scheme="http://ai.mak.cn/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>走运，走运，不走出来，哪来的运气</title>
    <link href="http://ai.mak.cn/2023/02/04/%E6%9D%82%E8%AE%B0/%E8%B5%B0%E8%BF%90%EF%BC%8C%E8%B5%B0%E8%BF%90%EF%BC%8C%E4%B8%8D%E8%B5%B0%E5%87%BA%E6%9D%A5%EF%BC%8C%E5%93%AA%E6%9D%A5%E7%9A%84%E8%BF%90%E6%B0%94/"/>
    <id>http://ai.mak.cn/2023/02/04/%E6%9D%82%E8%AE%B0/%E8%B5%B0%E8%BF%90%EF%BC%8C%E8%B5%B0%E8%BF%90%EF%BC%8C%E4%B8%8D%E8%B5%B0%E5%87%BA%E6%9D%A5%EF%BC%8C%E5%93%AA%E6%9D%A5%E7%9A%84%E8%BF%90%E6%B0%94/</id>
    <published>2023-02-03T16:00:00.000Z</published>
    <updated>2023-02-05T14:42:54.360Z</updated>
    
    <content type="html"><![CDATA[<p>骑行路上遇到一个老兵问路，刚好方向一致，就一起聊了一会儿，疫情好转了，老战友们让他组织个团聚活动，就出来探探路了。<br>老兵今年72了，精神特别好，看上相当年轻，之前的工作涉及科研保密，75岁前不能使用网络，又不想麻烦儿女，就自己出门乘车问路，自己也是好久没来过江北，一路上聊到了浦口的变化，和自己曾工作地方的变化，感叹祖国的强大，说了自己好多经历，还曾救过3个人，脊柱有6次受伤，平时都要用束带，但自己走路多，心态也好，到这个岁数也没驼背。<br>临别送了我一句话，“走运，走运，不走出来，哪来的运气”。<br>– 身体，和心态都要能及时的调整</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;骑行路上遇到一个老兵问路，刚好方向一致，就一起聊了一会儿，疫情好转了，老战友们让他组织个团聚活动，就出来探探路了。&lt;br&gt;老兵今年72了，精神特别好，看上相当年轻，之前的工作涉及科研保密，75岁前不能使用网络，又不想麻烦儿女，就自己出门乘车问路，自己也是好久没来过江北，一路</summary>
      
    
    
    
    <category term="杂记" scheme="http://ai.mak.cn/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="杂记" scheme="http://ai.mak.cn/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>使用图数据库 Nebula Graph 数据导入快速体验知识图谱 OwnThink</title>
    <link href="http://ai.mak.cn/2023/01/28/ai/%E4%BD%BF%E7%94%A8%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93%20Nebula%20Graph%20%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%BF%AB%E9%80%9F%E4%BD%93%E9%AA%8C%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%20OwnThink/"/>
    <id>http://ai.mak.cn/2023/01/28/ai/%E4%BD%BF%E7%94%A8%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93%20Nebula%20Graph%20%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%BF%AB%E9%80%9F%E4%BD%93%E9%AA%8C%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%20OwnThink/</id>
    <published>2023-01-27T16:00:00.000Z</published>
    <updated>2023-01-29T06:28:38.930Z</updated>
    
    <content type="html"><![CDATA[<p>本文由 Nebula Graph 实习生@王杰贡献。</p><p>最近 @Yener 开源了史上最大规模的中文知识图谱——OwnThink（链接：<a href="https://github.com/ownthink/KnowledgeGraphData">https://github.com/ownthink/KnowledgeGraphData</a> ），数据量为 1.4 亿条。</p><p>本文介绍如何将这份数据快速导入图数据库 Nebula Graph，全过程大约需要 30 分钟。</p><h2 id="中文知识图谱-OwnThink-简介"><a href="#中文知识图谱-OwnThink-简介" class="headerlink" title="中文知识图谱 OwnThink 简介"></a>中文知识图谱 OwnThink 简介</h2><h3 id="思知（OwnThink）"><a href="#思知（OwnThink）" class="headerlink" title="思知（OwnThink）"></a>思知（OwnThink）</h3><p>知识图谱是由 Google 在 2012 年提出来的一个概念。主要是用来<strong>描述真实世界中存在的各种实体和概念，以及他们之间的关系</strong>。在搜索引擎、问答机器人、知识抽取等多个领域有着诸多应用。</p><p>最近 Yener 开源了史上最大规模的中文知识图谱—— OwnThink（链接：<a href="https://github.com/ownthink/KnowledgeGraphData%EF%BC%89%EF%BC%8C%E6%95%B0%E6%8D%AE%E9%87%8F%E4%B8%BA">https://github.com/ownthink/KnowledgeGraphData），数据量为</a> 1.4 亿条。数据以 (实体, 属性, 值) 和 (实体, 关系, 实体) 混合的<strong>三元组</strong>形式存储，数据格式为 csv。</p><p>可以点击这里下载：<a href="https://nebula-graph.oss-accelerate.aliyuncs.com/ownthink/kg_v2.tar.gz">https://nebula-graph.oss-accelerate.aliyuncs.com/ownthink/kg_v2.tar.gz</a></p><h3 id="查看原始文件"><a href="#查看原始文件" class="headerlink" title="查看原始文件"></a>查看原始文件</h3><p>由于 ownthink_v2.csv 数据过多，摘录部分数据为例：</p><table><thead><tr><th>1 2 3 4 5 6 7 8 9 10</th><th>红色食品,描述,红色食品是指食品为红色、橙红色或棕红色的食品。 红色食品,是否含防腐剂,否 红色食品,主要食用功效,预防感冒，缓解疲劳 红色食品,用途,增强表皮细胞再生和防止皮肤衰老 大龙湫,描述,雁荡山景区分散，东起羊角洞，西至锯板岭；南起筋竹溪，北至六坪山。 大龙湫,中文名称,大龙湫 大龙湫,外文名称,big dragon autrum 大龙湫,门票价格,50元 大龙湫,著名景点,芙蓉峰 姚明[中国篮球协会主席、中职联公司董事长],妻子,叶莉</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>这里的 (红色食品,是否含防腐剂,否) 就是典型的 (实体, 属性, 值) 形式的三元组数据; 而 (姚明[中国篮球协会主席、中职联公司董事长],妻子,叶莉) 是典型的 (实体, 关系, 实体) 形式的三元组数据。</p><h2 id="Step-1-数据建模与清洗准备"><a href="#Step-1-数据建模与清洗准备" class="headerlink" title="Step 1. 数据建模与清洗准备"></a>Step 1. 数据建模与清洗准备</h2><h3 id="建模"><a href="#建模" class="headerlink" title="建模"></a>建模</h3><p>Nebula Graph 是一个开源的分布式图数据库（链接：<a href="https://github.com/vesoft-inc/nebula%EF%BC%89%EF%BC%8C%E7%9B%B8%E6%AF%94">https://github.com/vesoft-inc/nebula），相比</a> Neo4j 来说，它的主要特点是完全的分布式，因此<strong>图数据库 Nebula Graph 适合处理数据量超过单机的场景</strong>。</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69341543-b9d2ef00-0ca4-11ea-8615-bb9d0e33c74a.png" alt="GitHub 主页"></p><p>图数据库<strong>通常支持的数据模型为有向属性图（directed property graph）</strong>。图中的每个顶点（vertex）可以用标签（tag）来表示类型（Neo4j 叫做 Label），顶点和顶点之间的关系用边（edge）连接起来。每种 tag 和 edge 还可以带有属性。——然而，这些功能对于知识图谱的三元组数据没什么意义:</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324280-263cf680-0c83-11ea-8195-3facde5c0bcd.png" alt="image"></p><p>分析上图的三元组数据，发现无论是 (实体, 属性, 值) 形式的三元组数据，还是 (实体, 关系, 实体) 形式的三元组数据，每条三元组数据均可以建模成<strong>两个点</strong>和<strong>一条边</strong>的形式。前者三元组中的“<strong>实体</strong>”和“<strong>值</strong>”建模为<strong>两个点</strong>（起点、终点），“<strong>属性</strong>”建模为<strong>一条边</strong>，后者三元组中的两个“<strong>实体</strong>”也建模为<strong>两个点</strong>（起点、终点），“<strong>关系</strong>”建模为<strong>一条边</strong>.</p><p>而且，所有的点都是相同类型（取名叫entity ），只需要一个属性（叫 name )，所有的边也都是同一类型(取名叫 relation ），边上也只有一个属性（叫 name ）。</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324336-3bb22080-0c83-11ea-9672-a0eb3a355f97.png" alt="image"></p><p>比如 (大龙湫,著名景点,芙蓉峰) 可以表示成下图这个样子：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324347-3f45a780-0c83-11ea-94bb-a1dd0df6ebef.png" alt="image"></p><h3 id="数据清洗和预处理"><a href="#数据清洗和预处理" class="headerlink" title="数据清洗和预处理"></a>数据清洗和预处理</h3><p>按照前一节的分析，原始的每条<strong>三元组数据</strong>，还需要清洗<strong>转换为两个点和一条边</strong>才能变成属性图的模型。</p><h4 id="下载清洗工具"><a href="#下载清洗工具" class="headerlink" title="下载清洗工具"></a>下载清洗工具</h4><p>本文测试的时候，使用的操作系统是 CentOS 7.5，工具由 Golang 语言编写而成。</p><p>你可以在这里 (链接：<a href="https://github.com/jievince/rdf-converter">https://github.com/jievince/rdf-converter</a>) 下载这个简单的清洗工具源代码并编译使用。</p><p>该工具会把转换后的顶点的数据写入到 vertex.csv 文件、边数据写入到 edge.csv 文件。</p><p>说明：在测试过程中，发现有大量的重复点数据，所以工具里面也做了去重。完全去重后的点的数据大概是 4600 万条，完全去重后的边的数据大概是 1 亿 4000 万条。</p><p>清洗完的 vertex.csv 文件长这样：</p><table><thead><tr><th>1 2 3 4 5 6 7 8</th><th>-2469395383949115281,过度包装 -5567206714840433083,Over  Package 3836323934884101628,有的商品故意增加包装层数 1185893106173039861,很多采用实木、金属制品 3455734391170888430,非科学 9183164258636124946,教育 5258679239570815125,成熟市场 -8062106589304861485,”成熟市场是指低增长率,高占有率的市场。”</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>说明：每一行是一个顶点，第一列整型 -2469395383949115281 是顶点的 ID（叫做 VID），它是由第二列文字通过 hash 计算出来的，例如 -2469395383949115281 就是由 std::hash(“过度包装”) 计算出来的值。</p><p>清洗完的 edge.csv 文件:</p><table><thead><tr><th>1 2 3 4 5 6 7 8 9 10</th><th>3413383836870836248,-948987595135324087,含义 3413383836870836248,8037179844375033188,定义 3413383836870836248,-2559124418148243756,标签 3413383836870836248,8108596883039039864,标签 2587975790775251569,-4666568475926279810,描述 2587975790775251569,2587975790775251569,中文名称 2587975790775251569,3771551033890875715,外文名称 2587975790775251569,2900555761857775043,地理位置 2587975790775251569,-1913521037799946160,占地面积 2587975790775251569,-1374607753051283066,开放时间</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>说明：第一列是起点的 VID，第二列是终点的 VID，第三列是这条边的”<strong>属性</strong>“或者”<strong>描述</strong>“。</p><p>在本机完全去重的清洗程序运行时间大约是 6 分钟。</p><h2 id="Step-2-Nebula-Graph-启动准备"><a href="#Step-2-Nebula-Graph-启动准备" class="headerlink" title="Step 2. Nebula Graph 启动准备"></a>Step 2. Nebula Graph 启动准备</h2><h3 id="下载和安装"><a href="#下载和安装" class="headerlink" title="下载和安装"></a>下载和安装</h3><p>登陆 GitHub 后，在这里 (链接：<a href="https://github.com/vesoft-inc/nebula/actions">https://github.com/vesoft-inc/nebula/actions</a>) 找到 Nebula 的安装包。</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69341796-3239b000-0ca5-11ea-8050-30d4d85c4e4d.png" alt="action"></p><p>找到你所用系统对应的下载链接：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69344341-32887a00-0caa-11ea-9065-b4a4ec6154ba.png" alt="package"></p><p>笔者系统是 CentOS 7.5，下载 CentOS 7.5 最新的压缩包，解压后能找到 rpm 安装包 nebula-5ace754.el7-5.x86_64.rpm，注意 5ace754 是 git commit 号，使用时可能会有所不同。下载好后解压，输入下面命令进行安装，记得替换成新的 git commit：</p><table><thead><tr><th>1</th><th>$ rpm -ivh nebula-5ace754.el7-5.x86_64.rpm</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><h3 id="启动-Nebula-Graph-服务"><a href="#启动-Nebula-Graph-服务" class="headerlink" title="启动 Nebula Graph 服务"></a>启动 Nebula Graph 服务</h3><p>在 命令行 CLI 输入下面命令启动服务</p><table><thead><tr><th>1</th><th>$ &#x2F;usr&#x2F;local&#x2F;nebula&#x2F;scripts&#x2F;nebula.service start all</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>命令执行结果如下：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324527-99df0380-0c83-11ea-9887-148143c18641.png" alt="image"></p><p>可以执行以下命令检查服务是否成功启动</p><table><thead><tr><th>1</th><th>$ &#x2F;usr&#x2F;local&#x2F;nebula&#x2F;scripts&#x2F;nebula.service status all</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>命令执行结果如下：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324588-b24f1e00-0c83-11ea-9f58-30f205bce272.png" alt="image"></p><h3 id="连接-Nebula-Graph-服务"><a href="#连接-Nebula-Graph-服务" class="headerlink" title="连接 Nebula Graph 服务"></a>连接 Nebula Graph 服务</h3><p>输入下面命令连接 Nebula Graph：</p><table><thead><tr><th>1</th><th>$ &#x2F;usr&#x2F;local&#x2F;nebula&#x2F;bin&#x2F;nebula -u user -p password</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>命令执行结果如下：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324631-c72bb180-0c83-11ea-9c32-ac349f9e3c9f.png" alt="image"></p><h3 id="准备-schema-等元数据"><a href="#准备-schema-等元数据" class="headerlink" title="准备 schema 等元数据"></a>准备 schema 等元数据</h3><p>Nebula Graph 的使用风格有点接近 MySQL，需要先准备各种元信息。</p><h4 id="新建图空间-space"><a href="#新建图空间-space" class="headerlink" title="新建图空间 space"></a>新建图空间 space</h4><p>create space 的概念接近 MySQL 里面 create database。在 nebula console 里面输入下面这个命令。</p><table><thead><tr><th>1</th><th>nebula&gt; CREATE SPACE test;</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><h4 id="进入-test-space"><a href="#进入-test-space" class="headerlink" title="进入 test space"></a>进入 test space</h4><table><thead><tr><th>1</th><th>nebula&gt; USE test;</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><h4 id="创建点类型（entity）"><a href="#创建点类型（entity）" class="headerlink" title="创建点类型（entity）"></a>创建点类型（entity）</h4><table><thead><tr><th>1</th><th>nebula&gt; CREATE TAG entity(name string);</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><h4 id="创建边类型-relation"><a href="#创建边类型-relation" class="headerlink" title="创建边类型 (relation)"></a>创建边类型 (relation)</h4><table><thead><tr><th>1</th><th>nebula&gt; CREATE EDGE relation(name string);</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>最后简单确认下元数据是不是正确。</p><p><strong>查看 entity 标签的属性</strong>：</p><table><thead><tr><th>1</th><th>nebula&gt; DESCRIBE TAG entity;</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>结果如下：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324705-e591ad00-0c83-11ea-9d5c-4172b146b762.png" alt="image"></p><p><strong>查看 relation 边类型的属性</strong>：</p><table><thead><tr><th>1</th><th>nebula&gt; DESCRIBE EDGE relation;</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>结果如下：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324702-e4f91680-0c83-11ea-80f8-293680b4a630.png" alt="image"></p><h2 id="Step-3-使用-nebula-importer-导入数据"><a href="#Step-3-使用-nebula-importer-导入数据" class="headerlink" title="Step 3. 使用 nebula-importer 导入数据"></a>Step 3. 使用 nebula-importer 导入数据</h2><p>登陆 GitHub 进入 <a href="https://github.com/vesoft-inc/nebula-importer">https://github.com/vesoft-inc/nebula-importer</a> ，nebula-importer 这个工具也是 Golang 语言写的，在这里下载并编译源代码。</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69342573-cb1cfb00-0ca6-11ea-8761-b5acbdcec5ae.png" alt="importer"></p><p>另外，准备一个 YAML 配置文件，告诉这个 importer 工具去哪里找 csv 文件。（可直接复制下面这段）</p><table><thead><tr><th>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42</th><th>version: v1rc1 description: example clientSettings:  concurrency: 10 # number of graph clients  channelBufferSize: 128  space: test  connection:   user: user   password: password   address: 127.0.0.1:3699 logPath: .&#x2F;err&#x2F;test.log files: - path: .&#x2F;vertex.csv   failDataPath: .&#x2F;err&#x2F;vertex.csv   batchSize: 100   type: csv   csv:    withHeader: false    withLabel: false   schema:    type: vertex    vertex:     tags:      - name: entity       props:        - name: name         type: string  - path: .&#x2F;edge.csv   failDataPath: .&#x2F;err&#x2F;edge.csv   batchSize: 100   type: csv   csv:    withHeader: false    withLabel: false   schema:    type: edge    edge:     name: relation     withRanking: false     props:      - name: name       type: string</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>说明：测试时候发现 csv 数据文件中有大量转义字符 () 和换行字符 (<br>)，nebula-importer 也做了处理。</p><p>最后：开始导入数据 ????</p><table><thead><tr><th>1</th><th>go run importer.go –config .&#x2F;config.yaml</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>执行过程如下：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324800-15d94b80-0c84-11ea-9d0e-6e1428c2de84.png" alt="image"></p><p>可以看到, 本次导入 QPS 大约在 40 w&#x2F;s。全部导入总耗时大约 15 min。</p><h2 id="Step-4-随便读点什么试试"><a href="#Step-4-随便读点什么试试" class="headerlink" title="Step 4. 随便读点什么试试"></a>Step 4. 随便读点什么试试</h2><p>导入完毕后，我们可以使用 Nebula Graph 服务做一些简单的查询。回到 Nebula Graph 的命令行 CLI ：</p><table><thead><tr><th>1</th><th>$ &#x2F;usr&#x2F;local&#x2F;nebula&#x2F;bin&#x2F;nebula -u user -p password</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>进入刚才导入的三元组数据的 test 空间：</p><table><thead><tr><th>1</th><th>nebula&gt; USE test;</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>现在，我们可以做一些简单查询</p><ul><li>例 1：与姚明有直接关联的边的类型和点的属性</li></ul><table><thead><tr><th>1</th><th>(<a href="mailto:&#117;&#x73;&#101;&#114;&#x40;&#49;&#x32;&#x37;&#46;&#48;&#46;&#x30;&#x2e;&#x31;">&#117;&#x73;&#101;&#114;&#x40;&#49;&#x32;&#x37;&#46;&#48;&#46;&#x30;&#x2e;&#x31;</a>) [test]&gt; GO FROM hash(“姚明[中国篮球协会主席、中职联公司董事长]”) OVER relation  YIELD relation.name AS Name, $$.entity.name AS Value;</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>执行结果如下：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69342925-834aa380-0ca7-11ea-8e71-1d7620320187.png" alt="result"></p><p>可以看到：本次查询返回 51 条数据，耗时 3 ms 左右；</p><ul><li>例2：查询姚明和其妻子叶莉在三跳之内的所有路径</li></ul><table><thead><tr><th>1</th><th>(<a href="mailto:&#x75;&#115;&#x65;&#114;&#64;&#x31;&#50;&#x37;&#x2e;&#48;&#46;&#x30;&#x2e;&#x31;">&#x75;&#115;&#x65;&#114;&#64;&#x31;&#50;&#x37;&#x2e;&#48;&#46;&#x30;&#x2e;&#x31;</a>) [test]&gt; FIND ALL PATH FROM hash(“姚明[中国篮球协会主席、中职联公司董事长]”)  TO hash(“叶莉”) OVER relation UPTO 3 STEPS;</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>执行结果如下：</p><p><img src="https://www.codenong.com/getimg.php?url=https://user-images.githubusercontent.com/56643819/69324938-520cac00-0c84-11ea-97e5-956f8c739f89.png" alt="image"></p><p>当数据量较大时，查找全路径&#x2F;最短经之类的操作会比较耗时。可以看到：本次查询返回 8 条数据，说明姚明和其妻子叶莉在三跳之内共有 8 条直接或间接的关系。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本篇文章涉及到的一些概念和链接：</p><ul><li>OwnThink 的中文知识图谱数据：<a href="https://github.com/ownthink/KnowledgeGraphData%E3%80%82%E5%AE%83%E7%9A%84%E6%95%B0%E6%8D%AE%E4%BB%A5%E4%B8%89%E5%85%83%E7%BB%84%E5%BD%A2%E5%BC%8F%E4%BF%9D%E5%AD%98%E4%B8%BA">https://github.com/ownthink/KnowledgeGraphData。它的数据以三元组形式保存为</a> csv</li><li>Nebula Graph 是一个开源的图数据库，GitHub 地址：<a href="https://github.com/vesoft-inc/nebula%EF%BC%8C%E5%92%8C">https://github.com/vesoft-inc/nebula，和</a> Neo4j 相比，它是分布式的</li><li>数据清洗工具，GitHub 地址：<a href="https://github.com/jievince/rdf-converter%E3%80%82%E5%9B%A0%E4%B8%BA%E5%8E%9F%E5%A7%8B%E7%9A%84%E5%9B%BE%E8%B0%B1">https://github.com/jievince/rdf-converter。因为原始的图谱</a> ownthink_v2.csv 数据以三元组形式保存，并和一般图数据库的属性图模型略微有些不同，所以写了一个 Go 语言工具将原始 ownthink_v2.csv 变成 vertex.csv 和 edge.csv</li><li>数据导入工具，GitHub 地址：<a href="https://github.com/vesoft-inc/nebula-importer%E3%80%82%E5%B0%86%E6%B8%85%E6%B4%97%E5%AE%8C%E7%9A%84">https://github.com/vesoft-inc/nebula-importer。将清洗完的</a> vertex.csv 和 edge.csv 批量写入到 Nebula Graph。</li></ul><h3 id="后面的工作"><a href="#后面的工作" class="headerlink" title="后面的工作"></a>后面的工作</h3><ul><li>调整 Nebula 的参数。似乎默认的日志级别和内存都不是很好，可以用下面这个命令关闭日志，这样导入性能可以好很多。</li></ul><table><thead><tr><th>1</th><th>curl “<a href="http://127.0.0.1:12000/set_flags?flag=minloglevel&amp;value=4&quot;">http://127.0.0.1:12000/set_flags?flag=minloglevel&amp;value=4&quot;</a></th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><ul><li>写个对应的 Python 版本示例</li></ul><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><p>Nebula Graph GitHub 地址：<a href="https://github.com/vesoft-inc/nebula">https://github.com/vesoft-inc/nebula</a> ，加入 Nebula Graph 交流群，请联系 Nebula Graph 官方小助手微信号：NebulaGraphbot</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文由 Nebula Graph 实习生@王杰贡献。&lt;/p&gt;
&lt;p&gt;最近 @Yener 开源了史上最大规模的中文知识图谱——OwnThink（链接：&lt;a href=&quot;https://github.com/ownthink/KnowledgeGraphData&quot;&gt;https:</summary>
      
    
    
    
    <category term="AI" scheme="http://ai.mak.cn/categories/AI/"/>
    
    
    <category term="知识图谱" scheme="http://ai.mak.cn/tags/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
  </entry>
  
  <entry>
    <title>sAI新玩家，还有机会吗？</title>
    <link href="http://ai.mak.cn/2023/01/17/%E6%9D%82%E8%AE%B0/%E7%A7%91%E6%8A%80%E5%89%8D%E6%B2%BF%EF%BC%9AAI%E6%96%B0%E7%8E%A9%E5%AE%B6%EF%BC%8C%E8%BF%98%E6%9C%89%E6%9C%BA%E4%BC%9A%E5%90%97/"/>
    <id>http://ai.mak.cn/2023/01/17/%E6%9D%82%E8%AE%B0/%E7%A7%91%E6%8A%80%E5%89%8D%E6%B2%BF%EF%BC%9AAI%E6%96%B0%E7%8E%A9%E5%AE%B6%EF%BC%8C%E8%BF%98%E6%9C%89%E6%9C%BA%E4%BC%9A%E5%90%97/</id>
    <published>2023-01-16T16:00:00.000Z</published>
    <updated>2023-02-23T14:14:01.014Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>节选自：2023-023｜科技前沿：AI新玩家，还有机会吗？</p></blockquote><p>今天，我将从两个话题出发，为你提供知识服务。第一个是来自青年科学家彭天放老师的，新年第一期硬科技报告。第二个是，全国旅游市场陆续迎来复苏。</p><p>先来看第一条。《得到头条》的老朋友，也是我们的特约顾问，青年科学家彭天放老师，带来了今年的第一期硬科技报告。这回主要聚焦在一个话题，就是2022年这一轮AI热，新玩家的机会到底在哪里？</p><p>2022年AI有多热？即便不从事这个行业，你肯定也感受到了。比如，在《科学》杂志公布的2022十大科学突破里，有创造力的人工智能，就赫然在列。再比如，AI大规模破圈，从ChatGPT到AI绘图，玩过的人不少。要知道，上一回AI这么热，还是2016年，AlphaGo击败李世石的时候。</p><p>但是，这一轮AI热，其实很多人都有两个担心。第一，这回能不能带来新一轮的商业机会？会不会像2016年那样，炒一轮概念就冷却了？第二，假如这其中有商业机会，我们又该怎么把握？</p><p>针对这两个问题，彭天放老师搜集了过去两个月里，大量国内外的研究报道。</p><p>首先，这其中有没有商业机会？肯定有。因为这回AI的能力，跟2016年的AlphaGo，根本不在一个层次上。AlphaGo擅长的是运算，但创造力方面非常一般。而2022年的这一波AI，在创造力上，几乎上升了一个能力层次。用专业的行话说，比如，注意力机制（Transformer）、扩散模型（Diffusion）等等代表性的新算法，在能力上都超过了之前的卷积（CNN）、循环（GNN）、对抗（GAN）等等各种神经网络。</p><p>这些专业的名词你不用记。只需要记住一个结论，就是这一波AI在文字、图像、语音等需要创造力的任务上，效果奇佳。更重要的是，这一波AI热，只是刚开了个头。其中的很多潜力，比如，“注意力机制”“扩散模型”这些新算法的潜力还远没有被充分开发。假如全都发挥出来，这其中的机会就更不得了了。</p><p><strong>简单说，AlphaGo那一轮AI热，带火的其实是概念，是信心。但是这一轮AI技术，是真好用。</strong></p><p>但是，咱们也别高兴太早。这里面有机会不假，但这些机会，目前都攥在巨头手里。因为这些新算法的AI模型“太大了”。所谓AI模型大，就是指训练这个模型，需要的数据极多，周期极长，成本极高。比如聊天机器人，2019年之前，行业一线水平的语言模型参数规模，大概在十亿量级。到了2020年，OpenAI公司发布的GPT-3模型，参数规模一下升到了1750亿。而到了2022年，国内外很多公司都为自己万亿参数的模型开了发布会。</p><p>达到这个规模，成本有多高呢？你的模型要经过很多次训练。而以2020年的GPT-3模型为例，业界估计这个模型训练一次的成本高达1200万美元。什么概念？差不多够你去台积电做一款7nm芯片。而且芯片毕竟是个硬件，是好是坏，设计阶段咱们心里大概有谱。但AI模型训练有不确定性，业界经常开玩笑说，这玩意儿就像炼丹一样，多少得靠点运气。而只有市值上千亿美元的巨头，才有这个去赌一把的资本。</p><p>那么，这是不是意味着，新玩家就没机会了呢？也不是。</p><p>上个月4号，就在ChatGPT发布不久，硅谷著名的投资人查马斯（Chamath）在自己的视频账号上发表了一个观点。他认为，<strong>随着大模型的功能越来越强、成本越来越高，AI领域有可能会形成一种独特的商业模式，叫做模型即服务，英文简称是MaaS（Model as a Service）。</strong> 这种商业模式最近也经常被国内外一些学者和企业家探讨。</p><p>所谓模型即服务，你可以这么理解。就是大公司，开发出了一套AI模型，这是一个底板。你可以把他想象成一个接受过良好基础教育，数理化全都满分，各种基本功都特别扎实的应届生。基础虽好，但对于专业领域，还是个门外汉。你要是让他做点具体的、特别专业的工作，比如医疗、教育、销售，他还得再深入学习。</p><p>而MaaS模式，指的就是把这个算法的培训过程，分成两段。基础教育阶段，需要极大的投入，数理化全都得学一遍。这个阶段，由巨头完成。他们相当于模型的创造者，给你送来一个特别聪明、基本功特别好的通识型人才。而第二个阶段，你得把通识型人才，培养成能在某个领域干活的专业人才。这一步，科技巨头并不擅长，就得由细分领域里的公司来完成了。做这个细分领域训练的人，被称为模型打磨者。</p><p>这个针对AI模型在细分领域的二次训练，就是留给新玩家的机会。<strong>按照MaaS模式，科技巨头在将来会对外开放这些AI模型的调用接口。吸引一些规模较小，但是对行业理解更深的玩家，付费使用这些接口，并将模型打磨成真正满足行业需求的应用。</strong></p><p>这么一来，从巨头到新玩家，都可以获益。你看，巨头虽然承担了巨额的模型开发成本，但可以从其他行业中，收取模型接口使用费，而且避免了过度聚焦到某个特定行业带来的风险。同时，细分行业里的人，也不用从头研发，能以更低的成本来使用AI模型。</p><p>你看，对新玩家来说，这是不是一个好消息？而更好的消息是，这个模式，已经开始逐步实践了。彭天放老师专门去做了调研，找了几个MaaS模式的实践案例。</p><p>第一个例子来自音乐领域。上个月15号，两位毕业于美国普林斯顿大学的工程师，发布了一款叫做Riffusion的音乐创作工具，可以根据你输入的一段话生成一段音乐。更有趣的是，这个AI音乐创作工具，并不是他们自己从头开发的，而是他们利用业余时间，借助一款已经开源的AI画图算法，微调之后，改造成的一个AI音乐创作工具。</p><p>比如，你输入“电吉他摇滚独奏”，就会听到这么一段音乐。</p><p>再比如，输入“在放克基础上的萨克斯爵士独奏”，就会听到这么一段音乐。</p><p>听到这里你肯定会好奇，本来是用来画画的AI模型，怎么搞出了一个创作音乐的工具呢？这里的关键在于频谱图。频谱图专业知识就不展开说了，大概的原理就是，每一段声音可以用一张叫频谱图的图片来表示。这两位工程师，就是让AI大量学习频谱图片，让它具备了作曲的能力。</p><p>第二个例子来自医疗领域。上个月23号，美国谷歌公司发布了一个叫做Med-PaLM的模型，在美国医师职业测试中，首次拿到了跟人类医生基本一致的分数。很有希望在未来的AI问诊中发挥更大的作用，降低医疗服务的成本。</p><p>这里的技术细节就不过多深入了。总的来说，这位AI医生的诞生，也遵循了刚刚提到的两段式训练方式。也就是，利用一个已经成形的基础AI算法，叠加上一套专门基于医疗数据的训练流程，两轮打磨之后产生的成果。</p><p>最后，我们留一个开放性的思考。你所在的行业，基于行业知识和AI大模型，有可能诞生哪些有意思的应用呢？欢迎你在留言区分享。</p><p>再来看今天的第二条。随着疫情逐渐缓解，全国的旅游市场陆续迎来复苏。咱不看具体的出行数据，单从股市上就能反映出来。比如，去年11月以来，A股景点及旅游板块涨幅一度超过了40%。</p><p>好，光鲜的一面就摆在这。但是，也有很多人开始琢磨，这个火爆，能持续多久？注意，咱们可不是想泼冷水。而是这个担心背后，其实反映出了景点旅游行业，一直以来面对的一个约束，那就是，资源约束。</p><p>你看，但凡你能叫得出名的景点旅游公司，很多都背靠一个独特的自然资源。比如张家界、长白山、峨眉山、丽江股份、黄山旅游等等。这固然是个好事。但是，反过来看，这也是一个约束。那就是，你的回头客可能不多。</p><p>在日本旅游圈流行一句话，叫，一辈子不去富士山的人是笨蛋，一辈子去两次富士山的人也是笨蛋。言外之意，富士山虽然美，但是爬一个来回得24小时，一辈子去一次就够了，何必自己为难自己？再比如，你奔着一个美景去打卡拍照，结果当天有大雾。就是这一个小小的变量，你的所有期盼就都泡汤了。</p><p>你看，这是不是景点旅游公司的普遍困境？有资源，但是也只有资源。</p><p>但是最近，我注意到有一个公司很特别，它没有一处自然景区，也不是乌镇这样的人文圣地，但是市值超过400亿元。要知道，中青旅的市值也不过100多亿元。这家公司叫宋城演艺。</p><p>宋城演艺在杭州，而杭州过去又是南宋都城，宋城这个名字就是这么来的。那么，在没有独一份的自然景观的前提下，宋城演艺是怎么做大的呢？我觉得他们的打法，像极了以前看过的一句旅游宣传语。叫，人，是最美的风景。</p><p>既然没有天然的风景，那么我就把人变成风景。</p><p>怎么变？简单说，这个过程分两步。第一步，在景区附近建设主题乐园。这倒不新鲜。但有意思的是第二步，也就是，在主题乐园里，搞演出。但是注意，演出本身不稀奇，关键是演出的模式。你要想达到让人变成风景的程度，你的演出规模就必须足够大。大到什么程度？放眼过去，能把你的全部视线填满。过去看演出，是观众围着演员转。而宋城的演出，是演员围着观众转。比如表演抛绣球，整条街上全是演员。有扮演抛绣球的姑娘的，有扮演围观群众的，而且还时不时来点歌舞。同时，在网络上大范围传播，估计你可能也看到过相关的视频。</p><p>但是，宋城真正厉害的地方，还不是演出本身，而是演出背后的设计策略。</p><p>首先，宋城的演出虽然设在景区附近，但是在设计时，其实想的是尽可能不依赖景区资源。在外面能演，在室内也照样演，不管到哪都能演。比如宋城演艺的招牌节目，《千古情》就全都是室内演出。你再看其他演出，比如张艺谋的印象系列，就属于山水实景演出，只能在这个地方演。</p><p>其次，宋城演艺的节目，全都是高度模块化的。比如所有的节目，蓝本都来自五个要素，分别是历史起源、战争、爱情、离别、今日美好生活。再比如，节目的编制，全都是5到6幕。再比如，节目构成，一定包括歌舞、杂技、武术、走秀。而且多数是群像演出，没有谁是绝对的主角。你找著名演员能演，你去附近的艺校找几个学生也能演。</p><p>这个模式的复制能力有多强？今天宋城演艺已经在全国建了11个主题乐园，而且因为节目都是模块化的，可以任意组合拼配，这就导致一个景区一年四季演下来，不带重样的。你去过一次，再去第二次还是觉得新鲜。</p><p>你看，这么一步步下来，宋城演艺其实把主动权掌握在了自己手里。我的生意好不好，不是由景区天气说了算，而是由我自己说了算。而这其中，<strong>最大的确定性，还是人。我改变不了景区，改变不了天气，但是，我能改变人啊。把我的演出、我的演员、我的节目变得更好。然后，再把人变成最重要的风景。</strong></p><p>撰稿：彭天放、李加亮<br>讲述：李南南<br>轮值主编：马慧</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;节选自：2023-023｜科技前沿：AI新玩家，还有机会吗？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今天，我将从两个话题出发，为你提供知识服务。第一个是来自青年科学家彭天放老师的，新年第一期硬科技报告。第二个是，全国旅游市场陆续迎来复苏。&lt;/p</summary>
      
    
    
    
    <category term="杂记" scheme="http://ai.mak.cn/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="杂记" scheme="http://ai.mak.cn/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>中国企业如何重返CES</title>
    <link href="http://ai.mak.cn/2023/01/10/%E6%9D%82%E8%AE%B0/%E4%B8%AD%E5%9B%BD%E4%BC%81%E4%B8%9A%E5%A6%82%E4%BD%95%E9%87%8D%E8%BF%94CES/"/>
    <id>http://ai.mak.cn/2023/01/10/%E6%9D%82%E8%AE%B0/%E4%B8%AD%E5%9B%BD%E4%BC%81%E4%B8%9A%E5%A6%82%E4%BD%95%E9%87%8D%E8%BF%94CES/</id>
    <published>2023-01-09T16:00:00.000Z</published>
    <updated>2023-02-23T14:14:35.722Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>节选自：得到头条 | 2023-018期</p></blockquote><p>等了三年，中国企业如何重返CES</p><p>今天，我将从两个话题出发，为你提供知识服务。第一个是，CES特刊，我们看看今年CES上，有哪些新趋势？第二个是，国产机械键盘高速增长。</p><p>先来看第一条。就在昨天，2023CES国际消费电子展正式在美国拉斯维加斯落幕。CES，是世界上影响力最大的科技展会之一，一直被称为科技界的春晚。最近两天，关于CES的报道也很多。毕竟，这是三年以来，CES的第一次全面回归。2021年，CES受疫情影响改为线上展览。2022年是线上线下结合，但是到场人数只有4.5万人。很冷清。而这回，是疫情以来第一次全面恢复线下举办。也是中国公司三年来，第一回大规模重返CES。</p><p>今年，我们特别邀请了远读重洋的创始人，也是联合国工业发展组织投资和技术促进办公室，中国北京区域的协同项目专家，孙思远老师，作为特别顾问。孙思远老师过去几天，一直在CES现场，而且采访了大量的中国企业。今天我们就说说，孙思远老师带来的第一手观察。</p><p>关于今年的CES，孙思远老师的第一感觉就是，热闹又回来了。官方预计人数将达到10万。这个数字虽然跟前几年没法比，但是从现场体验看，已经能明显感受到人气的复苏。每年CES停车难、叫车贵、堵车烦的盛况又回来了。周边酒店也平均涨价两倍左右。这要是放在往年，肯定很多人抱怨。但是今年，大家反而把它当成好消息，当成一个全面复苏的信号。现场还有来自韩国、法国的旅游考察团，由导游举着小旗子带队到处参观。</p><p>而在这回的CES展上，孙思远老师主要有这么三个观察。</p><p>第一个是，大品牌的脚步从来不停。比如AMD、佳能、LG、微软、尼康、松下、三星，都带来了自家速度更快、性能更高、屏幕更大的新品。其中很亮眼的一款产品，是联想的新款双屏笔记本电脑Yoga Book 9i，使用体验类似超大号的折叠屏手机，引来了很多科技媒体的追踪报道。</p><p>第二个观察是，新奇特产品特别多。比如，韩国公司XORBIS带来了一款人工智能绘画机器人，叫Sketcher X。它不仅能和用户对话，还能用纸笔画出用户的素描肖像。再比如，宠物科技在这回的展会上特别火。比如Bird Buddy带来的智能喂鸟器。当有小鸟飞过来时，摄像头会记录并识别鸟的种类，同时把鸟的影像保存到系统相册里，类似一个现实版的宠物小精灵收集器。再比如，来自中国的智能伴宠机器人，GULIGULI，可以让主人通过机器人和宠物实现远程互动喂食。</p><p>第三个观察，聚焦在中国企业。因为疫情管控放开的时间还不长，很多中国企业并没有做好参加CES的准备。倒是一些中国出海品牌服务公司，也就是专门服务于中国出海企业的公司，临时决定抱团取暖。也就是，先整租了今年CES的展位，再把展位空间分配给需要曝光的品牌。说白了，就是众筹式参展。希望让中国出海企业，能以更小的投入，获得曝光。甚至有的出海品牌服务公司，正在准备和国内地方政府讨论，未来以城市为单位，组织地方企业到CES集体参展的可能性。</p><p>同时，中国企业的出海意愿空前高涨，但从效果来看，却有点两极分化的趋势。今年CES威尼斯展览中心（Venetian Expo）的展馆内有一块边缘区域，聚集了大量来自大湾区和江浙沪的OEM&#x2F;ODM代工厂。他们的品牌露出方式相当简单粗暴，几乎就是“东莞某某科技公司”“惠州某某科技公司”的英文直译，展台的陈列和摆设也比较简单，往往是一张桌子加两把椅子，柜台上再摆摆样品。由于地处展馆边缘位置，很多CES参会者甚至没有机会逛到他们所在的区域。</p><p>中国出海企业的另一个极端，是以TCL、海信、联想等为首的中国出海巨头们。不少当地的酒店、写字楼、商场里配备的都是TCL或海信的电视。这次CES上TCL也成了曝光最多的品牌之一，不仅在主会场外有TCL的巨幅宣传海报，CES官方参会证的背面也印的是TCL的标志。同时，TCL还是美国最火爆的橄榄球体育联赛NFL的主赞助商之一，TCL在CES展区还邀请了NFL退役的球星们与参会者合影留念。一位在现场的TCL工作人员说，TCL在美国雇佣了400多名员工，超过三分之二是美国人。假如事先不知情，初次接触TCL的参会者没准会认为这是个美国本土公司。</p><p>除了这两个极端，还有一类特别值得关注的中国出海企业。假如你去CES展会，可能很难注意到他们。因为当你路过这些企业展区的时候，可能未必能意识到他们是来自中国的公司。比如有一家叫做SecuRam的智能门锁企业，展台布置在CES的核心展区之一，从展台的设计、搭建到产品陈列都非常国际化。如果不是因为路过展区的时候发现老板是中国人，你可能压根不会知道这是一家来自中国南京的出海企业。</p><p>再比如手机配件厂商Torras，它目前是美国亚马逊销量最高的手机配件品牌之一，公司整体营收的30%来自美国市场。在国内Torras已经做到几条垂类赛道的头部。Torras的工作人员说，跟传统手机配件厂商不一样，Torras不拼低价，重视产品研发，一直以来靠产品取胜，但2023年他们会更多投入在讲好品牌故事和海外市场推广上。</p><p>孙思远老师告诉我，这其实反映了一个趋势。那就是，<strong>中国企业出海，正在找到一个外贸思维和品牌思维之间的平衡点。</strong> 过去，出海企业要么是外贸思维，要么是品牌思维。外贸思维和品牌思维之间又有一条不可逾越的鸿沟。<strong>做外贸像是玩一款动作游戏，需要投入产出的即时反馈，必须拳拳到肉。而做品牌更像是玩养成游戏，需要长年累月的投入和灌溉。</strong> 过去中国企业出海大多是外贸思维。但在今年的CES上，你已经能明显感到，越来越多的中国出海企业，开始投入大量精力到品牌打造上，开始变得越来越有国际范儿。</p><p>除了产品出海，还有一类中国企业属于技术出海。比如元宇宙XR领域的中国科技公司NOLO，核心研发团队来自中科院和北邮，在国内也一直是行业内排名前二的企业。在这次CES上，NOLO发布的VR指环形态控制器吸引了大量用户和同行的关注。孙思远老师和NOLO的工作人员交流下来发现，他们除了产品硬件出海，还会对外输出技术解决方案，通过技术出海征战全球市场。这样的技术出海企业越多，也代表了中国企业的整体竞争力越强。</p><p>最后，关于这回CES展，孙老师的总结是，中国强大的供应链基础，已经为中国企业出海创造了得天独厚的技术和产品优势，这是全球其他任何地区的企业所不具备的。<strong>而所谓的出海和国际化，就是在每个区域做好本地化。在充分利用中国供应链优势的同时，尊重当地文化、用好本地团队，再以极大的耐心讲好品牌故事.</strong></p><p>再来看今天的第二条。也跟中国制造有关。我们要说的是一个国产产品，是怎么从0到1，打开局面的？这个产品就是，机械键盘。</p><p>这个东西你应该不陌生。所谓机械键盘，就是每一个键下面，都安装了一个微动开关，行话叫轴。你敲击，这个轴就给你一个特殊的手感反馈。用起来，有一种明显的机械感。而做机械键盘的技术核心，就是这个叫轴的东西。按照专业的分类，机械键盘分成青轴、红轴、茶轴、黑轴。不瞒你说，我们公司有很多机械键盘爱好者。我专门侦察了一下我们公司打字最多的人，罗老师。他用的是青轴键盘，也就是打起字来声音最大、反馈最强烈、段落感最强的那一款。你看，一个干什么都追求极致的人，在键盘这块也不含糊。而我人生中第一个机械键盘，是前年跨年演讲闭关的时候，我们公司的联合创始人快刀青衣老师送的。因为当时打字比较多，快刀老师可能是觉得，拿机械键盘打字能带来一种享受。我用了几天下来，还真有一点上瘾的感觉。再用普通键盘，就找不到那种一敲一顿的攻击感了。</p><p>好，书归正传。我们之所以要讲机械键盘，倒不是要讲这个技术本身。而是因为在它身上，体现了一个竞争逻辑的转变。就是过去相当一段时间，中国制造跟外国产品比拼，都靠物美价廉。但是，你想过没有，假如一款产品，大家不在乎你是不是便宜，又该怎么办？国产机械键盘当年就遇到了这个情况。</p><p>要知道，机械键盘，这个技术门槛并不高，原理不复杂，但关键是做工要精。过去很长一段时间，这个市场都是被一个德国品牌，叫Cherry垄断的。本来，留给后来者的机会不多。但是，就在2011年，出现了一个机会。因为电竞行业兴起，带动了机械键盘的需求。而Cherry的产能有限。你看，机会出现了。</p><p>当时的国产厂商一看，既然有机会，我不能只甘心当个备胎啊。我得找机会把自己立住。怎么做？我最擅长的是什么？没错，就是当平替。也就是，质量可能只差一点，但是价格便宜很多。当时的国产机械键盘，走的就是这个平替路线。</p><p>但没成想，机械键盘的用户，对使用体验非常敏感，差一点都不行。而且更重要的是，一个普通键盘几十块，但一个机械键盘动不动几百块。但凡用机械键盘的，大都不在乎这点差价。注意，当时国产机械键盘的质量，肯定不是不及格，起码达到70分。但问题就在于，机械键盘这个东西本身带点极客属性，要么就不做，要做就必须做到90分。</p><p>你看，这就逼着国产机械键盘，必须得把质量做起来。怎么做？眼看着Cherry已经把这个技术做到头了，机会在哪里？国产厂商就开始琢磨，有没有什么问题，是Cherry没解决的呢？结果一研究，还真有。这就是，网吧键盘。</p><p>要知道，网吧里有很多食物碎屑、饮料、油渍等，机械键盘特别容易出问题。比如不小心饮料洒了，饮料含有糖分，进入轴体结构后，轴内会黏住，导致回弹性能不良。但Cherry在设计的时候哪考虑得了中国网吧。 它的产品怕水怕尘。于是，很多轴厂从这个痛点着手，开始优化轴体。</p><p>有人为了解决防水，尝试给轴体做防水坝。有人为了处理防尘问题，给轴体设计了小盒子，也就是保护层。有人为了应对轴坏掉，能快速维修更换，做出了热插拔，也就是可以拆卸重装的机械轴。</p><p>就这样，在尝试去解决网吧问题的过程中，中国厂商找到了自己的定位。后来，虽然网吧越来越少，但是机械键盘的口碑已经做起来，开始往更大的市场发展。</p><p>你看，这是不是像极了一个攀岩的过程？<strong>我们脚下，有强大的中国供应链，我们的第一级阶梯。借着它，我们先稳稳站住。然后，只要见到前方有抓手，就必须紧紧抓住它，不断向上攀援，你总能获得一个好结果。</strong></p><p>撰稿：李南南、李方圆<br>讲述：李南南</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;节选自：得到头条 | 2023-018期&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;等了三年，中国企业如何重返CES&lt;/p&gt;
&lt;p&gt;今天，我将从两个话题出发，为你提供知识服务。第一个是，CES特刊，我们看看今年CES上，有哪些新趋势？第二个是，国产</summary>
      
    
    
    
    <category term="杂记" scheme="http://ai.mak.cn/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="杂记" scheme="http://ai.mak.cn/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>知识图谱编辑器帮助文档</title>
    <link href="http://ai.mak.cn/2023/01/05/ai/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E7%BC%96%E8%BE%91%E5%99%A8%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3/"/>
    <id>http://ai.mak.cn/2023/01/05/ai/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E7%BC%96%E8%BE%91%E5%99%A8%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3/</id>
    <published>2023-01-04T16:00:00.000Z</published>
    <updated>2023-02-03T07:54:03.371Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://aimak.cn/kg_editor/index.html">知识图谱编辑器链接</a></p><h1 align="center">知识图谱编辑器(KG-Editor)</h1><div align="center"><p>基于 <a href="https://cn.vuejs.org/v2/guide/">Vue 2.x</a> +  <a href="https://g6.antv.vision/zh">G6 3.8</a>  + <a href="https://vuetifyjs.com/en/">Vuetify</a> 的可视化知识图谱编辑器(KG-Editor)</p></div><h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><ul><li><input checked="" disabled="" type="checkbox"> 支持切换多种布局模式</li><li><input checked="" disabled="" type="checkbox"> 添加节点—双击画布空白处添加节点</li><li><input checked="" disabled="" type="checkbox"> 编辑节点—点击节点后可在右侧配置器进行编辑节点</li><li><input checked="" disabled="" type="checkbox"> 添加连线—鼠标移入节点后显示锚点，点击锚点后便作为起始节点，点击其它节点实现连线</li><li><input checked="" disabled="" type="checkbox"> 编辑连线—点击连线后可在右侧配置器进行编辑连线</li><li><input checked="" disabled="" type="checkbox"> 缩略图&amp;emsp;—右侧导航器实现缩略图</li><li><input checked="" disabled="" type="checkbox"> 撤销功能(对节点和连线添加或者删除的撤销)<ul><li><input checked="" disabled="" type="checkbox"> 点击按钮撤销</li><li><input checked="" disabled="" type="checkbox"> Ctrl + Z撤销</li></ul></li><li><input checked="" disabled="" type="checkbox"> 重做功能</li><li><input checked="" disabled="" type="checkbox"> 复制节点功能<ul><li><input checked="" disabled="" type="checkbox"> 点击按钮复制</li><li><input checked="" disabled="" type="checkbox"> Ctrl + C复制</li></ul></li><li><input checked="" disabled="" type="checkbox"> 粘贴节点功能<ul><li><input checked="" disabled="" type="checkbox"> 点击按钮粘贴</li><li><input checked="" disabled="" type="checkbox"> Ctrl + V粘贴</li></ul></li><li><input checked="" disabled="" type="checkbox"> 删除节点、连线功能<ul><li><input checked="" disabled="" type="checkbox"> 点击按钮删除</li><li><input checked="" disabled="" type="checkbox"> Ctrl + Backspace删除</li></ul></li><li><input checked="" disabled="" type="checkbox"> 置于顶层功能</li><li><input checked="" disabled="" type="checkbox"> 置于底层功能</li><li><input checked="" disabled="" type="checkbox"> 放大画布功能<ul><li><input checked="" disabled="" type="checkbox"> 点击按钮放大</li><li><input checked="" disabled="" type="checkbox"> 鼠标滚轮上滑</li></ul></li><li><input checked="" disabled="" type="checkbox"> 缩小画布功能<ul><li><input checked="" disabled="" type="checkbox"> 点击按钮缩小</li><li><input checked="" disabled="" type="checkbox"> 鼠标滚轮下滑</li></ul></li><li><input checked="" disabled="" type="checkbox"> 适应画布</li><li><input checked="" disabled="" type="checkbox"> 上传数据文件生成知识图谱功能</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文件数据格式</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;nodes&quot;</span>:[</span><br><span class="line">        &#123;<span class="string">&quot;id&quot;</span>: <span class="string">&quot;node1&quot;</span>, <span class="string">&quot;label&quot;</span>: <span class="string">&quot;luffy&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;id&quot;</span>: <span class="string">&quot;node2&quot;</span>, <span class="string">&quot;label&quot;</span>: <span class="string">&quot;24岁&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;id&quot;</span>: <span class="string">&quot;node3&quot;</span>, <span class="string">&quot;label&quot;</span>: <span class="string">&quot;62kg&quot;</span>&#125;</span><br><span class="line">        ...</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;edges&quot;</span>:[</span><br><span class="line">        &#123;<span class="string">&quot;source&quot;</span>: <span class="string">&quot;node1&quot;</span>, <span class="string">&quot;target&quot;</span>: <span class="string">&quot;node2&quot;</span>, <span class="string">&quot;label&quot;</span>: <span class="string">&quot;年龄&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;source&quot;</span>: <span class="string">&quot;node1&quot;</span>, <span class="string">&quot;target&quot;</span>: <span class="string">&quot;node3&quot;</span>, <span class="string">&quot;label&quot;</span>: <span class="string">&quot;体重&quot;</span>&#125;</span><br><span class="line">        ...</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> 导出图片功能</li><li><input checked="" disabled="" type="checkbox"> 导出JSON数据功能</li><li><input checked="" disabled="" type="checkbox"> 帮助</li></ul><p>感谢作者：<br>git：<a href="https://github.com/qiaolufei/kg_editor">https://github.com/qiaolufei/kg_editor</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://aimak.cn/kg_editor/index.html&quot;&gt;知识图谱编辑器链接&lt;/a&gt;&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;知识图谱编辑器(KG-Editor)&lt;/h1&gt;
&lt;div align=&quot;center&quot;&gt;

&lt;p&gt;基于 </summary>
      
    
    
    
    <category term="AI" scheme="http://ai.mak.cn/categories/AI/"/>
    
    
    <category term="知识图谱" scheme="http://ai.mak.cn/tags/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
  </entry>
  
  <entry>
    <title>通俗易懂的知识图谱技术与应用指南</title>
    <link href="http://ai.mak.cn/2022/12/12/ai/%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82%E7%9A%84%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://ai.mak.cn/2022/12/12/ai/%E9%80%9A%E4%BF%97%E6%98%93%E6%87%82%E7%9A%84%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8%E6%8C%87%E5%8D%97/</id>
    <published>2022-12-11T16:00:00.000Z</published>
    <updated>2023-02-03T01:41:09.755Z</updated>
    
    <content type="html"><![CDATA[<p>转载自 机器之心</p><h1 id="这是一份通俗易懂的知识图谱技术与应用指南"><a href="#这是一份通俗易懂的知识图谱技术与应用指南" class="headerlink" title="这是一份通俗易懂的知识图谱技术与应用指南"></a>这是一份通俗易懂的知识图谱技术与应用指南</h1><blockquote><p>从一开始的Google搜索，到现在的聊天机器人、大数据风控、证券投资、智能医疗、自适应教育、推荐系统，无一不跟知识图谱相关。它在技术领域的热度也在逐年上升。 本文以通俗易懂的方式来讲解知识图谱相关的知识、尤其对从零开始搭建知识图谱过程当中需要经历的步骤以及每个阶段需要考虑的问题都给予了比较详细的解释。 对于读者，我们不要求有任何AI相关的背景知识。</p></blockquote><p><strong>目录：</strong></p><blockquote><ol><li>概论</li><li>什么是知识图谱</li><li>知识图谱的表示</li><li>知识抽取</li><li>知识图谱的存储</li><li>金融知识图谱的搭建</li><li><ol><li>定义具体的业务问题</li><li>数据收集 &amp; 预处理</li><li>知识图谱的设计</li><li>把数据存入知识图谱</li><li>上层应用的开发</li></ol></li><li>知识图谱在其他行业中的应用</li><li>实践上的几点建议</li><li>结语</li></ol></blockquote><p><strong>1. 概论</strong></p><p>随着移动互联网的发展，万物互联成为了可能，这种互联所产生的数据也在爆发式地增长，而且这些数据恰好可以作为分析关系的有效原料。如果说以往的智能分析专注在每一个个体上，在移动互联网时代则除了个体，这种个体之间的关系也必然成为我们需要深入分析的很重要一部分。 在一项任务中，只要有关系分析的需求，知识图谱就“有可能”派的上用场。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/44edd4e8-bce9-4222-a0e2-667a6247b566/1529464461120.png"></p><p><strong>2. 什么是知识图谱？</strong></p><p>知识图谱是由Google公司在2012年提出来的一个新的概念。从学术的角度，我们可以对知识图谱给一个这样的定义：<strong>“知识图谱本质上是语义网络（Semantic Network）的知识库”</strong>。但这有点抽象，所以换个角度，从实际应用的角度出发其实<strong>可以简单地把知识图谱理解成多关系图（Multi-relational Graph）。</strong> </p><p>那什么叫多关系图呢？ 学过数据结构的都应该知道什么是图（Graph）。图是由节点（Vertex）和边（Edge）来构成，但这些图通常只包含一种类型的节点和边。但相反，<strong>多关系图一般包含多种类型的节点和多种类型的边</strong>。比如左下图表示一个经典的图结构，右边的图则表示多关系图，因为图里包含了多种类型的节点和边。这些类型由不同的颜色来标记。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/6c48a6ae-d3da-45e7-9ae5-dff162b14259/1529464461356.png"></p><p>﻿在知识图谱里，我们通常用“实体（Entity）”来表达图里的节点、用“关系（Relation）”来表达图里的“边”。<strong>实体****指的是现实世界中的事物比如人、地名、概念、药物、公司等</strong>，<strong>关系<strong><strong>则用来</strong></strong>表达不同实体之间的某种联系，</strong>比如人-“居住在”-北京、张三和李四是“朋友”、逻辑回归是深度学习的“先导知识”等等。</p><p>现实世界中的很多场景非常适合用知识图谱来表达。 比如一个社交网络图谱里，我们既可以有“人”的实体，也可以包含“公司”实体。人和人之间的关系可以是“朋友”，也可以是“同事”关系。人和公司之间的关系可以是“现任职”或者“曾任职”的关系。 类似的，一个风控知识图谱可以包含“电话”、“公司”的实体，电话和电话之间的关系可以是“通话”关系，而且每个公司它也会有固定的电话。 </p><p><img src="https://image.jiqizhixin.com/uploads/editor/37d26d3a-403f-46db-95ec-868807c40e72/1529464461243.png"></p><p><strong>3. 知识图谱的表示</strong></p><p><strong>知识图谱应用的前提是已经构建好了知识图谱</strong>，也可以把它认为是一个知识库。这也是为什么它可以用来回答一些搜索相关问题的原因，比如在Google搜索引擎里输入“Who is the wife of Bill Gates?”，我们直接可以得到答案-“Melinda Gates”。这是因为我们在系统层面上已经创建好了一个包含“Bill Gates”和“Melinda Gates”的实体以及他俩之间关系的知识库。所以，当我们执行搜索的时候，就可以通过关键词提取（”Bill Gates”, “Melinda Gates”, “wife”）以及知识库上的匹配可以直接获得最终的答案。这种搜索方式跟传统的搜索引擎是不一样的，一个传统的搜索引擎它返回的是网页、而不是最终的答案，所以就多了一层用户自己筛选并过滤信息的过程。  </p><p><img src="https://image.jiqizhixin.com/uploads/editor/feba145f-072a-4d3d-9a31-13fe3fd96d64/1529464461457.png"></p><p>﻿在现实世界中，实体和关系也会拥有各自的属性，比如人可以有“姓名”和“年龄”。<strong>当一个知识图谱拥有属性时，我们可以用属性图（Property Graph）来表示</strong>。下面的图表示一个简单的属性图。李明和李飞是父子关系，并且李明拥有一个138开头的电话号，这个电话号开通时间是2018年，其中2018年就可以作为关系的属性。类似的，李明本人也带有一些属性值比如年龄为25岁、职位是总经理等。 </p><p><img src="https://image.jiqizhixin.com/uploads/editor/37c1849a-26e6-4b37-8e77-e1d3190be1b9/1529464461565.png" alt="img"></p><p>﻿这种属性图的表达很贴近现实生活中的场景，也可以很好地描述业务中所包含的逻辑。除了属性图，知识图谱也可以用RDF来表示，它是由很多的三元组（Triples）来组成。RDF在设计上的主要特点是易于发布和分享数据，但不支持实体或关系拥有属性，如果非要加上属性，则在设计上需要做一些修改。目前来看，RDF主要还是用于学术的场景，在工业界我们更多的还是采用图数据库（比如用来存储属性图）的方式。感兴趣的读者可以参考RDF的相关文献，在文本里不多做解释。</p><p><strong>4. 知识抽取</strong></p><p>知识图谱的构建是后续应用的基础，而且构建的前提是需要把数据从不同的数据源中抽取出来。对于垂直领域的知识图谱来说，<strong>它们的数据源主要来自两种渠道：一种是业务本身的数据，这部分数据通常包含在公司内的数据库表并以结构化的方式存储；另一种是网络上公开、抓取的数据，这些数据通常是以网页的形式存在所以是非结构化的数据。</strong></p><p>前者一般只需要简单预处理即可以作为后续AI系统的输入，但后者一般需要借助于自然语言处理等技术来提取出结构化信息。比如在上面的搜索例子里，Bill Gates和Malinda Gate的关系就可以从非结构化数据中提炼出来，比如维基百科等数据源。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/1b15c7ec-db91-4e83-9f3c-dd929aba4251/1529464461642.png" alt="img"></p><p>信息抽取的难点在于处理非结构化数据。在下面的图中，我们给出了一个实例。左边是一段非结构化的英文文本，右边是从这些文本中抽取出来的实体和关系。在构建类似的图谱过程当中，主要涉及以下几个方面的自然语言处理技术：  </p><blockquote><p>a. 实体命名识别（Name Entity Recognition）   </p><p>b. 关系抽取（Relation Extraction）   </p><p>c. 实体统一（Entity Resolution）   </p><p>d. 指代消解（Coreference Resolution）</p></blockquote><p>下面针对每一项技术解决的问题做简单的描述，以至于这些是具体怎么实现的，不在这里一一展开，感兴趣的读者可以查阅相关资料，或者学习我的课程。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/6fa7f018-818d-4b56-9707-e912e43380ea/1529464462113.png" alt="img"></p><p>﻿首先是实体命名识别，就是从文本里提取出实体并对每个实体做分类&#x2F;打标签：比如从上述文本里，我们可以提取出实体-“NYC”，并标记实体类型为 “Location”；我们也可以从中提取出“Virgil’s BBQ”，并标记实体类型为“Restarant”。这种过程称之为实体命名识别，这是一项相对比较成熟的技术，有一些现成的工具可以用来做这件事情。其次，我们可以通过关系抽取技术，把实体间的关系从文本中提取出来，比如实体“hotel”和“Hilton property”之间的关系为“in”；“hotel”和“Time Square”的关系为“near”等等。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/6a5b9af1-4ff8-48f0-a8d5-8160cac10749/1529464461751.png" alt="img"></p><p>﻿另外，在实体命名识别和关系抽取过程中，有两个比较棘手的问题：一个是实体统一，也就是说有些实体写法上不一样，但其实是指向同一个实体。比如“NYC”和“New York”表面上是不同的字符串，但其实指的都是纽约这个城市，需要合并。实体统一不仅可以减少实体的种类，也可以降低图谱的稀疏性（Sparsity）；另一个问题是指代消解，也是文本中出现的“it”, “he”, “she”这些词到底指向哪个实体，比如在本文里两个被标记出来的“it”都指向“hotel”这个实体。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/1aba276c-39c3-48af-9748-7b47d9555518/1529464462241.png" alt="img"></p><p>实体统一和指代消解问题相对于前两个问题更具有挑战性。</p><p><strong>5. 知识图谱的存储</strong></p><p><strong>知识图谱主要有两种存储方式：一种是基于RDF的存储；另一种是基于图数据库的存储。</strong>它们之间的区别如下图所示。RDF一个重要的设计原则是数据的易发布以及共享，图数据库则把重点放在了高效的图查询和搜索上。其次，RDF以三元组的方式来存储数据而且不包含属性信息，但图数据库一般以属性图为基本的表示形式，所以实体和关系可以包含属性，这就意味着更容易表达现实的业务场景。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/6d23ee75-a606-46ac-9e00-3320a870c0e8/1529464461822.png" alt="img"></p><p>﻿根据最新的统计（2018年上半年），图数据库仍然是增长最快的存储系统。相反，关系型数据库的增长基本保持在一个稳定的水平。同时，我们也列出了常用的图数据库系统以及他们最新使用情况的排名。 其中Neo4j系统目前仍是使用率最高的图数据库，它拥有活跃的社区，而且系统本身的查询效率高，但唯一的不足就是不支持准分布式。相反，OrientDB和JanusGraph（原Titan）支持分布式，但这些系统相对较新，社区不如Neo4j活跃，这也就意味着使用过程当中不可避免地会遇到一些刺手的问题。如果选择使用RDF的存储系统，Jena或许一个比较不错的选择。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/c6767f42-c6cc-4ab2-a3d6-0f8c5b099e98/1529464462467.png" alt="img"></p><p><strong>6. 金融知识图谱的搭建</strong></p><p>接下来我们看一个实际的具体案例，讲解怎么一步步搭建可落地的金融风控领域的知识图谱系统。 首先需要说明的一点是，有可能不少人认为搭建一个知识图谱系统的重点在于算法和开发。但事实并不是想象中的那样，<strong>其实最重要的核心在于对业务的理解以及对知识图谱本身的设计</strong>，这就类似于对于一个业务系统，数据库表的设计尤其关键，而且这种设计绝对离不开对业务的深入理解以及对未来业务场景变化的预估。 当然，在这里我们先不讨论数据的重要性。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/904976bb-9e2e-42f6-b05e-bf6165da7599/1529464461970.png" alt="img"></p><p>一个完整的知识图谱的构建包含以下几个步骤：<strong>1. 定义具体的业务问题  2. 数据的收集 &amp; 预处理  3. 知识图谱的设计  4. 把数据存入知识图谱 5. 上层应用的开发，以及系统的评估。</strong>下面我们就按照这个流程来讲一下每个步骤所需要做的事情以及需要思考的问题。 </p><p><strong>6.1 定义具体的业务问题</strong></p><p>在P2P网贷环境下，最核心的问题是风控，也就是怎么去评估一个借款人的风险。在线上的环境下，欺诈风险尤其为严重，而且很多这种风险隐藏在复杂的关系网络之中，而且知识图谱正好是为这类问题所设计的，所以我们“有可能”期待它能在欺诈，这个问题上带来一些价值。 </p><p><img src="https://image.jiqizhixin.com/uploads/editor/1e5128bd-4184-42e9-8007-fcd81df3b7c2/1529464462563.png" alt="img"></p><p>在进入下一个话题的讨论之前，<strong>要明确的一点是，对于自身的业务问题到底需不需要知识图谱系统的支持</strong>。因为在很多的实际场景，即使对关系的分析有一定的需求，实际上也可以利用传统数据库来完成分析的。所以为了避免使用知识图谱而选择知识图谱，以及更好的技术选型，以下给出了几点总结，供参考。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/6eb56c75-30b2-44ac-9444-9ea328c17d44/1529464462653.png" alt="img"></p><p><strong>6.2 数据收集 &amp; 预处理</strong></p><p>下一步就是要确定数据源以及做必要的数据预处理。针对于数据源，我们需要考虑以下几点：1. 我们已经有哪些数据？ 2. 虽然现在没有，但有可能拿到哪些数据？ 3.  其中哪部分数据可以用来降低风险？ 4. 哪部分数据可以用来构建知识图谱？在这里需要说明的一点是，并不是所有跟反欺诈相关的数据都必须要进入知识图谱，对于这部分的一些决策原则在接下来的部分会有比较详细的介绍。</p><p>对于反欺诈，有几个数据源是我们很容易想得到的，包括用户的基本信息、行为数据、运营商数据、网络上的公开信息等等。假设我们已经有了一个数据源的列表清单，则下一步就要看哪些数据需要进一步的处理，比如对于非结构化数据我们或多或少都需要用到跟自然语言处理相关的技术。 用户填写的基本信息基本上会存储在业务表里，除了个别字段需要进一步处理，很多字段则直接可以用于建模或者添加到知识图谱系统里。对于行为数据来说，我们则需要通过一些简单的处理，并从中提取有效的信息比如“用户在某个页面停留时长”等等。 对于网络上公开的网页数据，则需要一些信息抽取相关的技术。</p><p>举个例子，对于用户的基本信息，我们很可能需要如下的操作。一方面，用户信息比如姓名、年龄、学历等字段可以直接从结构化数据库中提取并使用。但另一方面，对于填写的公司名来说，我们有可能需要做进一步的处理。比如部分用户填写“北京贪心科技有限公司”，另外一部分用户填写“北京望京贪心科技有限公司”，其实指向的都是同一家公司。所以，这时候我们需要做公司名的对齐，用到的技术细节可以参考前面讲到的实体对齐技术。﻿</p><p><img src="https://image.jiqizhixin.com/uploads/editor/8c99bd01-74e5-4368-b061-79a684ab18f6/1529464462813.png" alt="img"></p><p><strong>6.3 知识图谱的设计</strong></p><p>图谱的设计是一门艺术，不仅要对业务有很深的理解、也需要对未来业务可能的变化有一定预估，从而设计出最贴近现状并且性能高效的系统。在知识图谱设计的问题上，我们肯定会面临以下几个常见的问题：<strong>1. 需要哪些实体、关系和属性？ 2.  哪些属性可以做为实体，哪些实体可以作为属性？ 3. 哪些信息不需要放在知识图谱中？</strong> </p><p>基于这些常见的问题，我们从以往的设计经验中抽象出了一系列的设计原则。这些设计原则就类似于传统数据库设计中的范式，来引导相关人员设计出更合理的知识图谱系统，同时保证系统的高效性。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/96151c9c-e707-4913-83b9-897ea5ef75a7/1529464462717.png" alt="img"></p><p>接下来，我们举几个简单的例子来说明其中的一些原则。 首先是，业务原则（Business Principle），它的含义是 “<strong>一切要从业务逻辑出发，并且通过观察知识图谱的设计也很容易推测其背后业务的逻辑，而且设计时也要想好未来业务可能的变化</strong>”。</p><p>举个例子，可以观察一下下面这个图谱，并试问自己背后的业务逻辑是什么。通过一番观察，其实也很难看出到底业务流程是什么样的。做个简单的解释，这里的实体-“申请”意思就是application，如果对这个领域有所了解，其实就是进件实体。在下面的图中，申请和电话实体之间的“has_phone”，“parent phone”是什么意思呢？</p><p><img src="https://image.jiqizhixin.com/uploads/editor/4655bb9e-3bd0-4acf-bb81-f7d9825facc3/1529464462891.png" alt="img"></p><p>﻿接下来再看一下下面的图，跟之前的区别在于我们把申请人从原有的属性中抽取出来并设置成了一个单独的实体。在这种情况下，整个业务逻辑就变得很清晰，我们很容易看出张三申请了两个贷款，而且张三拥有两个手机号，在申请其中一个贷款的时候他填写了父母的电话号。总而言之，一个好的设计很容易让人看到业务本身的逻辑。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/f3fa7ea6-bf85-48fb-8583-4525e05d9074/1529464463668.png" alt="img"></p><p>﻿接下来再看一个原则叫做效率原则（Efficiency Principle）。 <strong>效率原则让知识图谱尽量轻量化、并决定哪些数据放在知识图谱，哪些数据不需要放在知识图谱</strong>。在这里举一个简单的类比，在经典的计算机存储系统中，我们经常会谈论到内存和硬盘，内存作为高效的访问载体，作为所有程序运行的关键。这种存储上的层次结构设计源于数据的局部性-“locality”，也就是说经常被访问到的数据集中在某一个区块上，所以这部分数据可以放到内存中来提升访问的效率。 类似的逻辑也可以应用到知识图谱的设计上：我们把常用的信息存放在知识图谱中，把那些访问频率不高，对关系分析无关紧要的信息放在传统的关系型数据库当中。 <strong>效率原则的核心在于把知识图谱设计成小而轻的存储载体。</strong></p><p><img src="https://image.jiqizhixin.com/uploads/editor/42886c3e-3217-4d6c-b936-1a954c3f487b/1529464463032.png" alt="img"></p><p>比如在下面的知识图谱中，我们完全可以把一些信息比如“年龄”，“家乡”放到传统的关系型数据库当中，因为这些数据对于：a. 分析关系来说没有太多作用  b.  访问频率低，放在知识图谱上反而影响效率</p><p><img src="https://image.jiqizhixin.com/uploads/editor/64b1545a-f4cc-492c-a519-f4b749576b26/1529464463095.png" alt="img"></p><p>另外，从分析原则（Analytics Principle）的角度，我们不需要把跟关系分析无关的实体放在图谱当中；从冗余原则（Redundancy Principle）的角度，有些重复性信息、高频信息可以放到传统数据库当中。</p><p><strong>6.4 把数据存入知识图谱</strong></p><p>存储上我们要面临存储系统的选择，但由于我们设计的知识图谱带有属性，图数据库可以作为首选。但至于选择哪个图数据库也要看业务量以及对效率的要求。如果数据量特别庞大，则Neo4j很可能满足不了业务的需求，这时候不得不去选择支持准分布式的系统比如OrientDB, JanusGraph等，或者通过效率、冗余原则把信息存放在传统数据库中，从而减少知识图谱所承载的信息量。 通常来讲，对于10亿节点以下规模的图谱来说Neo4j已经足够了。</p><p><strong>6.5 上层应用的开发</strong></p><p>等我们构建好知识图谱之后，接下来就要使用它来解决具体的问题。对于风控知识图谱来说，首要任务就是挖掘关系网络中隐藏的欺诈风险。<strong>从算法的角度来讲，有两种不同的场景：一种是基于规则的；另一种是基于概率的</strong>。鉴于目前AI技术的现状，基于规则的方法论还是在垂直领域的应用中占据主导地位，但随着数据量的增加以及方法论的提升，基于概率的模型也将会逐步带来更大的价值。</p><p><strong>6.5.1 基于规则的方法论</strong></p><p>首先，我们来看几个基于规则的应用，分别是不一致性验证、基于规则的特征提取、基于模式的判断。</p><p><strong>不一致性验证</strong></p><p>为了判断关系网络中存在的风险，一种简单的方法就是做不一致性验证，也就是通过一些规则去找出潜在的矛盾点。这些规则是以人为的方式提前定义好的，所以在设计规则这个事情上需要一些业务的知识。比如在下面的这个图中，李明和李飞两个人都注明了同样的公司电话，但实际上从数据库中判断这俩人其实在不同的公司上班，这就是一个矛盾点。 类似的规则其实可以有很多，不在这里一一列出。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/4048d065-a6b1-41e3-b5fa-87f198332f87/1529464463189.png" alt="img"></p><p><strong>基于规则提取特征</strong></p><p>我们也可以基于规则从知识图谱中提取一些特征，而且这些特征一般基于深度的搜索比如2度，3度甚至更高维度。比如我们可以问一个这样的问题：“申请人二度关系里有多少个实体触碰了黑名单？”，从图中我们很容观察到二度关系中有两个实体触碰了黑名单（黑名单由红色来标记）。等这些特征被提取之后，一般可以作为风险模型的输入。在此还是想说明一点，如果特征并不涉及深度的关系，其实传统的关系型数据库则足以满足需求。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/f70ba882-fe80-4adf-96c2-14839d40a6b2/1529464464276.png" alt="img"></p><p><strong>基于模式的判断</strong></p><p>这种方法比较适用于找出团体欺诈，它的核心在于通过一些模式来找到有可能存在风险的团体或者子图（sub-graph），然后对这部分子图做进一步的分析。 这种模式有很多种，在这里举几个简单的例子。 比如在下图中，三个实体共享了很多其他的信息，我们可以看做是一个团体，并对其做进一步的分析。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/8d3d1e12-22a9-4ed2-ac6f-99cbb255c1e0/1529464464353.png" alt="img"></p><p>﻿再比如，我们也可以从知识图谱中找出强连通图，并把它标记出来，然后做进一步风险分析。强连通图意味着每一个节点都可以通过某种路径达到其他的点，也就说明这些节点之间有很强的关系。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/b7cb2ec4-0963-4814-9357-2976c326c4e9/1529464464587.png" alt="img"></p><p><strong>6.5.2 基于概率的方法</strong></p><p>除了基于规则的方法，也可以使用概率统计的方法。 比如社区挖掘、标签传播、聚类等技术都属于这个范畴。 对于这类技术，在本文里不做详细的讲解，感兴趣的读者可以参考相关文献。</p><p>社区挖掘算法的目的在于从图中找出一些社区。对于社区，我们可以有多种定义，但直观上可以理解为社区内节点之间关系的密度要明显大于社区之间的关系密度。下面的图表示社区发现之后的结果，图中总共标记了三个不同的社区。一旦我们得到这些社区之后，就可以做进一步的风险分析。</p><p>由于社区挖掘是基于概率的方法论，好处在于不需要人为地去定义规则，特别是对于一个庞大的关系网络来说，定义规则这事情本身是一件很复杂的事情。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/68e693a4-dd50-4eea-8fac-2e2496a86198/1529464464702.png" alt="img"></p><p>﻿标签传播算法的核心思想在于节点之间信息的传递。这就类似于，跟优秀的人在一起自己也会逐渐地变优秀是一个道理。因为通过这种关系会不断地吸取高质量的信息，最后使得自己也会不知不觉中变得更加优秀。具体细节不在这里做更多解释。</p><p>相比规则的方法论，基于概率的方法的缺点在于：需要足够多的数据。如果数据量很少，而且整个图谱比较稀疏（Sparse），基于规则的方法可以成为我们的首选。尤其是对于金融领域来说，数据标签会比较少，这也是为什么基于规则的方法论还是更普遍地应用在金融领域中的主要原因。</p><p><strong>6.5.3 基于动态网络的分析</strong></p><p>以上所有的分析都是基于静态的关系图谱。所谓的静态关系图谱，意味着我们不考虑图谱结构本身随时间的变化，只是聚焦在当前知识图谱结构上。然而，我们也知道图谱的结构是随时间变化的，而且这些变化本身也可以跟风险有所关联。</p><p>在下面的图中，我们给出了一个知识图谱T时刻和T+1时刻的结构，我们很容易看出在这两个时刻中间，图谱结构（或者部分结构）发生了很明显的变化，这其实暗示着潜在的风险。那怎么去判断这些结构上的变化呢？ 感兴趣的读者可以查阅跟“dynamic network mining”相关的文献。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/234a79cb-4ad6-4fce-8cd2-9d1b116d09d1/1529464464458.png" alt="img"></p><p><strong>7. 知识图谱在其他行业中的应用</strong></p><p>除了金融领域，知识图谱的应用可以涉及到很多其他的行业，包括医疗、教育、证券投资、推荐等等。其实，只要有关系存在，则有知识图谱可发挥价值的地方。 在这里简单举几个垂直行业中的应用。</p><p>比如对于教育行业，我们经常谈论个性化教育、因材施教的理念。其核心在于理解学生当前的知识体系，而且这种知识体系依赖于我们所获取到的数据比如交互数据、评测数据、互动数据等等。为了分析学习路径以及知识结构，我们则需要针对于一个领域的概念知识图谱，简单来讲就是概念拓扑结构。在下面的图中，我们给出了一个非常简单的概念图谱：比如为了学习逻辑回归则需要先理解线性回归；为了学习CNN，得对神经网络有所理解等等。所有对学生的评测、互动分析都离不开概念图谱这个底层的数据。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/fd58f009-b075-487b-af57-5a67e64b281e/1529464464517.png" alt="img"></p><p>﻿在证券领域，我们经常会关心比如“一个事件发生了，对哪些公司产生什么样的影响？” 比如有一个负面消息是关于公司1的高管，而且我们知道公司1和公司2有种很密切的合作关系，公司2有个主营产品是由公司3提供的原料基础上做出来的。</p><p><img src="https://image.jiqizhixin.com/uploads/editor/b1748709-0808-46df-b5e9-8efd413412ed/1529464465164.png" alt="img"></p><p>其实有了这样的一个知识图谱，我们很容易回答哪些公司有可能会被这次的负面事件所影响。当然，仅仅是“有可能”，具体会不会有强相关性必须由数据来验证。所以在这里，知识图谱的好处就是把我们所需要关注的范围很快给我们圈定。接下来的问题会更复杂一些，比如既然我们知道公司3有可能被这次事件所影响，那具体影响程度有多大？ 对于这个问题，光靠知识图谱是很难回答的，必须要有一个影响模型、以及需要一些历史数据才能在知识图谱中做进一步推理以及计算。</p><p><strong>8. 实践上的几点建议</strong></p><p>首先，知识图谱是一个比较新的工具，它的主要作用还是在于分析关系，尤其是深度的关系。所以在业务上，首先要确保它的必要性，其实很多问题可以用非知识图谱的方式来解决。</p><p>知识图谱领域一个最重要的话题是知识的推理。 而且知识的推理是走向强人工智能的必经之路。但很遗憾的，目前很多语义网络的角度讨论的推理技术（比如基于深度学习，概率统计）很难在实际的垂直应用中落地。其实目前最有效的方式还是基于一些规则的方法论，除非我们有非常庞大的数据集。</p><p>最后，还是要强调一点，<strong>知识图谱工程本身还是业务为重心，以数据为中心。不要低估业务和数据的重要性。</strong></p><p><strong>9. 结语</strong></p><p>知识图谱是一个既充满挑战而且非常有趣的领域。只要有正确的应用场景，对于知识图谱所能发挥的价值还是可以期待的。我相信在未来不到2，3年时间里，知识图谱技术会普及到各个领域当中。</p><p>很多细节性的内容很难在一篇文章里面面俱到、如果想对知识图谱领域有更全面的了解，并且快速开发出一款可落地的知识图谱产品，可以参考我近期推出的《知识图谱技术与应用》课程。在课程里，我会详细地给大家介绍怎么从零开始一步步搭建完整的知识图谱系统，并把每一个细节中遇到的问题以及坑给大家讲解。</p><p>对文章内容有任何疑问的读者可添加本文作者微信（liwenzhe595675）沟通交流。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;转载自 机器之心&lt;/p&gt;
&lt;h1 id=&quot;这是一份通俗易懂的知识图谱技术与应用指南&quot;&gt;&lt;a href=&quot;#这是一份通俗易懂的知识图谱技术与应用指南&quot; class=&quot;headerlink&quot; title=&quot;这是一份通俗易懂的知识图谱技术与应用指南&quot;&gt;&lt;/a&gt;这是一份通俗易懂的知</summary>
      
    
    
    
    <category term="AI" scheme="http://ai.mak.cn/categories/AI/"/>
    
    
    <category term="知识图谱" scheme="http://ai.mak.cn/tags/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
  </entry>
  
  <entry>
    <title>神经网络与深度学习参考</title>
    <link href="http://ai.mak.cn/2022/12/11/ai/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B9%A6%E7%B1%8D%E4%BF%A1%E6%81%AF%E5%8F%82%E8%80%83/"/>
    <id>http://ai.mak.cn/2022/12/11/ai/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B9%A6%E7%B1%8D%E4%BF%A1%E6%81%AF%E5%8F%82%E8%80%83/</id>
    <published>2022-12-10T16:00:00.000Z</published>
    <updated>2023-02-02T11:58:28.675Z</updated>
    
    <content type="html"><![CDATA[<p>作者：<a href="https://xpqiu.github.io/">邱锡鹏</a>  知乎：<a href="https://www.zhihu.com/people/xpqiu">@邱锡鹏</a></p><p>学习推荐</p><p><strong>神经网络与深度学习</strong></p><h2 id="关于本书"><a href="#关于本书" class="headerlink" title="关于本书"></a>关于本书</h2><p>近年来，以机器学习、知识图谱为代表的人工智能技术逐渐变得普及。从车牌识别、人脸识别、语音识别、智能助手、推荐系统到自动驾驶，人们在日常生活中都可能有意无意地用到了人工智能技术。这些技术的背后都离不开人工智能领域研究者的长期努力。特别是最近这几年，得益于数据的增多、计算能力的增强、学习算法的成熟以及应用场景的丰富，越来越多的人开始关注这个“崭新”的研究领域：深度学习。深度学习以神经网络为主要模型，一开始用来解决机器学习中的表示学习问题。但是由于其强大的能力，深度学习越来越多地用来解决一些通用人工智能问题，比如推理、决策等。目前，深度学习技术在学术界和工业界取得了广泛的成功，受到高度重视，并掀起新一轮的人工智能热潮。</p><p>主要特点：</p><p>系统性：系统地整理了神经网络和深度学习的知识体系。鉴于深度学习涉及的知识点较多，本书从机器学习的基本概念、神经网络模型以及概率图模型三个层面来串联深度学习所涉及的知识点，使读者对深度学习技术的理解更具系统性、条理性和全面性。</p><p>可读性：本书在编排上由浅入深，在语言表达上力求通俗易懂，并通过增加图例、示例以及必要的数学推导来理解抽象的概念。同时，附录简要介绍了本书所涉及的必要数学知识，便于读者查用。</p><p>实践性：本书在网站上配套了针对每章知识点的编程练习，使得读者在学习过程中可以将理论和实践密切结合，加深对知识点的理解，并具备分析问题和解决问题的能力。</p><p><img src="https://nndl.github.io/nndl2.jpg" alt="img"></p><h3 id="纸质书购买连接"><a href="#纸质书购买连接" class="headerlink" title="纸质书购买连接"></a>纸质书购买连接</h3><p><strong>蒲公英书</strong>：<a href="https://item.jd.com/12851292.html">京东</a> <a href="http://union.dangdang.com/transfer.php?from=P-340342&ad_type=10&sys_id=1&backurl=http://product.dangdang.com/28538371.html">当当</a>   <strong>蒲公英书实践篇</strong>：<a href="https://item.jd.com/13262435.html">京东</a> <a href="http://product.dangdang.com/29439138.html?_ddclickunion=P-295132-57139_64_0__1%7Cad_type=0%7Csys_id=1#dd_refer=https%3A%2F%2Fc.duomai.com%2Ftrack.php%3Fsite_id%3D57139%26aid%3D64%26euid%3D%26t%3Dhttp%3A%2F%2Fproduct.dangdang.com%2F29439138.html">当当</a> <strong>套装</strong>：<a href="https://item.jd.com/13345599.html">京东</a> <a href="http://product.dangdang.com/29449496.html">当当</a> </p><p>要获取更新提醒，请关注<a href="https://github.com/nndl/nndl.github.io">https://github.com/nndl/nndl.github.io</a></p><p>课后习题分享讨论：<a href="https://github.com/nndl/solutions">https://github.com/nndl/solutions</a></p><p><strong>配套实践</strong>（new）：<a href="https://github.com/nndl/practice-in-paddle/">https://github.com/nndl/practice-in-paddle/</a></p><p>豆瓣评分：<a href="https://book.douban.com/subject/33409947/">https://book.douban.com/subject/33409947/</a></p><p><em>蒲公英封面:希望这本教材能够帮助更多的学生进入深度学习以及人工智能领域，他们会为人工智能领域注入新的生机与活力。</em></p><h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p><strong>全书内容</strong> <a href="https://nndl.github.io/nndl-book.pdf">pdf</a> (updated 2021-05-18) （推荐用iPad阅读）</p><p>更新说明：<a href="https://github.com/nndl/nndl.github.io">https://github.com/nndl/nndl.github.io</a></p><p>《神经网络与深度学习》印刷版 <a href="https://nndl.github.io/errata.html">勘误表</a> </p><p>《神经网络与深度学习》3小时课程概要  <a href="https://nndl.github.io/ppt/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-3%E5%B0%8F%E6%97%B6.pptx">ppt</a>(72M)   <a href="https://nndl.github.io/ppt/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-3%E5%B0%8F%E6%97%B6.pdf">pdf</a> (12M) </p><h3 id="章节内容"><a href="#章节内容" class="headerlink" title="章节内容"></a>章节内容</h3><ol><li>绪论[<a href="https://nndl.github.io/ppt/chap-%E7%BB%AA%E8%AE%BA.pptx">ppt</a>] </li><li>机器学习概述  [<a href="https://nndl.github.io/ppt/chap-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%BF%B0.pptx">ppt</a>] </li><li>线性模型 [<a href="https://nndl.github.io/ppt/chap-%E7%BA%BF%E6%80%A7%E6%A8%A1%E5%9E%8B.pptx">ppt</a>]  </li><li>前馈神经网络 [<a href="https://nndl.github.io/ppt/chap-%E5%89%8D%E9%A6%88%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.pptx">ppt</a>] </li><li>卷积神经网络 [<a href="https://nndl.github.io/ppt/chap-%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.pptx">ppt</a>]  </li><li>循环神经网络 [<a href="https://nndl.github.io/ppt/chap-%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.pptx">ppt</a>]   </li><li>网络优化与正则化  [<a href="https://nndl.github.io/ppt/chap-%E7%BD%91%E7%BB%9C%E4%BC%98%E5%8C%96%E4%B8%8E%E6%AD%A3%E5%88%99%E5%8C%96.pptx">ppt</a>]  </li><li>注意力机制与外部记忆 [<a href="https://nndl.github.io/ppt/chap-%E6%B3%A8%E6%84%8F%E5%8A%9B%E6%9C%BA%E5%88%B6%E4%B8%8E%E5%A4%96%E9%83%A8%E8%AE%B0%E5%BF%86.pptx">ppt</a>]  </li><li>无监督学习 [<a href="https://nndl.github.io/ppt/chap-%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0.pptx">ppt</a>] </li><li>模型独立的学习方式 [<a href="https://nndl.github.io/ppt/chap-%E6%A8%A1%E5%9E%8B%E7%8B%AC%E7%AB%8B%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%96%B9%E5%BC%8F.pptx">ppt</a>] </li><li>概率图模型 [<a href="https://nndl.github.io/ppt/chap-%E6%A6%82%E7%8E%87%E5%9B%BE%E6%A8%A1%E5%9E%8B.pptx">ppt</a>] </li><li>深度信念网络 [<a href="https://nndl.github.io/ppt/chap-%E6%B7%B1%E5%BA%A6%E4%BF%A1%E5%BF%B5%E7%BD%91%E7%BB%9C.pptx">ppt</a>] </li><li>深度生成模型[<a href="https://nndl.github.io/ppt/chap-%E6%B7%B1%E5%BA%A6%E7%94%9F%E6%88%90%E6%A8%A1%E5%9E%8B.pptx">ppt</a>] </li><li>深度强化学习  [<a href="https://nndl.github.io/ppt/chap-%E6%B7%B1%E5%BA%A6%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0.pptx">ppt</a>] </li><li>序列生成模型 [<a href="https://nndl.github.io/ppt/chap-%E5%BA%8F%E5%88%97%E7%94%9F%E6%88%90%E6%A8%A1%E5%9E%8B.pptx">ppt</a>]     一个过时版本：<a href="https://nndl.github.io/old-chap/chap-%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E4%B8%8E%E8%AF%8D%E5%B5%8C%E5%85%A5.pdf">词嵌入与语言模型</a></li><li>数学基础</li></ol><h2 id="引用信息"><a href="#引用信息" class="headerlink" title="引用信息"></a>引用信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">邱锡鹏，神经网络与深度学习，机械工业出版社，https://nndl.github.io/, 2020.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@book&#123;qiu2020nndl,</span><br><span class="line">title = &#123;神经网络与深度学习&#125;,</span><br><span class="line">publisher = &#123;机械工业出版社&#125;,</span><br><span class="line">year = &#123;2020&#125;,</span><br><span class="line">author = &#123;邱锡鹏&#125;,</span><br><span class="line">address = &#123;北京&#125;,</span><br><span class="line">isbn = &#123;9787111649687&#125;,</span><br><span class="line">url = &#123;https://nndl.github.io/&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="反馈意见"><a href="#反馈意见" class="headerlink" title="反馈意见"></a>反馈意见</h2><p>如果您有任何意见、评论以及建议（先确认最新版本中是否已经修正），请通过GitHub的<a href="https://github.com/nndl/nndl.github.io/issues">Issues</a>页面进行反馈。如果错误比较重要，我会在本书中进行致谢。</p><p>反馈意见包括但不限于：（因为分开排版关系，页码错误请忽略。）</p><ul><li>打字错误</li><li>描述错误: 比如“感知器是非线性分类器”</li><li>评论</li><li>建议</li></ul><p>非常感谢！</p><p>致谢列表：感谢王利锋、林同茂、张钧瑞、李浩、胡可鑫、韦鹏辉、徐国海、侯宇蓬、任强、王少敬、肖耀、李鹏等同学指出书中的错误。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;作者：&lt;a href=&quot;https://xpqiu.github.io/&quot;&gt;邱锡鹏&lt;/a&gt;  知乎：&lt;a href=&quot;https://www.zhihu.com/people/xpqiu&quot;&gt;@邱锡鹏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;学习推荐&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;神经网络与深</summary>
      
    
    
    
    <category term="AI" scheme="http://ai.mak.cn/categories/AI/"/>
    
    
    <category term="深度学习" scheme="http://ai.mak.cn/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>运营商知识图谱的学习研究参考材料</title>
    <link href="http://ai.mak.cn/2022/12/10/ai/%E8%BF%90%E8%90%A5%E5%95%86%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%A0%94%E7%A9%B6%E5%8F%82%E8%80%83%E6%9D%90%E6%96%99/"/>
    <id>http://ai.mak.cn/2022/12/10/ai/%E8%BF%90%E8%90%A5%E5%95%86%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%A0%94%E7%A9%B6%E5%8F%82%E8%80%83%E6%9D%90%E6%96%99/</id>
    <published>2022-12-09T16:00:00.000Z</published>
    <updated>2023-02-02T11:50:07.760Z</updated>
    
    <content type="html"><![CDATA[<p>整理知识图谱相关的学习参考资料</p><ul><li><p><a href="https://image.c114.com.cn/file/ys202010-07.pdf">基于知识图谱的智能故障诊断研究</a></p></li><li><p><a href="https://www.doc88.com/p-62929791080827.html">电信运营商知识图谱技术体系研究及应用实践_赵东明</a></p></li><li><p><a href="http://www.c114.com.cn/news/118/a1132678.html">以知识图谱技术驱动场景化运营，提升存量运营和客户服务质量</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;整理知识图谱相关的学习参考资料&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://image.c114.com.cn/file/ys202010-07.pdf&quot;&gt;基于知识图谱的智能故障诊断研究&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;ht</summary>
      
    
    
    
    <category term="AI" scheme="http://ai.mak.cn/categories/AI/"/>
    
    
    <category term="知识图谱" scheme="http://ai.mak.cn/tags/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
  </entry>
  
  <entry>
    <title>八然</title>
    <link href="http://ai.mak.cn/2022/12/09/%E6%9D%82%E8%AE%B0/%E6%9D%8E%E5%8F%94%E5%90%8C%E5%85%AB%E7%84%B6/"/>
    <id>http://ai.mak.cn/2022/12/09/%E6%9D%82%E8%AE%B0/%E6%9D%8E%E5%8F%94%E5%90%8C%E5%85%AB%E7%84%B6/</id>
    <published>2022-12-08T16:00:00.000Z</published>
    <updated>2022-12-12T12:25:49.560Z</updated>
    
    <content type="html"><![CDATA[<p>不知是不是李叔同写的，但还是记录一下～</p><p>每个人的人生都有“八然”：</p><p>来是偶然，去是必然；<br>得之坦然，失之淡然<br>争取必然，近其当然<br>忙时井然，闲时自然；</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;不知是不是李叔同写的，但还是记录一下～&lt;/p&gt;
&lt;p&gt;每个人的人生都有“八然”：&lt;/p&gt;
&lt;p&gt;来是偶然，去是必然；&lt;br&gt;得之坦然，失之淡然&lt;br&gt;争取必然，近其当然&lt;br&gt;忙时井然，闲时自然；&lt;/p&gt;
</summary>
      
    
    
    
    <category term="杂记" scheme="http://ai.mak.cn/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="杂记" scheme="http://ai.mak.cn/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
</feed>
