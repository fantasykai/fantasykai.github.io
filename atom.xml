<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>枫哲&#39;s文栖小筑</title>
  
  <subtitle>君子终日乾乾，夕惕若厉，无咎</subtitle>
  <link href="http://ai.mak.cn/atom.xml" rel="self"/>
  
  <link href="http://ai.mak.cn/"/>
  <updated>2024-12-17T09:20:18.392Z</updated>
  <id>http://ai.mak.cn/</id>
  
  <author>
    <name>fantasykai</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>机器学习-调参总结</title>
    <link href="http://ai.mak.cn/2024/04/14/ai/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E8%B0%83%E5%8F%82%E6%80%BB%E7%BB%93/"/>
    <id>http://ai.mak.cn/2024/04/14/ai/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-%E8%B0%83%E5%8F%82%E6%80%BB%E7%BB%93/</id>
    <published>2024-04-13T16:00:00.000Z</published>
    <updated>2024-12-17T09:20:18.392Z</updated>
    
    <content type="html"><![CDATA[<h1 id="机器学习-调参总结"><a href="#机器学习-调参总结" class="headerlink" title="机器学习-调参总结"></a>机器学习-调参总结</h1><p><code>超参数调优</code>是机器学习例程中的基本步骤之一。该方法也称为<code>超参数优化</code>，需要搜索超参数的最佳配置以实现最佳性能。</p><p>机器学习算法需要用户定义的输入来实现准确性和通用性之间的平衡。这个过程称为超参数调整。有多种工具和方法可用于调整超参数。</p><blockquote><p>原文出处：<a href="https://analyticsindiamag.com/top-8-approaches-for-tuning-hyperparameters-of-machine-learning-models/">https://analyticsindiamag.com/top-8-approaches-for-tuning-hyperparameters-of-machine-learning-models/</a></p></blockquote><p>本文整理了一份用于调整机器学习模型超参数的前八种方法的列表。</p><h2 id="1-贝叶斯优化"><a href="#1-贝叶斯优化" class="headerlink" title="1 贝叶斯优化"></a>1 贝叶斯优化</h2><p>贝叶斯优化已成为机器学习算法超参数调整的有效工具，更具体地说，适用于深度神经网络等复杂模型。</p><p>它提供了一个有效的框架来优化昂贵的黑盒功能，而无需知道它的形式。它已应用于多个领域，包括学习最优机器人力学、序列实验设计和合成基因设计。</p><h2 id="2-遗传算法"><a href="#2-遗传算法" class="headerlink" title="2 遗传算法"></a>2 遗传算法</h2><p>遗传算法 (EA) 是一种优化算法，它通过根据称为算子的某些规则修改一组候选解决方案（种群）来工作。</p><p>EA 的主要优势之一是它们的通用性：这意味着 EA 可以在广泛的条件下使用，因为它们简单且独立于潜在问题。在超参数调整问题中，遗传算法已被证明比基于精度&#x2F;速度的网格搜索技术表现更好。</p><h2 id="3-基于梯度的优化"><a href="#3-基于梯度的优化" class="headerlink" title="3 基于梯度的优化"></a>3 基于梯度的优化</h2><p>基于梯度的优化是一种优化多个超参数的方法，基于机器学习模型选择标准相对于超参数的梯度计算。</p><p>当满足训练标准的一些可微性和连续性条件时，可以应用这种超参数调整方法。</p><h2 id="4-网格搜索"><a href="#4-网格搜索" class="headerlink" title="4 网格搜索"></a>4 网格搜索</h2><p>网格搜索是超参数调优的基本方法。它对用户指定的超参数集执行详尽的搜索。这种方法是最直接的导致最准确的预测。</p><p>使用这种调优方法，用户可以找到最佳组合。网格搜索适用于几个超参数，但是搜索空间有限。</p><h2 id="5-Keras-Tuner"><a href="#5-Keras-Tuner" class="headerlink" title="5 Keras Tuner"></a>5 Keras Tuner</h2><p>Keras Tuner是一个库，允许用户为机器学习或深度学习模型找到最佳超参数。</p><p>该库有助于查找内核大小、优化学习率和不同的超参数。Keras Tuner可用于为各种深度学习模型获取最佳参数，以实现最高精度。</p><h2 id="6-基于种群的优化"><a href="#6-基于种群的优化" class="headerlink" title="6 基于种群的优化"></a>6 基于种群的优化</h2><p>基于种群的方法本质上是一系列基于随机搜索（如遗传算法）的方法。</p><p>最广泛使用的基于种群的方法之一是 DeepMind 提出的基于种群的训练（PBT）。PBT在两个方面，是一种独特的方法：</p><ul><li>它允许在训练期间使用自适应超参数</li><li>它结合了并行搜索和顺序优化</li></ul><h2 id="7-ParamILS"><a href="#7-ParamILS" class="headerlink" title="7 ParamILS"></a>7 ParamILS</h2><p>ParamILS（参数配置空间中的迭代局部搜索）是一种用于自动算法配置的通用随机局部搜索方法。ParamILS 是一种自动算法配置方法，有助于开发高性能算法及其应用程序。</p><p>ParamILS 使用默认和随机设置进行初始化，并采用迭代第一改进作为辅助本地搜索过程。它还使用固定数量的随机移动来进行扰动，并且总是接受更好或同样好的参数配置，但会随机重新初始化搜索。</p><h2 id="8-随机搜索"><a href="#8-随机搜索" class="headerlink" title="8 随机搜索"></a>8 随机搜索</h2><p>随机搜索可以说是对网格搜索的基本改进。该方法是指对可能参数值的某些分布的超参数进行随机搜索。</p><p>搜索过程继续进行，直到达到所需的精度。随机搜索类似于网格搜索，但已证明比后者创建更好的结果。</p><p>该方法通常被用作 HPO 的基线来衡量新设计算法的效率。尽管随机搜索比网格搜索更有效，但它仍然是一种计算密集型方法。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;机器学习-调参总结&quot;&gt;&lt;a href=&quot;#机器学习-调参总结&quot; class=&quot;headerlink&quot; title=&quot;机器学习-调参总结&quot;&gt;&lt;/a&gt;机器学习-调参总结&lt;/h1&gt;&lt;p&gt;&lt;code&gt;超参数调优&lt;/code&gt;是机器学习例程中的基本步骤之一。该方法也称为&lt;c</summary>
      
    
    
    
    <category term="AI" scheme="http://ai.mak.cn/categories/AI/"/>
    
    
    <category term="深度学习" scheme="http://ai.mak.cn/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Mac安装多个JDK版本</title>
    <link href="http://ai.mak.cn/2024/04/10/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/Mac%20%E5%90%8C%E6%97%B6%E5%AE%89%E8%A3%85JDK%E5%A4%9A%E7%89%88%E6%9C%AC/"/>
    <id>http://ai.mak.cn/2024/04/10/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/Mac%20%E5%90%8C%E6%97%B6%E5%AE%89%E8%A3%85JDK%E5%A4%9A%E7%89%88%E6%9C%AC/</id>
    <published>2024-04-09T16:00:00.000Z</published>
    <updated>2024-04-10T06:21:03.061Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>目前很多java应用使用到了jdk8，jdk11，jdk17等不同的版本，Mac上需要安装多个版本，并方便切换</p></blockquote><h3 id="下载JDK"><a href="#下载JDK" class="headerlink" title="下载JDK"></a>下载JDK</h3><p>官方网站：<a href="https://www.oracle.com/cn/java/technologies/downloads/#jdk17-mac">Java Downloads</a> | Oracle</p><p>根据mac芯片是intel还是apple进行不同版本下载：</p><ul><li>ARM64 DMG Installer 苹果M，芯片</li><li>x64 DMG Installer Intel 芯片</li></ul><h3 id="查看安装目录"><a href="#查看安装目录" class="headerlink" title="查看安装目录"></a>查看安装目录</h3><p>安装pkg文件后，打开终端窗口，查看我们安装的 JDK 版本</p><ul><li><p>访问 JDK 安装目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /Library/Java/JavaVirtualMachines</span><br></pre></td></tr></table></figure></li><li><p>查看安装的 JDK 版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al</span><br></pre></td></tr></table></figure></li></ul><p>可以看到安装了两个版本 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls -lrt</span><br><span class="line">drwxr-xr-x  3 root  wheel  96  8 22  2017 jdk1.8.0_144.jdk</span><br><span class="line">drwxr-xr-x  3 root  wheel  96  4 10 10:25 jdk-17.jdk</span><br></pre></td></tr></table></figure><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>3.1 打开环境变量文件</p><ul><li><p>输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br></pre></td></tr></table></figure></li><li><p>打开环境变量配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi/subl等 .bash_profile</span><br></pre></td></tr></table></figure><p>3.2 配置 JDK 多版本环境变量</p></li><li><p>复制如下内容粘贴到.bash_profile中，</p></li><li><p>因为我是安装了三个，所以配置了三个版本</p></li><li><p>自己是安装了几个版本就配置几个</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_8_HOME=$(/usr/libexec/java_home -v1.8)</span><br><span class="line">export JAVA_11_HOME=$(/usr/libexec/java_home -v11)</span><br><span class="line">export JAVA_17_HOME=$(/usr/libexec/java_home -v17)</span><br><span class="line"></span><br><span class="line">alias java8=&#x27;export JAVA_HOME=$JAVA_8_HOME&#x27;</span><br><span class="line">alias java11=&#x27;export JAVA_HOME=$JAVA_11_HOME&#x27;</span><br><span class="line">alias java17=&#x27;export JAVA_HOME=$JAVA_17_HOME&#x27;</span><br><span class="line"></span><br><span class="line">export JAVA_HOME=$JAVA_11_HOME</span><br></pre></td></tr></table></figure></li><li><p>保存</p></li><li><p>3.3 检查环境变量</p></li><li><p>配置文件立即生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source .bash_profile</span><br></pre></td></tr></table></figure></li><li><p>查看 JAVA_HOME 目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $JAVA_HOME</span><br></pre></td></tr></table></figure></li><li><p>查看 JDK 版本信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure></li></ul><ol start="4"><li>JDK 版本切换<br>我们定义了个别名：java8，和java17，其中默认配置为 jdk11。</li></ol><p>相互切换，在终端中输入命令即可，如下</p><ul><li><p>切换到JDK8：<br>java8 </p></li><li><p>查看 JDK 版本信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure></li><li><p>切换到JDK11：<br>java11</p></li></ul><h1 id="查看-JDK-版本信息"><a href="#查看-JDK-版本信息" class="headerlink" title="查看 JDK 版本信息"></a>查看 JDK 版本信息</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><ul><li>切换到JDK17：<br>java17</li></ul><h1 id="查看-JDK-版本信息-1"><a href="#查看-JDK-版本信息-1" class="headerlink" title="查看 JDK 版本信息"></a>查看 JDK 版本信息</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>————————————————</p><p>原文链接：<a href="https://blog.csdn.net/Zhaoruifeng158/article/details/135832564">https://blog.csdn.net/Zhaoruifeng158/article/details/135832564</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;目前很多java应用使用到了jdk8，jdk11，jdk17等不同的版本，Mac上需要安装多个版本，并方便切换&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;下载JDK&quot;&gt;&lt;a href=&quot;#下载JDK&quot; class=&quot;headerlink&quot;</summary>
      
    
    
    
    <category term="工具" scheme="http://ai.mak.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="mac" scheme="http://ai.mak.cn/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>基于神经网络的网络流量预测</title>
    <link href="http://ai.mak.cn/2024/03/26/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/%E5%9F%BA%E4%BA%8E%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E9%A2%84%E6%B5%8B/"/>
    <id>http://ai.mak.cn/2024/03/26/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/%E5%9F%BA%E4%BA%8E%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E9%A2%84%E6%B5%8B/</id>
    <published>2024-03-25T16:00:00.000Z</published>
    <updated>2024-03-29T07:32:30.409Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-背景介绍"><a href="#1-背景介绍" class="headerlink" title="1.背景介绍"></a>1.背景介绍</h1><p>随着互联网的不断发展，网络流量预测已经成为一项重要的技术，用于优化网络资源分配、提高网络性能和可靠性。传统的流量预测方法主要基于统计学和机器学习，但这些方法在处理复杂网络流量数据时存在一定局限性。深度学习技术在近年来迅速发展，已经成功应用于多个领域，包括图像识别、自然语言处理、语音识别等。因此，研究深度学习在网络流量预测中的应用具有重要意义。</p><p>本文将从以下几个方面进行阐述：</p><ol><li>背景介绍</li><li>核心概念与联系</li><li>核心算法原理和具体操作步骤以及数学模型公式详细讲解</li><li>具体代码实例和详细解释说明</li><li>未来发展趋势与挑战</li><li>附录常见问题与解答</li></ol><h1 id="2-核心概念与联系"><a href="#2-核心概念与联系" class="headerlink" title="2. 核心概念与联系"></a>2. 核心概念与联系</h1><p>网络流量预测是指根据历史网络流量数据，预测未来网络流量的大小和趋势。这项技术在网络规划、运营和管理中具有重要意义，可以帮助网络管理员更有效地分配网络资源、提高网络性能和可靠性。</p><p>深度学习是一种人工智能技术，通过模拟人类大脑的学习和思维过程，使计算机能够从数据中自动学习出模式和规律。深度学习技术在图像识别、自然语言处理、语音识别等领域取得了显著的成功，因此在网络流量预测领域也有广泛的应用前景。</p><h1 id="3-核心算法原理和具体操作步骤以及数学模型公式详细讲解"><a href="#3-核心算法原理和具体操作步骤以及数学模型公式详细讲解" class="headerlink" title="3. 核心算法原理和具体操作步骤以及数学模型公式详细讲解"></a>3. 核心算法原理和具体操作步骤以及数学模型公式详细讲解</h1><p>深度学习在网络流量预测中主要应用于以下几种算法：</p><ol><li>卷积神经网络（CNN）</li><li>循环神经网络（RNN）</li><li>长短期记忆网络（LSTM）</li><li>自编码器（Autoencoder）</li><li>卷积递归神经网络（CRNN）</li></ol><p>下面我们将逐一详细介绍这些算法的原理、步骤和数学模型。</p><h2 id="1-卷积神经网络（CNN）"><a href="#1-卷积神经网络（CNN）" class="headerlink" title="1. 卷积神经网络（CNN）"></a>1. 卷积神经网络（CNN）</h2><p>卷积神经网络（Convolutional Neural Networks，CNN）是一种深度学习算法，主要应用于图像和音频等二维和一维数据的处理。在网络流量预测中，CNN可以用于处理时间序列数据，以捕捉流量数据中的时间特征。</p><p>CNN的主要组件包括卷积层、池化层和全连接层。卷积层用于对输入数据进行卷积操作，以提取特征；池化层用于对卷积层的输出进行下采样，以减少参数数量和计算复杂度；全连接层用于对池化层的输出进行分类。</p><p>在网络流量预测中，CNN的具体操作步骤如下：</p><ol><li>数据预处理：将原始流量数据进行归一化处理，以减少计算复杂度和提高模型性能。</li><li>构建CNN模型：根据问题需求选择合适的CNN结构，包括卷积层、池化层和全连接层的数量和大小。</li><li>训练模型：使用历史流量数据训练CNN模型，以学习出流量特征。</li><li>预测流量：使用训练好的CNN模型对未来流量数据进行预测。</li></ol><h2 id="2-循环神经网络（RNN）"><a href="#2-循环神经网络（RNN）" class="headerlink" title="2. 循环神经网络（RNN）"></a>2. 循环神经网络（RNN）</h2><p>循环神经网络（Recurrent Neural Networks，RNN）是一种能够处理序列数据的深度学习算法。在网络流量预测中，RNN可以用于处理时间序列数据，以捕捉流量数据中的时间特征。</p><p>RNN的主要组件包括隐藏层和输出层。隐藏层用于存储和更新序列数据，输出层用于输出预测结果。RNN的主要优势在于可以捕捉序列数据中的长距离依赖关系，但其主要缺点是难以处理长序列数据，容易出现梯度消失问题。</p><p>在网络流量预测中，RNN的具体操作步骤如下：</p><ol><li>数据预处理：将原始流量数据进行归一化处理，以减少计算复杂度和提高模型性能。</li><li>构建RNN模型：根据问题需求选择合适的RNN结构，包括隐藏层和输出层的数量和大小。</li><li>训练模型：使用历史流量数据训练RNN模型，以学习出流量特征。</li><li>预测流量：使用训练好的RNN模型对未来流量数据进行预测。</li></ol><h2 id="3-长短期记忆网络（LSTM）"><a href="#3-长短期记忆网络（LSTM）" class="headerlink" title="3. 长短期记忆网络（LSTM）"></a>3. 长短期记忆网络（LSTM）</h2><p>长短期记忆网络（Long Short-Term Memory，LSTM）是一种特殊的RNN，具有内部状态和门机制，可以更好地处理长序列数据。在网络流量预测中，LSTM可以用于处理时间序列数据，以捕捉流量数据中的时间特征。</p><p>LSTM的主要组件包括输入门、遗忘门、输出门和内部状态。这些门机制可以控制信息的进入、保留和输出，从而解决RNN中的梯度消失问题。</p><p>在网络流量预测中，LSTM的具体操作步骤如下：</p><ol><li>数据预处理：将原始流量数据进行归一化处理，以减少计算复杂度和提高模型性能。</li><li>构建LSTM模型：根据问题需求选择合适的LSTM结构，包括隐藏层和输出层的数量和大小。</li><li>训练模型：使用历史流量数据训练LSTM模型，以学习出流量特征。</li><li>预测流量：使用训练好的LSTM模型对未来流量数据进行预测。</li></ol><h2 id="4-自编码器（Autoencoder）"><a href="#4-自编码器（Autoencoder）" class="headerlink" title="4. 自编码器（Autoencoder）"></a>4. 自编码器（Autoencoder）</h2><p>自编码器（Autoencoder）是一种深度学习算法，主要应用于降维和生成任务。在网络流量预测中，自编码器可以用于处理时间序列数据，以捕捉流量数据中的时间特征。</p><p>自编码器的主要组件包括编码层和解码层。编码层用于对输入数据进行编码，以提取特征；解码层用于对编码后的数据进行解码，以重构原始数据。自编码器的目标是使解码后的数据与原始数据最小化差异。</p><p>在网络流量预测中，自编码器的具体操作步骤如下：</p><ol><li>数据预处理：将原始流量数据进行归一化处理，以减少计算复杂度和提高模型性能。</li><li>构建自编码器模型：根据问题需求选择合适的自编码器结构，包括编码层和解码层的数量和大小。</li><li>训练模型：使用历史流量数据训练自编码器模型，以学习出流量特征。</li><li>预测流量：使用训练好的自编码器模型对未来流量数据进行预测。</li></ol><h2 id="5-卷积递归神经网络（CRNN）"><a href="#5-卷积递归神经网络（CRNN）" class="headerlink" title="5. 卷积递归神经网络（CRNN）"></a>5. 卷积递归神经网络（CRNN）</h2><p>卷积递归神经网络（Convolutional Recurrent Neural Networks，CRNN）是一种结合卷积神经网络和循环神经网络的深度学习算法。在网络流量预测中，CRNN可以用于处理时间序列数据，以捕捉流量数据中的时间特征。</p><p>CRNN的主要组件包括卷积层、池化层、隐藏层和输出层。卷积层用于对输入数据进行卷积操作，以提取特征；池化层用于对卷积层的输出进行下采样，以减少参数数量和计算复杂度；隐藏层用于存储和更新序列数据；输出层用于输出预测结果。</p><p>在网络流量预测中，CRNN的具体操作步骤如下：</p><ol><li>数据预处理：将原始流量数据进行归一化处理，以减少计算复杂度和提高模型性能。</li><li>构建CRNN模型：根据问题需求选择合适的CRNN结构，包括卷积层、池化层、隐藏层和输出层的数量和大小。</li><li>训练模型：使用历史流量数据训练CRNN模型，以学习出流量特征。</li><li>预测流量：使用训练好的CRNN模型对未来流量数据进行预测。</li></ol><h1 id="4-具体代码实例和详细解释说明"><a href="#4-具体代码实例和详细解释说明" class="headerlink" title="4. 具体代码实例和详细解释说明"></a>4. 具体代码实例和详细解释说明</h1><p>在本节中，我们将通过一个简单的例子来演示如何使用Python和Keras库实现网络流量预测。</p><p>首先，安装所需的库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash</span><br><span class="line">复制代码pip install numpy pandas keras tensorflow</span><br></pre></td></tr></table></figure><p>然后，准备数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">复制代码<span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> MinMaxScaler</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载数据</span></span><br><span class="line">data = pd.read_csv(<span class="string">&#x27;flow_data.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择时间序列数据</span></span><br><span class="line">time_series = data[<span class="string">&#x27;flow&#x27;</span>].values</span><br><span class="line"></span><br><span class="line"><span class="comment"># 归一化数据</span></span><br><span class="line">scaler = MinMaxScaler()</span><br><span class="line">time_series = scaler.fit_transform(time_series.reshape(-<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分割数据</span></span><br><span class="line">look_back = <span class="number">60</span></span><br><span class="line">X, y = [], []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(look_back, <span class="built_in">len</span>(time_series)):</span><br><span class="line">    X.append(time_series[i-look_back:i, <span class="number">0</span>])</span><br><span class="line">    y.append(time_series[i, <span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">X, y = np.array(X), np.array(y)</span><br><span class="line">X = np.reshape(X, (X.shape[<span class="number">0</span>], X.shape[<span class="number">1</span>], <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分割训练集和测试集</span></span><br><span class="line">train_size = <span class="built_in">int</span>(<span class="built_in">len</span>(X) * <span class="number">0.8</span>)</span><br><span class="line">X_train, X_test = X[:train_size], X[train_size:]</span><br><span class="line">y_train, y_test = y[:train_size], y[train_size:]</span><br></pre></td></tr></table></figure><p>接下来，构建模型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">复制代码<span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense, LSTM</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建LSTM模型</span></span><br><span class="line">model = Sequential()</span><br><span class="line">model.add(LSTM(<span class="number">50</span>, activation=<span class="string">&#x27;relu&#x27;</span>, input_shape=(X_train.shape[<span class="number">1</span>], <span class="number">1</span>)))</span><br><span class="line">model.add(Dense(<span class="number">1</span>))</span><br><span class="line">model.<span class="built_in">compile</span>(optimizer=<span class="string">&#x27;adam&#x27;</span>, loss=<span class="string">&#x27;mse&#x27;</span>)</span><br></pre></td></tr></table></figure><p>然后，训练模型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">复制代码model.fit(X_train, y_train, epochs=<span class="number">100</span>, batch_size=<span class="number">32</span>)</span><br></pre></td></tr></table></figure><p>最后，预测流量：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">复制代码predicted_flow = model.predict(X_test)</span><br><span class="line">predicted_flow = scaler.inverse_transform(predicted_flow)</span><br></pre></td></tr></table></figure><h1 id="5-未来发展趋势与挑战"><a href="#5-未来发展趋势与挑战" class="headerlink" title="5. 未来发展趋势与挑战"></a>5. 未来发展趋势与挑战</h1><p>随着深度学习技术的不断发展，网络流量预测将会面临以下几个挑战：</p><ol><li>数据不足和质量问题：网络流量数据通常是大量的、高维的、不均匀的，这会增加预测模型的难度。未来，需要开发更高效的数据预处理和增强技术，以提高模型性能。</li><li>模型复杂性和计算成本：深度学习模型通常具有较高的参数数量和计算复杂度，这会增加训练和预测的时间和资源消耗。未来，需要开发更简洁的模型结构和更高效的计算方法，以提高模型性能和可扩展性。</li><li>多源数据集成：网络流量数据通常来自多个不同的源，如路由器、交换机、服务器等。未来，需要开发更智能的数据集成和融合技术，以提高预测准确性。</li><li>实时预测和自适应调整：网络流量是时间序列数据，其特征和模式可能会随着时间的推移发生变化。未来，需要开发更智能的实时预测和自适应调整技术，以提高预测准确性和可靠性。</li></ol><h1 id="6-附录常见问题与解答"><a href="#6-附录常见问题与解答" class="headerlink" title="6. 附录常见问题与解答"></a>6. 附录常见问题与解答</h1><p>Q: 深度学习在网络流量预测中的优势是什么？</p><p>A: 深度学习在网络流量预测中的优势主要体现在以下几个方面：</p><ol><li>能够捕捉时间序列数据中的复杂特征，以提高预测准确性。</li><li>能够自动学习出流量特征，无需人工特征工程。</li><li>能够处理大量、高维的数据，提高模型性能。</li><li>能够实现实时预测和自适应调整，提高预测可靠性。</li></ol><p>Q: 深度学习在网络流量预测中的局限性是什么？</p><p>A: 深度学习在网络流量预测中的局限性主要体现在以下几个方面：</p><ol><li>需要大量的训练数据，可能会导致过拟合和欠拟合问题。</li><li>模型参数数量和计算复杂度较高，可能会导致训练和预测的时间和资源消耗。</li><li>模型解释性较差，可能会导致预测结果的可解释性问题。</li></ol><p>Q: 如何选择合适的深度学习算法？</p><p>A: 选择合适的深度学习算法需要考虑以下几个因素：</p><ol><li>问题类型：根据问题类型选择合适的深度学习算法，如图像识别、自然语言处理、语音识别等。</li><li>数据特征：根据数据特征选择合适的深度学习算法，如时间序列数据、空间数据、文本数据等。</li><li>模型性能：根据模型性能选择合适的深度学习算法，如准确性、召回率、F1分数等。</li><li>计算资源：根据计算资源选择合适的深度学习算法，如GPU、TPU、CPU等。</li></ol><h1 id="7-参考文献"><a href="#7-参考文献" class="headerlink" title="7. 参考文献"></a>7. 参考文献</h1><p>[1] Goodfellow, I., Bengio, Y., &amp; Courville, A. (2016). Deep Learning. MIT Press.</p><p>[2] Chollet, F. (2017). Deep Learning with Python. Manning Publications Co.</p><p>[3] Zhou, H., &amp; Liu, B. (2018). A Comprehensive Survey on Deep Learning for Traffic Prediction. arXiv preprint arXiv:1809.03160.</p><p>[4] Wang, Y., Zhang, Y., &amp; Zhang, J. (2017). Deep Learning for Network Traffic Prediction. arXiv preprint arXiv:1703.06856.</p><p>[5] LSTM: Long Short-Term Memory. (n.d.). Retrieved from <a href="https://link.juejin.cn/?target=https://keras.io/layers/recurrent/%23lstm">keras.io&#x2F;layers&#x2F;recu…</a></p><p>[6] CRNN: Convolutional Recurrent Neural Networks. (n.d.). Retrieved from <a href="https://link.juejin.cn/?target=https://keras.io/examples/cnn/%23convolutional-recurrent-neural-networks-crnn">keras.io&#x2F;examples&#x2F;cn…</a></p><p>[7] Autoencoder. (n.d.). Retrieved from <a href="https://link.juejin.cn/?target=https://keras.io/examples/generative/autoencoder/">keras.io&#x2F;examples&#x2F;ge…</a></p><p>[8] MinMaxScaler. (n.d.). Retrieved from <a href="https://link.juejin.cn/?target=https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MinMaxScaler.html">scikit-learn.org&#x2F;stable&#x2F;modu…</a></p><p>[9] TensorFlow. (n.d.). Retrieved from <a href="https://link.juejin.cn/?target=https://www.tensorflow.org/">www.tensorflow.org/</a></p><p>[10] Keras. (n.d.). Retrieved from <a href="https://link.juejin.cn/?target=https://keras.io/">keras.io&#x2F;</a></p><p>[11] Pandas. (n.d.). Retrieved from <a href="https://link.juejin.cn/?target=https://pandas.pydata.org/pandas-docs/stable/index.html">pandas.pydata.org&#x2F;pandas-docs…</a></p><p>[12] NumPy. (n.d.). Retrieved from <a href="https://link.juejin.cn/?target=https://numpy.org/doc/stable/index.html">numpy.org&#x2F;doc&#x2F;stable&#x2F;…</a></p><p>[13] Scikit-learn. (n.d.). Retrieved from <a href="https://link.juejin.cn/?target=https://scikit-learn.org/stable/index.html">scikit-learn.org&#x2F;stable&#x2F;inde…</a></p><p>[14] TensorFlow: A Scalable Machine Learning Framework for Everyone. (2015). Retrieved from <a href="https://link.juejin.cn/?target=https://www.tensorflow.org/overview">www.tensorflow.org/overview</a></p><p>[15] Chollet, F. (2015). Deep Learning with TensorFlow. O’Reilly Media.</p><p>[16] Goodfellow, I., Bengio, Y., &amp; Courville, A. (2016). Deep Learning. MIT Press.</p><p>[17] LeCun, Y., Bengio, Y., &amp; Hinton, G. (2015). Deep Learning. Nature, 521(7553), 436-444.</p><p>[18] Bengio, Y. (2009). Learning Deep Architectures for AI. Foundations and Trends® in Machine Learning, 2(1-5), 1-142.</p><p>[19] Schmidhuber, J. (2015). Deep Learning in Neural Networks: An Introduction. arXiv preprint arXiv:1505.00091.</p><p>[20] Hochreiter, S., &amp; Schmidhuber, J. (1997). Long Short-Term Memory. Neural Computation, 9(8), 1735-1780.</p><p>[21] Xing, J., Cui, Y., &amp; Tong, H. (2015). Convolutional Recurrent Neural Networks. arXiv preprint arXiv:1503.00315.</p><p>[22] Bengio, Y., Courville, A., &amp; Vincent, P. (2012). Deep Learning. Foundations and Trends® in Machine Learning, 3(1-5), 1-316.</p><p>[23] Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., … &amp; Bengio, Y. (2014). Generative Adversarial Networks. arXiv preprint arXiv:1406.2661.</p><p>[24] Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., … &amp; Bengio, Y. (2014). Generative Adversarial Networks. arXiv preprint arXiv:1406.2661.</p><p>[25] Hinton, G., Srivastava, N., Krizhevsky, A., Sutskever, I., &amp; Salakhutdinov, R. (2012). Deep Learning. Nature, 489(7416), 242-243.</p><p>[26] LeCun, Y., Bottou, L., Bengio, Y., &amp; Hinton, G. (2015). Deep Learning. Nature, 521(7553), 436-444.</p><p>[27] Bengio, Y. (2009). Learning Deep Architectures for AI. Foundations and Trends® in Machine Learning, 2(1-5), 1-142.</p><p>[28] Schmidhuber, J. (2015). Deep Learning in Neural Networks: An Introduction. arXiv preprint arXiv:1505.00091.</p><p>[29] Hochreiter, S., &amp; Schmidhuber, J. (1997). Long Short-Term Memory. Neural Computation, 9(8), 1735-1780.</p><p>[30] Xing, J., Cui, Y., &amp; Tong, H. (2015). Convolutional Recurrent Neural Networks. arXiv preprint arXiv:1503.00315.</p><p>[31] Bengio, Y., Courville, A., &amp; Vincent, P. (2012). Deep Learning. Foundations and Trends® in Machine Learning, 3(1-5), 1-316.</p><p>[32] Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., … &amp; Bengio, Y. (2014). Generative Adversarial Networks. arXiv preprint arXiv:1406.2661.</p><p>[33] Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., … &amp; Bengio, Y. (2014). Generative Adversarial Networks. arXiv preprint arXiv:1406.2661.</p><p>[34] Hinton, G., Srivastava, N., Krizhevsky, A., Sutskever, I., &amp; Salakhutdinov, R. (2012). Deep Learning. Nature, 489(7416), 242-243.</p><p>[35] LeCun, Y., Bottou, L., Bengio, Y., &amp; Hinton, G. (2015). Deep Learning. Nature, 521(7553), 436-444.</p><p>[36] Bengio, Y. (2009). Learning Deep Architectures for AI. Foundations and Trends® in Machine Learning, 2(1-5), 1-142.</p><p>[37] Schmidhuber, J. (2015). Deep Learning in Neural Networks: An Introduction. arXiv preprint arXiv:1505.00091.</p><p>[38] Hochreiter, S., &amp; Schmidhuber, J. (1997). Long Short-Term Memory. Neural Computation, 9(8), 1735-1780.</p><p>[39] Xing, J., Cui, Y., &amp; Tong, H. (2015). Convolutional Recurrent Neural Networks. arXiv preprint arXiv:1503.00315.</p><p>[40] Bengio, Y., Courville, A., &amp; Vincent, P. (2012). Deep Learning. Foundations and Trends® in Machine Learning, 3(1-5), 1-316.</p><p>[41] Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., … &amp; Bengio, Y. (2014). Generative Adversarial Networks. arXiv preprint arXiv:1406.2661.</p><p>[42] Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., … &amp; Bengio, Y. (2014). Generative Adversarial Networks. arXiv preprint arXiv:1406.2661.</p><p>[43] Hinton, G., Srivastava, N., Krizhevsky, A., Sutskever, I., &amp; Salakhutdinov, R. (2012). Deep Learning. Nature, 489(7416), 242-243.</p><p>[44] LeCun, Y., Bottou, L., Bengio, Y., &amp; Hinton, G. (2015). Deep Learning. Nature, 521(7553), 436-444.</p><p>[45] Bengio, Y. (2009). Learning Deep Architectures for AI. Foundations and Trends® in Machine Learning, 2(1-5), 1-142.</p><p>[46] Schmidhuber, J. (2015). Deep Learning in Neural Networks: An Introduction. arXiv preprint arXiv:1505.00091.</p><p>[47] Hochreiter, S., &amp; Schmidhuber, J. (1997). Long Short-Term Memory. Neural Computation, 9(8), 1735-1780.</p><p>[48] Xing, J., Cui, Y., &amp; Tong, H. (2015). Convolutional Recurrent Neural Networks. arXiv preprint arXiv:1503.00315.</p><p>[49] Bengio, Y., Courville, A., &amp; Vincent, P. (2012). Deep Learning. Foundations and Trends® in Machine Learning, 3(1-5), 1-316.</p><p>[50] Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., … &amp; Bengio, Y. (2014). Generative Adversarial Networks. arXiv preprint arXiv:1406.2661.</p><p>[51] Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., … &amp; Bengio, Y. (2014). Generative Adversarial Networks. arXiv preprint arXiv:1406.2661.</p><p>[52] Hinton, G., Srivastava, N., Krizhevsky, A., Sutskever, I., &amp; Salakhutdinov, R. (2012). Deep Learning. Nature, 489(7416), 242-243.</p><p>[53] LeCun, Y., Bottou, L., Bengio, Y., &amp; Hinton, G. (2015). Deep Learning. Nature, 521(7553), 436-444.</p><p>[54] Bengio, Y. (2009). Learning Deep Architectures for AI. Foundations and Trends® in Machine Learning, 2(1-5), 1-142.</p><p>[55] Schmidhuber, J. (2015). Deep Learning in Neural Networks: An Introduction. arXiv preprint arXiv:1505.00091.</p><p>[56] Hochreiter, S., &amp; Schmidhuber, J. (1997). Long Short-Term Memory. Neural Computation, 9(8), 1735-1780.</p><p>[57] Xing, J., Cui, Y., &amp; Tong, H. (2015). Convolutional Recurrent Neural Networks. arXiv preprint arXiv:1503.00315.</p><p>[58] Bengio, Y., Courville, A., &amp; Vincent, P. (2012). Deep Learning. Foundations and Trends® in Machine Learning, 3(1-5), 1-316.</p><p>[59] Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., … &amp; Bengio, Y. (2014). Generative Adversarial Networks. arXiv preprint arXiv:1406.2661.</p><p>[60] Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., … &amp; Bengio, Y. (2014). Generative Adversarial Networks. arXiv preprint arXiv:1406.2661.</p><p>[61] Hinton, G., Srivastava, N., Krizhevsky, A., Sutskever, I., &amp; Salakhutdinov, R. (2012). Deep Learning. Nature, 489(7416), 242-243.</p><p>[62] LeCun, Y., Bottou, L., Bengio, Y., &amp; Hinton, G. (2015). Deep Learning. Nature, 521(7553), 436-444.</p><p>[63] Bengio, Y. (2009). Learning Deep Architectures for AI. Foundations and Trends® in Machine Learning, 2(1-5), 1-142.</p><p>[64] Schmidhuber, J. (2015). Deep Learning in Neural Networks: An Introduction. arXiv preprint arXiv:1505.00091.</p><p>[65] Hochreiter, S., &amp; Schmidhuber, J. (1997). Long Short-Term Memory. Neural Computation, 9(8), 1735-1780.</p><p>[66] Xing, J., Cui, Y., &amp; Tong, H. (2015). Convolutional Recurrent Neural Networks. arXiv preprint arXiv:1503.0031</p><p>作者：OpenChat<br>链接：<a href="https://juejin.cn/post/7325129599447531570">https://juejin.cn/post/7325129599447531570</a><br>来源：稀土掘金</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-背景介绍&quot;&gt;&lt;a href=&quot;#1-背景介绍&quot; class=&quot;headerlink&quot; title=&quot;1.背景介绍&quot;&gt;&lt;/a&gt;1.背景介绍&lt;/h1&gt;&lt;p&gt;随着互联网的不断发展，网络流量预测已经成为一项重要的技术，用于优化网络资源分配、提高网络性能和可靠性。传统的</summary>
      
    
    
    
    <category term="AI" scheme="http://ai.mak.cn/categories/AI/"/>
    
    
    <category term="深度学习" scheme="http://ai.mak.cn/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>如何理解 LSTM神经网络模型</title>
    <link href="http://ai.mak.cn/2024/02/27/ai/%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%20LSTM%20%E7%BD%91%E7%BB%9C/"/>
    <id>http://ai.mak.cn/2024/02/27/ai/%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%20LSTM%20%E7%BD%91%E7%BB%9C/</id>
    <published>2024-02-26T16:00:00.000Z</published>
    <updated>2024-05-28T07:08:56.412Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转载 <a href="https://colah.github.io/posts/2015-08-Understanding-LSTMs/">https://colah.github.io/posts/2015-08-Understanding-LSTMs/</a></p></blockquote><h1 id="如何理解-LSTM神经网络模型"><a href="#如何理解-LSTM神经网络模型" class="headerlink" title="如何理解 LSTM神经网络模型"></a>如何理解 LSTM神经网络模型</h1><h2 id="循环神经网络"><a href="#循环神经网络" class="headerlink" title="循环神经网络"></a>循环神经网络</h2><p>人类不会每分每秒都从头开始思考。当你阅读这篇文章时，你会根据对前面单词的理解来理解每个单词。你不会抛弃一切，重新从头开始思考。你的思想具有持久性。</p><p>传统的神经网络无法做到这一点，这似乎是一个重大缺陷。例如，假设你想对电影中每个时刻发生的事件进行分类。目前还不清楚传统的神经网络如何利用其对电影中先前事件的推理来指导后续事件。</p><p>循环神经网络解决了这个问题。它们是具有循环的网络，可使信息持久存在。</p><p><img src="https://colah.github.io/posts/2015-08-Understanding-LSTMs/img/RNN-rolled.png" alt="img"></p><p><strong>循环神经网络</strong></p><p>在上图中，神经网络的一个部分，A，查看一些输入<code>X_t</code>，并输出一个值<code>h_t</code>. 循环允许信息从网络的一个步骤传递到下一个步骤。</p><p>这些循环使得循环神经网络看起来有些神秘。但是，如果你再仔细想想，就会发现它们与普通神经网络并没有太大区别。循环神经网络可以看作是同一网络的多个副本，每个副本都会向后继者传递一条消息。考虑一下如果我们展开循环会发生什么：</p><p><img src="https://colah.github.io/posts/2015-08-Understanding-LSTMs/img/RNN-unrolled.png" alt="展开的循环神经网络。"></p><p><strong>展开的循环神经网络。</strong></p><p>这种链式特性表明循环神经网络与序列和列表密切相关。它们是用于此类数据的神经网络的自然架构。</p><p>而且它们确实被使用！在过去的几年中，RNN 在各种问题上的应用取得了令人难以置信的成功：语音识别、语言建模、翻译、图像字幕……等等。在 Andrej Karpathy 的优秀博客文章《循环<a href="http://karpathy.github.io/2015/05/21/rnn-effectiveness/">神经网络的不合理有效性》</a>中讨论使用 RNN 可以实现的惊人成就。但它们确实非常了不起。</p><p>这些成功的关键在于使用“LSTM”，这是一种非常特殊的循环神经网络，在许多任务中，它的效果比标准版本好得多。几乎所有基于循环神经网络的令人兴奋的结果都是通过它们实现的。本文将探讨的就是这些 LSTM。</p><h2 id="长期依赖的问题"><a href="#长期依赖的问题" class="headerlink" title="长期依赖的问题"></a>长期依赖的问题</h2><p>RNN 的吸引力之一是它们可能能够将先前的信息与当前任务联系起来，例如使用先前的视频帧可能有助于理解当前帧。如果 RNN 能够做到这一点，它们将非常有用。但它们能做到吗？这取决于情况。</p><p>有时，我们只需要查看最近的信息即可执行当前任务。例如，考虑一个语言模型，它试图根据前面的单词预测下一个单词。如果我们试图预测 <strong>“云在天空中”</strong> 中的最后一个单词，我们不需要任何其他上下文——很明显下一个单词将是天空。在这种情况下，相关信息与需要它的地方之间的差距很小，RNN 可以学习使用过去的信息。</p><p><img src="https://colah.github.io/posts/2015-08-Understanding-LSTMs/img/RNN-shorttermdepdencies.png" alt="img"></p><p>但也有需要更多背景信息的情况。考虑尝试预测文本“我在法国长大……我能说一口流利的<em>法语</em>”中的最后一个单词。最近的信息表明下一个单词可能是一种语言的名称，但如果我们想缩小范围，确定是哪种语言，我们需要更早的法国背景信息。相关信息与需要信息点之间的差距完全有可能变得非常大。</p><p>不幸的是，随着差距的扩大，RNN 无法学会连接信息。</p><p><img src="https://colah.github.io/posts/2015-08-Understanding-LSTMs/img/RNN-longtermdependencies.png" alt="神经网络难以应对长期依赖关系。"></p><p>理论上，RNN 绝对有能力处理这种“长期依赖关系”。人类可以仔细挑选参数来解决这种形式的小问题。遗憾的是，在实践中，RNN 似乎无法学习它们。Hochreiter [(1991) <a href="http://people.idsia.ch/~juergen/SeppHochreiter1991ThesisAdvisorSchmidhuber.pdf">德语]</a>和<a href="http://www-dsi.ing.unifi.it/~paolo/ps/tnn-94-gradient.pdf">Bengio 等人 (1994)</a>深入探讨了这个问题，他们发现了一些非常根本的原因，说明这个问题可能很难解决。</p><p>值得庆幸的是，LSTM 没有这个问题！</p><h2 id="LSTM-网络"><a href="#LSTM-网络" class="headerlink" title="LSTM 网络"></a>LSTM 网络</h2><p>长短期记忆网络（通常简称为“LSTM”）是一种特殊的 RNN，能够学习长期依赖关系。它们由<a href="http://www.bioinf.jku.at/publications/older/2604.pdf">Hochreiter 和 Schmidhuber（1997 年）</a>提出，并在后续工作中被许多人改进和推广。1<a href="https://colah.github.io/posts/2015-08-Understanding-LSTMs/#fn1">它们</a>在解决各种问题方面都表现出色，目前已被广泛使用。</p><p>LSTM 的设计明确地避免了长期依赖问题。长时间记忆信息实际上是它们的默认行为，而不是它们需要努力学习的事情！</p><p>所有循环神经网络都具有神经网络重复模块链的形式。在标准 RNN 中，此重复模块将具有非常简单的结构，例如单个 tanh 层。</p><p><img src="https://colah.github.io/posts/2015-08-Understanding-LSTMs/img/LSTM3-SimpleRNN.png" alt="img"></p><p><strong>标准 RNN 中的重复模块包含单层。</strong></p><p>LSTM 也具有这种链式结构，但重复模块的结构不同。它不是只有一个神经网络层，而是有四个，并以非常特殊的方式相互作用。</p><p><img src="https://colah.github.io/posts/2015-08-Understanding-LSTMs/img/LSTM3-chain.png" alt="LSTM 神经网络。"></p><p><strong>LSTM 中的重复模块包含四个交互层。</strong></p><p>不必担心细节。稍后我们将逐步介绍 LSTM 图。现在，我们先熟悉一下我们将要使用的符号。</p><p><img src="https://colah.github.io/posts/2015-08-Understanding-LSTMs/img/LSTM2-notation.png" alt="img"></p><p>在上图中，每条线都承载着一个完整的向量，从一个节点的输出到其他节点的输入。粉色圆圈表示逐点运算，如向量加法，而黄色框表示学习到的神经网络层。线合并表示连接，而线分叉表示其内容被复制，副本被发送到不同的位置。</p><h2 id="LSTM-背后的核心思想"><a href="#LSTM-背后的核心思想" class="headerlink" title="LSTM 背后的核心思想"></a>LSTM 背后的核心思想</h2><p>LSTM 的关键是细胞状态，即贯穿图表顶部的水平线。</p><p>细胞状态有点像传送带。它沿着整个链条笔直运行，只有一些微小的线性相互作用。信息很容易不加改变地沿着它流动。</p><p><img src="https://colah.github.io/posts/2015-08-Understanding-LSTMs/img/LSTM3-C-line.png" alt="img"></p><p>LSTM 确实有能力从细胞状态中删除或添加信息，并由称为门的结构严格调节。</p><p>门是一种选择性地让信息通过的方式。它们由 S 型神经网络层和逐点乘法运算组成。</p><p><img src="https://colah.github.io/posts/2015-08-Understanding-LSTMs/img/LSTM3-gate.png" alt="img"></p><p>S 型层输出介于 0 和 1 之间的数字，描述每个组件应通过的量。值为 0 表示“不让任何组件通过”，而值为 1 表示“让所有组件通过！”</p><p>LSTM 有三个这样的门，用于保护和控制单元状态。</p><h2 id="逐步了解-LSTM"><a href="#逐步了解-LSTM" class="headerlink" title="逐步了解 LSTM"></a>逐步了解 LSTM</h2><p>我们的 LSTM 的第一步是决定要从细胞状态中丢弃哪些信息。这个决定是由一个叫做“遗忘门”的 S 型层做出的。它查看<code>h_&#123;t-1&#125;</code>和<code>x_t</code>，并输出一个介于 0 和 1 对于细胞状态中的每个数字<code>C_&#123;t-1&#125;</code>。 A. 1 代表“完全保留这一点”，而0 代表“彻底摆脱这个。”</p><p>让我们回到语言模型的示例，该模型尝试根据所有先前的单词预测下一个单词。在这样的问题中，单元状态可能包括当前主语的性别，以便可以使用正确的代词。当我们看到一个新主语时，我们希望忘记旧主语的性别。</p><p><img src="https://colah.github.io/posts/2015-08-Understanding-LSTMs/img/LSTM3-focus-f.png" alt="img"></p><p>下一步是决定我们要在单元状态中存储哪些新信息。这分为两部分。首先，一个称为“输入门”的 S 型层决定我们要更新哪些值。接下来，一个 tanh 层创建一个新候选值的向量，<code>C̃_t</code>，可以将其添加到状态中。在下一步中，我们将把这两者结合起来，以创建对状态的更新。</p><p>在我们的语言模型示例中，我们希望将新主语的性别添加到单元状态中，以替换我们忘记的旧主语。</p><p><img src="https://colah.github.io/posts/2015-08-Understanding-LSTMs/img/LSTM3-focus-i.png" alt="img"></p><p>现在是时候更新旧的细胞状态了，<code>x_&#123;t-1&#125;</code>，进入新的细胞状态 <code>C_t</code> 前面的步骤已经决定了要做什么，我们只需要实际去做。</p><p>我们将旧状态乘以 <code>f~_t</code>，忘记我们之前决定忘记的事情。然后我们添加 <code>i_t</code>*<code>C̃_t</code>。这是新的候选值，根据我们决定更新每个状态值的程度进行缩放。</p><p>在语言模型的情况下，我们实际上会删除有关旧主题性别的信息并添加新信息，正如我们在前面的步骤中所决定的那样。</p><p><img src="https://colah.github.io/posts/2015-08-Understanding-LSTMs/img/LSTM3-focus-C.png" alt="img"></p><p>最后，我们需要决定要输出什么。此输出将基于我们的细胞状态，但将是一个经过过滤的版本。首先，我们运行一个 S 型层，它决定要输出细胞状态的哪些部分。然后，我们将细胞状态通过双曲函数双曲函数（将值推至− 1 和 1 ）并将其乘以 S 型门的输出，这样我们就只输出我们决定的部分。</p><p>对于语言模型示例，由于它刚刚看到一个主语，因此它可能需要输出与动词相关的信息，以防接下来是动词。例如，它可能会输出主语是单数还是复数，这样我们就知道如果接下来是动词，动词应该变位成什么形式。</p><p><img src="https://colah.github.io/posts/2015-08-Understanding-LSTMs/img/LSTM3-focus-o.png" alt="img"></p><h2 id="长期短期记忆的变体"><a href="#长期短期记忆的变体" class="headerlink" title="长期短期记忆的变体"></a>长期短期记忆的变体</h2><p>到目前为止，我所描述的是一个非常普通的 LSTM。但并非所有 LSTM 都与上面的相同。事实上，几乎每篇涉及 LSTM 的论文似乎都使用了略有不同的版本。这些差异很小，但值得一提的是其中的一些。</p><p><a href="ftp://ftp.idsia.ch/pub/juergen/TimeCount-IJCNN2000.pdf">Gers 和 Schmidhuber (2000)</a>提出的一种流行的 LSTM 变体是添加“窥孔连接”。这意味着我们让门层查看单元状态。</p><p><img src="https://colah.github.io/posts/2015-08-Understanding-LSTMs/img/LSTM3-var-peepholes.png" alt="img"></p><p>上图为所有门添加了窥视孔，但许多论文只会给出一些窥视孔，而不会给出其他窥视孔。</p><p>另一种变体是使用耦合的遗忘门和输入门。我们不是分别决定遗忘什么以及应该向什么添加新信息，而是一起做出这些决定。我们只会在要输入某些东西来代替它时才会忘记。我们只会在忘记旧东西时向状态输入新值。</p><p><img src="https://colah.github.io/posts/2015-08-Understanding-LSTMs/img/LSTM3-var-tied.png" alt="img"></p><p><a href="http://arxiv.org/pdf/1406.1078v3.pdf">LSTM 的一个稍微更戏剧性的变体是Cho 等人（2014 年）</a>提出的门控循环单元（GRU ）。它将遗忘门和输入门合并为一个“更新门”。它还合并了单元状态和隐藏状态，并做了一些其他更改。由此产生的模型比标准 LSTM 模型更简单，而且越来越受欢迎。</p><p><img src="https://colah.github.io/posts/2015-08-Understanding-LSTMs/img/LSTM3-var-GRU.png" alt="门控循环单元神经网络。"></p><p>这些只是最值得注意的 LSTM 变体中的一小部分。还有很多其他的变体，例如<a href="http://arxiv.org/pdf/1508.03790v2.pdf">Yao 等人 (2015)</a>提出的深度门控 RNN 。还有一些完全不同的方法来解决长期依赖关系，例如<a href="http://arxiv.org/pdf/1402.3511v1.pdf">Koutnik 等人 (2014)</a>提出的 Clockwork RNN 。</p><p>这些变体中哪一个最好？差异重要吗？<a href="http://arxiv.org/pdf/1503.04069.pdf">Greff 等人（2015 年）</a>对流行的变体进行了很好的比较，发现它们都差不多。Jozefowicz<a href="http://jmlr.org/proceedings/papers/v37/jozefowicz15.pdf">等人（2015 年）</a>测试了超过一万个 RNN 架构，发现有些架构在某些任务上比 LSTM 效果更好。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>之前，我提到了人们使用 RNN 取得的显著成果。基本上，所有这些都是使用 LSTM 实现的。它们在大多数任务上确实表现更好！</p><p>LSTM 写成一组方程式后，看起来相当吓人。希望本文一步步介绍它们能让你更容易理解。</p><p>LSTM 是我们利用 RNN 实现的一大进步。人们自然会想：还有另一大进步吗？研究人员的普遍看法是：“是的！还有下一步，那就是注意力！”这个想法是让 RNN 的每一步都从更大的信息集合中挑选信息来查看。例如，如果您使用 RNN 创建描述图像的标题，它可能会挑选图像的一部分来查看它输出的每个单词。事实上，<a href="http://arxiv.org/pdf/1502.03044v2.pdf">Xu<em>等人</em>(2015)</a>就是这么做的——如果您想探索注意力，这可能是一个有趣的起点！使用注意力已经取得了许多非常令人兴奋的成果，而且似乎还有更多的成果即将面世……</p><p>注意力并不是 RNN 研究中唯一令人兴奋的线索。例如，<a href="http://arxiv.org/pdf/1507.01526v1.pdf">Kalchbrenner<em>等人</em>(2015)</a>的网格 LSTM看起来非常有前景。在生成模型中使用 RNN 的工作 - 例如<a href="http://arxiv.org/pdf/1502.04623.pdf">Gregor<em>等人</em>(2015)</a>、<a href="http://arxiv.org/pdf/1506.02216v3.pdf">Chung<em>等人</em>(2015)</a>或<a href="http://arxiv.org/pdf/1411.7610v3.pdf">Bayer &amp; Osendorfer (2015)</a> - 也看起来非常有趣。过去几年对于循环神经网络来说是激动人心的几年，而未来的几年只会更加激动人心！</p><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p>我非常感谢许多人帮助我更好地理解 LSTM、对可视化效果发表评论并对这篇文章提供反馈。</p><p>我非常感谢 Google 的同事们提供的有益反馈，特别是<a href="http://research.google.com/pubs/OriolVinyals.html">Oriol Vinyals</a>、<a href="http://research.google.com/pubs/GregCorrado.html">Greg Corrado</a>、<a href="http://research.google.com/pubs/JonathonShlens.html">Jon Shlens</a>、<a href="http://people.cs.umass.edu/~luke/">Luke Vilnis</a>和<a href="http://www.cs.toronto.edu/~ilya/">Ilya Sutskever</a>。我还要感谢许多其他朋友和同事抽出时间帮助我，包括<a href="https://www.linkedin.com/pub/dario-amodei/4/493/393">Dario Amodei</a>和<a href="http://cs.stanford.edu/~jsteinhardt/">Jacob Steinhardt</a>。我特别感谢<a href="http://www.kyunghyuncho.me/">Kyunghyun Cho</a>对我的图表的极其周到的反馈。</p><p>在写这篇文章之前，我在两个关于神经网络的研讨会系列中练习解释 LSTM。感谢所有参加研讨会的人对我的耐心和反馈。</p><hr><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;转载 &lt;a href=&quot;https://colah.github.io/posts/2015-08-Understanding-LSTMs/&quot;&gt;https://colah.github.io/posts/2015-08-Understanding-</summary>
      
    
    
    
    <category term="AI" scheme="http://ai.mak.cn/categories/AI/"/>
    
    
    <category term="深度学习" scheme="http://ai.mak.cn/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Makedown数学公式参考</title>
    <link href="http://ai.mak.cn/2024/02/27/%E5%B7%A5%E5%85%B7/Makedown%E5%85%AC%E5%BC%8F%E4%BD%BF%E7%94%A8%E5%8F%82%E8%80%83/"/>
    <id>http://ai.mak.cn/2024/02/27/%E5%B7%A5%E5%85%B7/Makedown%E5%85%AC%E5%BC%8F%E4%BD%BF%E7%94%A8%E5%8F%82%E8%80%83/</id>
    <published>2024-02-26T16:00:00.000Z</published>
    <updated>2024-05-28T06:35:59.302Z</updated>
    
    <content type="html"><![CDATA[<p>转载：<a href="https://segmentfault.com/a/1190000042253190">https://segmentfault.com/a/1190000042253190</a></p><h2 id="一、公式使用参考"><a href="#一、公式使用参考" class="headerlink" title="一、公式使用参考"></a>一、公式使用参考</h2><h3 id="1．如何插入公式"><a href="#1．如何插入公式" class="headerlink" title="1．如何插入公式"></a>1．如何插入公式</h3><p>$\TeX$ 可使用行中公式放在文中与其它文字混编，或单独成行的独立公式。</p><p><strong>（1）行中公式</strong></p><p>可以用如下方法表示：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span> 表达式 <span class="symbol">$</span></span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ J_<span class="string">\alpha(x)</span> = <span class="string">\sum_&#123;m=0&#125;^\infty</span> <span class="string">\frac&#123;(-1)^m&#125;&#123;m!</span> <span class="string">\Gamma</span> (m + <span class="string">\alpha</span> + <span class="number">1</span>)&#125; &#123;<span class="string">\left(&#123;</span> <span class="string">\frac&#123;x&#125;&#123;2&#125;</span> &#125;<span class="string">\right)&#125;^&#123;2m</span> + <span class="string">\alpha&#125;</span> <span class="string">\text</span> &#123;，行内公式示例&#125; $</span><br></pre></td></tr></table></figure><p>显示：<br>$ J_\alpha(x) &#x3D; \sum_{m&#x3D;0}^\infty \frac{(-1)^m}{m! \Gamma (m + \alpha + 1)} {\left({ \frac{x}{2} }\right)}^{2m + \alpha} \text {，行内公式示例} $</p><p><strong>（2）独立公式</strong></p><p>可以用如下方法表示：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span><span class="symbol">$</span> 表达式 <span class="symbol">$</span><span class="symbol">$</span></span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ J_<span class="string">\alpha(x)</span> = <span class="string">\sum_&#123;m=0&#125;^\infty</span> <span class="string">\frac&#123;(-1)^m&#125;&#123;m!</span> <span class="string">\Gamma</span> (m + <span class="string">\alpha</span> + <span class="number">1</span>)&#125; &#123;<span class="string">\left(&#123;</span> <span class="string">\frac&#123;x&#125;&#123;2&#125;</span> &#125;<span class="string">\right)&#125;^&#123;2m</span> + <span class="string">\alpha&#125;</span> <span class="string">\text&#123;，独立公式示例&#125;</span> $$</span><br></pre></td></tr></table></figure><p>显示：</p><p>𝐽𝛼(𝑥)&#x3D;∑𝑚&#x3D;0∞(−1)𝑚𝑚!Γ(𝑚+𝛼+1)(𝑥2)2𝑚+𝛼，独立公式示例<em>J**α</em>(<em>x</em>)&#x3D;<em>m</em>&#x3D;0∑∞<em>m</em>!Γ(<em>m</em>+<em>α</em>+1)(−1)<em>m</em>(2<em>x</em>)2<em>m</em>+<em>α</em>，独立公式示例</p><p><strong>（3）自动编号</strong></p><p>公式可以用如下方法表示：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">\begin</span><span class="template-variable">&#123;equation&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    表达式</span></span><br><span class="line"><span class="language-xml">    \label</span><span class="template-variable">&#123;<span class="keyword">eq</span>:当前公式名&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">\end</span><span class="template-variable">&#123;equation&#125;</span></span><br></pre></td></tr></table></figure><p>自动编号后的公式可在全文任意处使用 <code>\eqref&#123;eq:公式名&#125;</code> 语句引用。</p><p>例子：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">$$ 在公式 \eqref</span><span class="template-variable">&#123;<span class="keyword">eq</span>:sample&#125;</span><span class="language-xml"> 中，我们看到了这个被自动编号的公式。$$</span></span><br><span class="line"><span class="language-xml">\begin</span><span class="template-variable">&#123;equation&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    E=mc^2 \text</span><span class="template-variable">&#123;，自动编号公式示例&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    \label</span><span class="template-variable">&#123;<span class="keyword">eq</span>:sample&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">\end</span><span class="template-variable">&#123;equation&#125;</span></span><br></pre></td></tr></table></figure><p>显示：</p><p>$$ \begin{equation} E&#x3D;mc^2 \text{，自动编号公式示例} \label{eq:sample7} \end{equation} $$</p><p>$$ 在公式 \eqref{eq:sample6} 中，我们看到了这个被自动编号的公式。$$</p><p><strong>（4）手动编号</strong></p><p>若需要手动编号，可在公式后使用 <code>\tag&#123;编号&#125;</code> 语句。</p><p>例子：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ J_<span class="string">\alpha(x)</span> = <span class="string">\sum_&#123;m=0&#125;^\infty</span> <span class="string">\frac&#123;(-1)^m&#125;&#123;m!</span> <span class="string">\Gamma</span> (m + <span class="string">\alpha</span> + <span class="number">1</span>)&#125; &#123;<span class="string">\left(&#123;</span> <span class="string">\frac&#123;x&#125;&#123;2&#125;</span> &#125;<span class="string">\right)&#125;^&#123;2m</span> + <span class="string">\alpha&#125;</span> <span class="string">\text&#123;，使用</span> <span class="string">\tag</span> 手动编号&#125; <span class="string">\tag&#123;0.1&#125;</span> $$</span><br></pre></td></tr></table></figure><p>显示：</p><p>$$ J_\alpha(x) &#x3D; \sum_{m&#x3D;0}^\infty \frac{(-1)^m}{m! \Gamma (m + \alpha + 1)} {\left({ \frac{x}{2} }\right)}^{2m + \alpha} \text{，使用 \tag 手动编号} \tag{0.1} $$</p><p><strong>（5）不自动编号</strong></p><p>公式可以用如下方法表示：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\<span class="keyword">begin</span>&#123;equation*&#125;</span><br><span class="line">    表达式</span><br><span class="line">\<span class="keyword">end</span>&#123;equation*&#125;</span><br></pre></td></tr></table></figure><p>显示：</p><p>表达式表达式</p><h3 id="2．如何输入上下标"><a href="#2．如何输入上下标" class="headerlink" title="2．如何输入上下标"></a>2．如何输入上下标</h3><p><code>^</code> 表示上标，<code>_</code> 表示下标。如果上下标的内容多于一个字符，需要用 <code>&#123;&#125;</code> 将这些内容括成一个整体。<br>上下标可以嵌套，也可以同时使用。</p><ul><li><p>例子：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span><span class="symbol">$</span> x^&#123;y^z&#125;=(<span class="number">1</span>+&#123;\rm e&#125;^x)^&#123;<span class="number">-2</span>xy^w&#125; <span class="symbol">$</span><span class="symbol">$</span></span><br></pre></td></tr></table></figure></li><li><p>显示：</p></li></ul><p>𝑥𝑦𝑧&#x3D;(1+e𝑥)−2𝑥𝑦𝑤<em>x<strong>y</strong>z</em>&#x3D;(1+e<em>x</em>)−2<em>x<strong>y</strong>w</em></p><p>如果要在左右两边都有上下标，可以使用 <code>\sideset</code> 命令；也可以简单地在符号前面多打一个上下标，此时会以行内公式渲染。<br>本例内 <code>\quad</code> 均为空格符号，为方便公式格式对比而添加，请注意辨别。详见<a href="https://segmentfault.com/a/1190000042253190#">在字符间加入空格</a>。</p><ul><li><p>例子：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">$$ \sideset</span><span class="template-variable">&#123;^1_2&#125;</span><span class="template-variable">&#123;^3_4&#125;</span><span class="language-xml">\bigotimes \quad or \quad </span><span class="template-variable">&#123;^1_2&#125;</span><span class="language-xml">\bigotimes </span><span class="template-variable">&#123;^3_4&#125;</span><span class="language-xml"> $$</span></span><br></pre></td></tr></table></figure></li><li><p>显示：</p></li></ul><p>$$ \sideset{^1_2}{^3_4}\bigotimes \quad or \quad {^1_2}\bigotimes {^3_4} $$</p><h3 id="3．如何输入括号和分隔符"><a href="#3．如何输入括号和分隔符" class="headerlink" title="3．如何输入括号和分隔符"></a>3．如何输入括号和分隔符</h3><p><code>()</code>、<code>[]</code> 和 <code>|</code> 表示符号本身，使用 <code>\&#123;\&#125;</code> 来表示 <code>&#123;&#125;</code> 。当要显示大号的括号或分隔符时，要用 <code>\left</code> 和 <code>\right</code> 命令。</p><p>一些特殊的括号：</p><table><thead><tr><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th></tr></thead><tbody><tr><td align="center">\langle</td><td align="center">$\langle$</td><td align="center">\rangle</td><td align="center">$\rangle$</td></tr><tr><td align="center">\lceil</td><td align="center">$\lceil$</td><td align="center">\rceil</td><td align="center">$\rceil$</td></tr><tr><td align="center">\lfloor</td><td align="center">$\lfloor$</td><td align="center">\rfloor</td><td align="center">$\rfloor$</td></tr><tr><td align="center">\lbrace</td><td align="center">$\lbrace$</td><td align="center">\rbrace</td><td align="center">$\rbrace$</td></tr><tr><td align="center">\lvert</td><td align="center">$\lvert$</td><td align="center">\rvert</td><td align="center">$\rvert$</td></tr><tr><td align="center">\lVert</td><td align="center">$\lVert$</td><td align="center">\rVert</td><td align="center">$\rVert$</td></tr></tbody></table><p>有时，我们需要在行内使用两个竖杠表示向量间的某种空间距离，可以这样写：<br><span style="text-align: center; display: block"> <code>\lVert \boldsymbol&#123;X&#125;_i - \boldsymbol&#123;S&#125;_j \rVert^2</code> → $\lVert \boldsymbol{X}_i - \boldsymbol{S}_j \rVert^2$ </span></p><ul><li><p>例子：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span><span class="symbol">$</span> f(x,y,z) = <span class="number">3</span>y^<span class="number">2</span>z \left( <span class="number">3</span>+\<span class="built_in">frac</span>&#123;<span class="number">7</span>x+<span class="number">5</span>&#125;&#123;<span class="number">1</span>+y^<span class="number">2</span>&#125; \right) <span class="symbol">$</span><span class="symbol">$</span></span><br></pre></td></tr></table></figure></li><li><p>显示：</p></li></ul><p>𝑓(𝑥,𝑦,𝑧)&#x3D;3𝑦2𝑧(3+7𝑥+51+𝑦2)<em>f</em>(<em>x</em>,<em>y</em>,<em>z</em>)&#x3D;3<em>y</em>2<em>z</em>(3+1+<em>y</em>27<em>x</em>+5)</p><p>有时要用 <code>\left.</code> 或 <code>\right.</code> 进行匹配而不显示本身。</p><ul><li><p>例子：</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">$$ \left. \frac</span><span class="template-variable">&#123;&#123;\<span class="name">rm</span> d&#125;u&#125;&#123;&#123;\rm d&#125;x&#125; \right| _&#123;<span class="attr">x</span>=<span class="number">0</span>&#125; $$</span></span><br></pre></td></tr></table></figure></li><li><p>显示：</p></li></ul><p>d𝑢d𝑥∣𝑥&#x3D;0d<em>x</em>d<em>u</em>∣∣<em>x</em>&#x3D;0</p><h3 id="4．如何输入分数"><a href="#4．如何输入分数" class="headerlink" title="4．如何输入分数"></a>4．如何输入分数</h3><p>通常使用 <code>\frac &#123;分子&#125; &#123;分母&#125;</code> 来生成一个分数，分数可多层嵌套。<br>若分数只有一层，也可使用 <code>分子 \over 分母</code> 命令。<br>例内 <code>\quad</code> <code>\mid</code> <code>\,</code> 等均为空格或分隔符号，为方便公式格式对比而添加，请注意辨别。详见<a href="https://segmentfault.com/a/1190000042253190#">在字符间加入空格</a>。</p><ul><li><p>例子：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span><span class="symbol">$</span> \<span class="built_in">frac</span>&#123;a<span class="number">-1</span>&#125;&#123;b<span class="number">-1</span>&#125; \quad <span class="keyword">or</span> \quad &#123;a+<span class="number">1</span> \over b+<span class="number">1</span>&#125; <span class="symbol">$</span><span class="symbol">$</span></span><br></pre></td></tr></table></figure></li><li><p>显示：</p></li></ul><p>𝑎−1𝑏−1𝑜𝑟𝑎+1𝑏+1<em>b</em>−1<em>a</em>−1<em>or**b</em>+1<em>a</em>+1</p><p>当分式 <strong>仅有两个字符时</strong> 可直接输入 <code>\frac ab</code> 来快速生成一个 $\Large\frac ab$ 。</p><ul><li><p>例子：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ <span class="string">\frac</span> <span class="number">12</span>,<span class="string">\frac</span> <span class="number">1a</span>,<span class="string">\frac</span> a2 <span class="string">\quad</span> <span class="string">\mid</span> <span class="string">\quad</span> <span class="string">\text&#123;2</span> letters only:&#125; <span class="string">\quad</span> <span class="string">\frac</span> <span class="number">12a</span> <span class="string">\,,</span> k<span class="string">\frac</span> q&#123;r^<span class="number">2</span>&#125; $$</span><br></pre></td></tr></table></figure></li><li><p>显示：</p></li></ul><p>12,1𝑎,𝑎2∣2 letters only:12𝑎,𝑘𝑞𝑟221,<em>a</em>1,2<em>a</em>∣2 letters only:21<em>a</em>,<em>k**r</em>2<em>q</em></p><h3 id="5．如何输入开方"><a href="#5．如何输入开方" class="headerlink" title="5．如何输入开方"></a>5．如何输入开方</h3><p>使用 <code>\sqrt [根指数，省略时为2] &#123;被开方数&#125;</code> 命令输入开方。<br>本例内 <code>\quad</code> 均为空格符号，为方便公式格式对比而添加，请注意辨别。详见<a href="https://segmentfault.com/a/1190000042253190#">在字符间加入空格</a>。</p><ul><li><p>例子：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span><span class="symbol">$</span> \<span class="built_in">sqrt</span>&#123;<span class="number">2</span>&#125; \quad <span class="keyword">or</span> \quad \<span class="built_in">sqrt</span>[n]&#123;<span class="number">3</span>&#125; <span class="symbol">$</span><span class="symbol">$</span></span><br></pre></td></tr></table></figure></li><li><p>显示：</p></li></ul><p>2𝑜𝑟3𝑛2<em>or**n</em>3</p><h3 id="6．如何输入省略号"><a href="#6．如何输入省略号" class="headerlink" title="6．如何输入省略号"></a>6．如何输入省略号</h3><p>数学公式中常见的省略号有两种，<code>\ldots</code> 表示与 <strong>文本底线</strong> 对齐的省略号，<code>\cdots</code> 表示与 <strong>文本中线</strong> 对齐的省略号。</p><ul><li><p>例子：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">$$ f(x_1,x_2,\underbrace</span><span class="template-variable">&#123;\ldots&#125;</span><span class="language-xml">_</span><span class="template-variable">&#123;\rm ldots&#125;</span><span class="language-xml"> ,x_n) = x_1^2 + x_2^2 + \underbrace</span><span class="template-variable">&#123;\cdots&#125;</span><span class="language-xml">_</span><span class="template-variable">&#123;\rm cdots&#125;</span><span class="language-xml"> + x_n^2 $$</span></span><br></pre></td></tr></table></figure></li><li><p>显示：</p></li></ul><p>𝑓(𝑥1,𝑥2,…⏟ldots,𝑥𝑛)&#x3D;𝑥12+𝑥22+⋯⏟cdots+𝑥𝑛2<em>f</em>(<em>x</em>1,<em>x</em>2,ldots…,<em>x**n</em>)&#x3D;<em>x</em>12+<em>x</em>22+cdots⋯+<em>x**n</em>2</p><h3 id="7．如何输入向量"><a href="#7．如何输入向量" class="headerlink" title="7．如何输入向量"></a>7．如何输入向量</h3><p>使用 <code>\vec&#123;向量&#125;</code> 来自动产生一个向量。也可以使用 <code>\overrightarrow</code> 等命令自定义字母上方的符号。<br>例内 <code>\quad</code> <code>\mid</code> <code>\,</code> 等均为空格或分隔符号，为方便公式格式对比而添加，请注意辨别。详见<a href="https://segmentfault.com/a/1190000042253190#">在字符间加入空格</a>。</p><ul><li><p>例子：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span><span class="symbol">$</span> \vec&#123;a&#125; \cdot \vec&#123;b&#125;=<span class="number">0</span> <span class="symbol">$</span><span class="symbol">$</span></span><br></pre></td></tr></table></figure></li><li><p>显示：</p></li></ul><p>𝑎⃗⋅𝑏⃗&#x3D;0<em>a</em>⋅<em>b</em>&#x3D;0</p><ul><li><p>例子：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ xy <span class="string">\text&#123;</span> <span class="keyword">with</span> arrows:&#125; <span class="string">\quad</span> <span class="string">\overleftarrow&#123;xy&#125;</span> <span class="string">\;</span> <span class="string">\mid</span> <span class="string">\;</span> <span class="string">\overleftrightarrow&#123;xy&#125;</span> <span class="string">\;</span> <span class="string">\mid</span> <span class="string">\;</span> <span class="string">\overrightarrow&#123;xy&#125;</span> $$</span><br></pre></td></tr></table></figure></li><li><p>显示：</p></li></ul><p>𝑥𝑦 with arrows:𝑥𝑦←∣𝑥𝑦↔∣𝑥𝑦→<em>x**y</em> with arrows:<em>x**y</em>∣<em>x**y</em>∣<em>x**y</em></p><h3 id="8．如何输入积分"><a href="#8．如何输入积分" class="headerlink" title="8．如何输入积分"></a>8．如何输入积分</h3><p>使用 <code>\int_积分下限^积分上限 &#123;被积表达式&#125;</code> 来输入一个积分。</p><p>例子：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span><span class="symbol">$</span> \int_0^<span class="number">1</span> &#123;x^<span class="number">2</span>&#125; \,&#123;\rm d&#125;x <span class="symbol">$</span><span class="symbol">$</span></span><br></pre></td></tr></table></figure><p>显示：</p><p>∫01𝑥2d𝑥∫01<em>x</em>2d<em>x</em></p><p>本例中 <code>\,</code> 和 <code>&#123;\rm d&#125;</code> 部分可省略，但加入能使式子更美观，详见<a href="https://segmentfault.com/a/1190000042253190#">在字符间加入空格</a>及<a href="https://segmentfault.com/a/1190000042253190#">如何进行字体转换</a>。</p><h3 id="9．如何输入极限运算"><a href="#9．如何输入极限运算" class="headerlink" title="9．如何输入极限运算"></a>9．如何输入极限运算</h3><p>使用 <code>\lim_&#123;变量 \to 表达式&#125; 表达式</code> 来输入一个极限。如有需求，可以更改 <code>\to</code> 符号至任意符号。</p><p>例子：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ <span class="string">\lim_&#123;n</span> <span class="string">\to</span> <span class="string">\infty&#125;</span> <span class="string">\frac&#123;1&#125;&#123;n(n+1)&#125;</span> <span class="string">\quad</span> <span class="keyword">and</span> <span class="string">\quad</span> <span class="string">\lim_&#123;x\leftarrow&#123;示例&#125;&#125;</span> <span class="string">\frac&#123;1&#125;&#123;n(n+1)&#125;</span> $$</span><br></pre></td></tr></table></figure><p>显示：</p><p>lim⁡𝑛→∞1𝑛(𝑛+1)𝑎𝑛𝑑lim⁡𝑥←示例1𝑛(𝑛+1)<em>n</em>→∞lim<em>n</em>(<em>n</em>+1)1<em>an<strong>d</strong>x</em>←示例lim<em>n</em>(<em>n</em>+1)1</p><h3 id="10．如何输入累加、累乘运算"><a href="#10．如何输入累加、累乘运算" class="headerlink" title="10．如何输入累加、累乘运算"></a>10．如何输入累加、累乘运算</h3><p>使用 <code>\sum_&#123;下标表达式&#125;^&#123;上标表达式&#125; &#123;累加表达式&#125;</code> 来输入一个累加。与之类似，使用 <code>\prod</code> <code>\bigcup</code> <code>\bigcap</code> 来分别输入累乘、并集和交集，更多符号可参考“<a href="https://segmentfault.com/a/1190000042253190#">其它特殊字符</a>”。</p><p>此类符号在行内显示时上下标表达式将会移至右上角和右下角，如 <code>\sum_&#123;i=1&#125;^n \frac&#123;1&#125;&#123;i^2&#125;</code> 显示为 $\sum_{i&#x3D;1}^n \frac{1}{i^2}$ ；</p><p>或在行内可使用 <code>\sum\limits_&#123;下标表达式&#125;^&#123;上标表达式&#125; &#123;累加表达式&#125;</code> 使上下标仍在正上正下方。<br><span style="text-align: center; display: block;"> 如 <code>\sum\limits_&#123;i=1&#125;^n \frac&#123;1&#125;&#123;i^2&#125;</code> 显示为 $\sum\limits_{i&#x3D;1}^n \frac{1}{i^2}$ 。</span></p><p>本例内 <code>\quad</code> 均为空格符号，为方便公式格式对比而添加，请注意辨别。详见<a href="https://segmentfault.com/a/1190000042253190#">在字符间加入空格</a>。</p><ul><li><p>例子：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ <span class="string">\sum_&#123;i=1&#125;^n</span> <span class="string">\frac&#123;1&#125;&#123;i^2&#125;</span> <span class="string">\quad</span> <span class="keyword">and</span> <span class="string">\quad</span> <span class="string">\prod_&#123;i=1&#125;^n</span> <span class="string">\frac&#123;1&#125;&#123;i^2&#125;</span> <span class="string">\quad</span> <span class="keyword">and</span> <span class="string">\quad</span> <span class="string">\bigcup_&#123;i=1&#125;^&#123;2&#125;</span> <span class="string">\Bbb&#123;R&#125;</span> $$</span><br></pre></td></tr></table></figure></li><li><p>显示：</p></li></ul><p>∑𝑖&#x3D;1𝑛1𝑖2𝑎𝑛𝑑∏𝑖&#x3D;1𝑛1𝑖2𝑎𝑛𝑑⋃𝑖&#x3D;12𝑅<em>i</em>&#x3D;1∑<em>n**i</em>21<em>an<strong>d</strong>i</em>&#x3D;1∏<em>n**i</em>21<em>an<strong>d</strong>i</em>&#x3D;1⋃2R</p><h3 id="11．如何输入希腊字母"><a href="#11．如何输入希腊字母" class="headerlink" title="11．如何输入希腊字母"></a>11．如何输入希腊字母</h3><p>输入 <code>\小写希腊字母英文全称</code> 和 <code>\首字母大写希腊字母英文全称</code> 来分别输入小写和大写希腊字母。<br><strong>对于大写希腊字母与现有字母相同的，直接输入大写字母即可。</strong></p><table><thead><tr><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th></tr></thead><tbody><tr><td align="center">\alpha</td><td align="center">$\alpha$</td><td align="center">A</td><td align="center">$A$</td><td align="center">\beta</td><td align="center">$\beta$</td><td align="center">B</td><td align="center">$B$</td></tr><tr><td align="center">\gamma</td><td align="center">$\gamma$</td><td align="center">\Gamma</td><td align="center">$\Gamma$</td><td align="center">\delta</td><td align="center">$\delta$</td><td align="center">\Delta</td><td align="center">$\Delta$</td></tr><tr><td align="center">\epsilon</td><td align="center">$\epsilon$</td><td align="center">E</td><td align="center">$E$</td><td align="center">\zeta</td><td align="center">$\zeta$</td><td align="center">Z</td><td align="center">$Z$</td></tr><tr><td align="center">\eta</td><td align="center">$\eta$</td><td align="center">H</td><td align="center">$H$</td><td align="center">\theta</td><td align="center">$\theta$</td><td align="center">\Theta</td><td align="center">$\Theta$</td></tr><tr><td align="center">\iota</td><td align="center">$\iota$</td><td align="center">I</td><td align="center">$I$</td><td align="center">\kappa</td><td align="center">$\kappa$</td><td align="center">K</td><td align="center">$K$</td></tr><tr><td align="center">\lambda</td><td align="center">$\lambda$</td><td align="center">\Lambda</td><td align="center">$\Lambda$</td><td align="center">\mu</td><td align="center">$\mu$</td><td align="center">M</td><td align="center">$M$</td></tr><tr><td align="center">\nu</td><td align="center">$\nu$</td><td align="center">N</td><td align="center">$N$</td><td align="center">\xi</td><td align="center">$\xi$</td><td align="center">\Xi</td><td align="center">$\Xi$</td></tr><tr><td align="center">o</td><td align="center">$o$</td><td align="center">O</td><td align="center">$O$</td><td align="center">\pi</td><td align="center">$\pi$</td><td align="center">\Pi</td><td align="center">$\Pi$</td></tr><tr><td align="center">\rho</td><td align="center">$\rho$</td><td align="center">P</td><td align="center">$P$</td><td align="center">\sigma</td><td align="center">$\sigma$</td><td align="center">\Sigma</td><td align="center">$\Sigma$</td></tr><tr><td align="center">\tau</td><td align="center">$\tau$</td><td align="center">T</td><td align="center">$T$</td><td align="center">\upsilon</td><td align="center">$\upsilon$</td><td align="center">\Upsilon</td><td align="center">$\Upsilon$</td></tr><tr><td align="center">\phi</td><td align="center">$\phi$</td><td align="center">\Phi</td><td align="center">$\Phi$</td><td align="center">\chi</td><td align="center">$\chi$</td><td align="center">X</td><td align="center">$X$</td></tr><tr><td align="center">\psi</td><td align="center">$\psi$</td><td align="center">\Psi</td><td align="center">$\Psi$</td><td align="center">\omega</td><td align="center">$\omega$</td><td align="center">\Omega</td><td align="center">$\Omega$</td></tr><tr><td align="center">\partial</td><td align="center">$\partial$</td><td align="center">\nabla</td><td align="center">$\nabla$</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><p><strong>部分字母有变量专用形式，以 <code>\var-</code> 开头。</strong></p><table><thead><tr><th align="center">小写形式</th><th align="center">大写形式</th><th align="center">变量形式</th><th align="center">显示</th></tr></thead><tbody><tr><td align="center">\epsilon</td><td align="center">E</td><td align="center">\varepsilon</td><td align="center">$\epsilon \mid E \mid \varepsilon$</td></tr><tr><td align="center">\theta</td><td align="center">\Theta</td><td align="center">\vartheta</td><td align="center">$\theta \mid \Theta \mid \vartheta$</td></tr><tr><td align="center">\rho</td><td align="center">P</td><td align="center">\varrho</td><td align="center">$\rho \mid P \mid \varrho$</td></tr><tr><td align="center">\sigma</td><td align="center">\Sigma</td><td align="center">\varsigma</td><td align="center">$\sigma \mid \Sigma \mid \varsigma$</td></tr><tr><td align="center">\phi</td><td align="center">\Phi</td><td align="center">\varphi</td><td align="center">$\phi \mid \Phi \mid \varphi$</td></tr></tbody></table><h3 id="12．如何输入其它特殊字符"><a href="#12．如何输入其它特殊字符" class="headerlink" title="12．如何输入其它特殊字符"></a>12．如何输入其它特殊字符</h3><h4 id="1-．关系运算符"><a href="#1-．关系运算符" class="headerlink" title="(1)．关系运算符"></a>(1)．关系运算符</h4><table><thead><tr><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th></tr></thead><tbody><tr><td align="center">\pm</td><td align="center">$\pm$</td><td align="center">\times</td><td align="center">$\times$</td><td align="center">\div</td><td align="center">$\div$</td><td align="center">\mid</td><td align="center">$\mid$</td></tr><tr><td align="center">\nmid</td><td align="center">$\nmid$</td><td align="center">\cdot</td><td align="center">$\cdot$</td><td align="center">\circ</td><td align="center">$\circ$</td><td align="center">\ast</td><td align="center">$\ast$</td></tr><tr><td align="center">\odot</td><td align="center">$\odot$</td><td align="center">\otimes</td><td align="center">$\otimes$</td><td align="center">\oplus</td><td align="center">$\oplus$</td><td align="center">\leq</td><td align="center">$\leq$</td></tr><tr><td align="center">\geq</td><td align="center">$\geq$</td><td align="center">\neq</td><td align="center">$\neq$</td><td align="center">\approx</td><td align="center">$\approx$</td><td align="center">\equiv</td><td align="center">$\equiv$</td></tr><tr><td align="center">\sum</td><td align="center">$\sum$</td><td align="center">\prod</td><td align="center">$\prod$</td><td align="center">\coprod</td><td align="center">$\coprod$</td><td align="center">\backslash</td><td align="center">$\backslash$</td></tr></tbody></table><h4 id="2-．集合运算符"><a href="#2-．集合运算符" class="headerlink" title="(2)．集合运算符"></a>(2)．集合运算符</h4><table><thead><tr><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th></tr></thead><tbody><tr><td align="center">\emptyset</td><td align="center">$\emptyset$</td><td align="center">\in</td><td align="center">$\in$</td><td align="center">\notin</td><td align="center">$\notin$</td></tr><tr><td align="center">\subset</td><td align="center">$\subset$</td><td align="center">\supset</td><td align="center">$\supset$</td><td align="center">\subseteq</td><td align="center">$\subseteq$</td></tr><tr><td align="center">\supseteq</td><td align="center">$\supseteq$</td><td align="center">\cap</td><td align="center">$\cap$</td><td align="center">\cup</td><td align="center">$\cup$</td></tr><tr><td align="center">\vee</td><td align="center">$\vee$</td><td align="center">\wedge</td><td align="center">$\wedge$</td><td align="center">\uplus</td><td align="center">$\uplus$</td></tr><tr><td align="center">\top</td><td align="center">$\top$</td><td align="center">\bot</td><td align="center">$\bot$</td><td align="center">\complement</td><td align="center">$\complement$</td></tr></tbody></table><h4 id="3-．对数运算符"><a href="#3-．对数运算符" class="headerlink" title="(3)．对数运算符"></a>(3)．对数运算符</h4><table><thead><tr><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th></tr></thead><tbody><tr><td align="center">\log</td><td align="center">$\log$</td><td align="center">\lg</td><td align="center">$\lg$</td><td align="center">\ln</td><td align="center">$\ln$</td></tr></tbody></table><h4 id="4-．三角运算符"><a href="#4-．三角运算符" class="headerlink" title="(4)．三角运算符"></a>(4)．三角运算符</h4><table><thead><tr><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th></tr></thead><tbody><tr><td align="center">\backsim</td><td align="center">$\backsim$</td><td align="center">\cong</td><td align="center">$\cong$</td><td align="center">\angle A</td><td align="center">$\angle A$</td></tr><tr><td align="center">\sin</td><td align="center">$\sin$</td><td align="center">\cos</td><td align="center">$\cos$</td><td align="center">\tan</td><td align="center">$\tan$</td></tr><tr><td align="center">\csc</td><td align="center">$\csc$</td><td align="center">\sec</td><td align="center">$\sec$</td><td align="center">\cot</td><td align="center">$\cot$</td></tr></tbody></table><h4 id="5-．微积分运算符"><a href="#5-．微积分运算符" class="headerlink" title="(5)．微积分运算符"></a>(5)．微积分运算符</h4><table><thead><tr><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th></tr></thead><tbody><tr><td align="center">\int</td><td align="center">$\int$</td><td align="center">\iint</td><td align="center">$\iint$</td><td align="center">\iiint</td><td align="center">$\iiint$</td></tr><tr><td align="center">\partial</td><td align="center">$\partial$</td><td align="center">\oint</td><td align="center">$\oint$</td><td align="center">\prime</td><td align="center">$\prime$</td></tr><tr><td align="center">\lim</td><td align="center">$\lim$</td><td align="center">\infty</td><td align="center">$\infty$</td><td align="center">\nabla</td><td align="center">$\nabla$</td></tr></tbody></table><h4 id="6-．逻辑运算符"><a href="#6-．逻辑运算符" class="headerlink" title="(6)．逻辑运算符"></a>(6)．逻辑运算符</h4><table><thead><tr><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th></tr></thead><tbody><tr><td align="center">\because</td><td align="center">$\because$</td><td align="center">\therefore</td><td align="center">$\therefore$</td><td align="center">\neg</td><td align="center">$\neg$</td></tr><tr><td align="center">\forall</td><td align="center">$\forall$</td><td align="center">\exists</td><td align="center">$\exists$</td><td align="center">\not\subset</td><td align="center">$\not\subset$</td></tr><tr><td align="center">\not&lt;</td><td align="center">$\not&lt;$</td><td align="center">\not&gt;</td><td align="center">$\not&gt;$</td><td align="center">\not&#x3D;</td><td align="center">$\not&#x3D;$</td></tr><tr><td align="center">\vdash</td><td align="center">$\vdash$</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h4 id="7-．戴帽符号"><a href="#7-．戴帽符号" class="headerlink" title="(7)．戴帽符号"></a>(7)．戴帽符号</h4><table><thead><tr><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th></tr></thead><tbody><tr><td align="center">\hat{xy}</td><td align="center">$\hat{xy}$</td><td align="center">\widehat{xyz}</td><td align="center">$\widehat{xyz}$</td><td align="center">\bar{y}</td><td align="center">$\bar{y}$</td></tr><tr><td align="center">\tilde{xy}</td><td align="center">$\tilde{xy}$</td><td align="center">\widetilde{xyz}</td><td align="center">$\widetilde{xyz}$</td><td align="center">\acute{y}</td><td align="center">$\acute{y}$</td></tr><tr><td align="center">\breve{y}</td><td align="center">$\breve{y}$</td><td align="center">\check{y}</td><td align="center">$\check{y}$</td><td align="center">\grave{y}</td><td align="center">$\grave{y}$</td></tr><tr><td align="center">\dot{x}</td><td align="center">$\dot{x}$</td><td align="center">\ddot{x}</td><td align="center">$\ddot{x}$</td><td align="center">\dddot{x}</td><td align="center">$\dddot{x}$</td></tr></tbody></table><p>若需要在特定文字顶部\底部放置内容，可使用 <code>\overset&#123;顶部内容&#125;&#123;正常内容&#125;</code> 和 <code>\underset&#123;底部内容&#125;&#123;正常内容&#125;</code> 命令。<br>例内 <code>\qquad</code> <code>\quad</code> <code>\mid</code> <code>\;</code> <code>\,</code> 等均为空格或分隔符号，为方便公式格式对比而添加，请注意辨别。详见<a href="https://segmentfault.com/a/1190000042253190#">在字符间加入空格</a>。</p><ul><li><p>例子：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ <span class="string">\verb+\overset&#123;above&#125;&#123;level&#125;+</span> <span class="string">\qquad</span> <span class="string">\overset&#123;xx&#125;&#123;ABC&#125;</span> <span class="string">\;\;</span> <span class="string">\mid</span> <span class="string">\quad</span> <span class="string">\overset&#123;x^2&#125;&#123;\longmapsto&#125;\</span> <span class="string">\,</span> <span class="string">\mid</span> <span class="string">\quad</span> <span class="string">\overset&#123;\bullet\circ\circ\bullet&#125;&#123;T&#125;</span> $$</span><br></pre></td></tr></table></figure></li><li><p>显示：</p></li></ul><p>\overset{above}{level}𝐴𝐵𝐶𝑥𝑥∣⟼𝑥2 ∣𝑇∙∘∘∙\overset{above}{level}<em>A<strong>BC</strong>xx</em>∣⟼<em>x</em>2 ∣<em>T</em>∙∘∘∙</p><ul><li><p>例子：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ <span class="string">\verb+\underset&#123;below&#125;&#123;level&#125;+</span> <span class="string">\qquad</span> <span class="string">\underset&#123;xx&#125;&#123;ABC&#125;</span> <span class="string">\;\;</span> <span class="string">\mid</span> <span class="string">\quad</span> <span class="string">\underset&#123;x^2&#125;&#123;\longmapsto&#125;\</span> <span class="string">\,</span> <span class="string">\mid</span> <span class="string">\quad</span> <span class="string">\underset&#123;\bullet\circ\circ\bullet&#125;&#123;T&#125;</span> $$</span><br></pre></td></tr></table></figure></li><li><p>显示：</p></li></ul><p>\underset{below}{level}𝐴𝐵𝐶𝑥𝑥∣⟼𝑥2 ∣𝑇∙∘∘∙\underset{below}{level}<em>xx<strong>A</strong>BC</em>∣<em>x</em>2⟼ ∣∙∘∘∙<em>T</em></p><p>此命令可叠加嵌套使用，生成类似化学反应式的多重条件符号，<br>如 <code>\overset&#123;H_2&#125;&#123;\underset&#123;1300℃&#125;&#123;\Longleftrightarrow&#125;&#125;</code>：<br>SrO+VSr′′⟺1300℃H2SrSr×+2e′+12O2(g)SrO+VSr′′​1300℃⟺​H2​​SrSr×​+2e′+21​O2​(g)</p><p>和 <code>\overset&#123;Surface/bulk&#125;&#123;\underset&#123;diffusion&#125;&#123;\longleftrightarrow&#125;&#125;</code>：<br>2OHO(STN)∘+2OO(YSZ)×⟷diffusionSurface&#x2F;bulk2OHO(YSZ)∘+2OO(STN)×2OHO(STN)∘​+2OO(YSZ)×​diffusion⟷​Surface&#x2F;bulk​2OHO(YSZ)∘​+2OO(STN)×​</p><p>在书写化学方程式时可声明 <code>\require&#123;AMDcd&#125;</code> 语句，使用 MathJax 内置的交换图表功能，具体例子可<a href="https://segmentfault.com/a/1190000042253190#1%E5%A6%82%E4%BD%95%E8%BE%93%E5%85%A5%E4%B8%80%E4%B8%AA%E4%BA%A4%E6%8D%A2%E5%9B%BE%E8%A1%A8">参见下文</a>。</p><h4 id="8-．连线符号"><a href="#8-．连线符号" class="headerlink" title="(8)．连线符号"></a>(8)．连线符号</h4><p>其它可用的文字修饰符可参见官方文档 <a href="https://link.segmentfault.com/?enc=/HSJ3WSU0CTgZfNy5Yf78g==.R0WMMPY+9yDpdC3N2hOE4e25sOmj2pHTKz4+FOaaXMG8xcfQKCdeVlqbAUoyrmpRA1V8jXEgDaLKWFrqG6c04kNh/d7J1B2mKW4TrxU7OJwBvBY3jkNVBBo7dhaw2q4ao3XoT+1+a2w08WIsGYa/ew==">“Additional decorations”</a>。</p><table><thead><tr><th align="center">输入</th><th align="center">显示</th></tr></thead><tbody><tr><td align="center">\fbox{a+b+c+d}</td><td align="center">$\fbox{a+b+c+d}$</td></tr><tr><td align="center">\overleftarrow{a+b+c+d}</td><td align="center">$\overleftarrow{a+b+c+d}$</td></tr><tr><td align="center">\overrightarrow{a+b+c+d}</td><td align="center">$\overrightarrow{a+b+c+d}$</td></tr><tr><td align="center">\overleftrightarrow{a+b+c+d}</td><td align="center">$\overleftrightarrow{a+b+c+d}$</td></tr><tr><td align="center">\underleftarrow{a+b+c+d}</td><td align="center">$\underleftarrow{a+b+c+d}$</td></tr><tr><td align="center">\underrightarrow{a+b+c+d}</td><td align="center">$\underrightarrow{a+b+c+d}$</td></tr><tr><td align="center">\underleftrightarrow{a+b+c+d}</td><td align="center">$\underleftrightarrow{a+b+c+d}$</td></tr><tr><td align="center">\overline{a+b+c+d}</td><td align="center">$\overline{a+b+c+d}$</td></tr><tr><td align="center">\underline{a+b+c+d}</td><td align="center">$\underline{a+b+c+d}$</td></tr><tr><td align="center">\overbrace{a+b+c+d}^{Sample}</td><td align="center">$\overbrace{a+b+c+d}^{Sample}$</td></tr><tr><td align="center">\underbrace{a+b+c+d}_{Sample}</td><td align="center">$\underbrace{a+b+c+d}_{Sample}$</td></tr><tr><td align="center">\overbrace{a+\underbrace{b+c}_{1.0}+d}^{2.0}</td><td align="center">$\overbrace{a+\underbrace{b+c}_{1.0}+d}^{2.0}$</td></tr><tr><td align="center">\underbrace{a\cdot a\cdots a}_{b\text{ times}}</td><td align="center">$\underbrace{a\cdot a\cdots a}_{b\text{ times}}$</td></tr></tbody></table><h4 id="9-．箭头符号"><a href="#9-．箭头符号" class="headerlink" title="(9)．箭头符号"></a>(9)．箭头符号</h4><ul><li>推荐使用符号：</li></ul><table><thead><tr><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th></tr></thead><tbody><tr><td align="center">\to</td><td align="center">$\to$</td><td align="center">\mapsto</td><td align="center">$\mapsto$</td><td align="center">\underrightarrow{1℃&#x2F;min}</td><td align="center">$\underrightarrow{1℃&#x2F;min}$</td></tr><tr><td align="center">\implies</td><td align="center">$\implies$</td><td align="center">\iff</td><td align="center">$\iff$</td><td align="center">\impliedby</td><td align="center">$\impliedby$</td></tr></tbody></table><ul><li>其它可用符号：</li></ul><table><thead><tr><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th></tr></thead><tbody><tr><td align="center">\uparrow</td><td align="center">$\uparrow$</td><td align="center">\Uparrow</td><td align="center">$\Uparrow$</td></tr><tr><td align="center">\downarrow</td><td align="center">$\downarrow$</td><td align="center">\Downarrow</td><td align="center">$\Downarrow$</td></tr><tr><td align="center">\leftarrow</td><td align="center">$\leftarrow$</td><td align="center">\Leftarrow</td><td align="center">$\Leftarrow$</td></tr><tr><td align="center">\rightarrow</td><td align="center">$\rightarrow$</td><td align="center">\Rightarrow</td><td align="center">$\Rightarrow$</td></tr><tr><td align="center">\leftrightarrow</td><td align="center">$\leftrightarrow$</td><td align="center">\Leftrightarrow</td><td align="center">$\Leftrightarrow$</td></tr><tr><td align="center">\longleftarrow</td><td align="center">$\longleftarrow$</td><td align="center">\Longleftarrow</td><td align="center">$\Longleftarrow$</td></tr><tr><td align="center">\longrightarrow</td><td align="center">$\longrightarrow$</td><td align="center">\Longrightarrow</td><td align="center">$\Longrightarrow$</td></tr><tr><td align="center">\longleftrightarrow</td><td align="center">$\longleftrightarrow$</td><td align="center">\Longleftrightarrow</td><td align="center">$\Longleftrightarrow$</td></tr></tbody></table><h3 id="13．如何进行字体转换"><a href="#13．如何进行字体转换" class="headerlink" title="13．如何进行字体转换"></a>13．如何进行字体转换</h3><p>若要对公式的某一部分字符进行字体转换，可以用 <code>&#123;\字体 &#123;需转换的部分字符&#125;&#125;</code> 命令，其中 <code>\字体</code> 部分可以参照下表选择合适的字体。一般情况下，公式默认为斜体字 $italic$ 。</p><p>示例中 <strong>全部大写</strong> 的字体仅大写可用。</p><table><thead><tr><th align="center">输入</th><th align="center">全字母可用</th><th align="center">显示</th><th align="center">输入</th><th align="center">仅大写可用</th><th align="center">显示</th></tr></thead><tbody><tr><td align="center">\rm</td><td align="center">罗马体</td><td align="center">$\rm{Sample}$</td><td align="center"><strong>\mathcal</strong></td><td align="center"><strong>花体（数学符号等）</strong></td><td align="center">$\mathcal{SAMPLE}$</td></tr><tr><td align="center">\it</td><td align="center">斜体</td><td align="center">$\it{Sample}$</td><td align="center"><strong>\mathbb</strong></td><td align="center"><strong>黑板粗体（定义域等）</strong></td><td align="center">$\mathbb{SAMPLE}$</td></tr><tr><td align="center">\bf</td><td align="center">粗体</td><td align="center">$\bf{Sample}$</td><td align="center">\mit</td><td align="center">数学斜体</td><td align="center">$\mit{SAMPLE}$</td></tr><tr><td align="center">\sf</td><td align="center">等线体</td><td align="center">$\sf{Sample}$</td><td align="center">\scr</td><td align="center">手写体</td><td align="center">$\scr{SAMPLE}$</td></tr><tr><td align="center">\tt</td><td align="center">打字机体</td><td align="center">$\tt{Sample}$</td><td align="center">\cal</td><td align="center">等同于 <code>\mathcal</code></td><td align="center">$\cal{ABCXYZ}$</td></tr><tr><td align="center">\frak</td><td align="center">旧德式字体</td><td align="center">$\frak{Sample}$</td><td align="center">\Bbb</td><td align="center">等同于 <code>\mathbb</code></td><td align="center">$\Bbb{ABCXYZ}$</td></tr><tr><td align="center">\boldsymbol</td><td align="center">向量或者矩阵的加粗斜体</td><td align="center">$\boldsymbol{\vec\alpha}$</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><p>转换字体十分常用，例如在积分中：</p><ul><li><p>例子：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">\begin&#123;array&#125;&#123;cc&#125;</span></span><br><span class="line">  <span class="string">\mathrm&#123;Bad&#125;</span> &amp; <span class="string">\mathrm&#123;Better&#125;</span> <span class="string">\\</span></span><br><span class="line">  <span class="string">\hline</span> <span class="string">\\</span></span><br><span class="line">  <span class="string">\int_0^1</span> x^<span class="number">2</span> dx &amp; <span class="string">\int_0^1</span> x^<span class="number">2</span> <span class="string">\,&#123;\rm</span> d&#125;x</span><br><span class="line"><span class="string">\end&#123;array&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>显示：</p><p>BadBetter∫01𝑥2𝑑𝑥∫01𝑥2d𝑥Bad∫01<em>x</em>2<em>d**x</em>Better∫01<em>x</em>2d<em>x</em></p></li></ul><p>注意比较两个式子间 $dx$ 与 ${\rm d} x$ 的不同。<br>使用 <code>\operatorname</code> 命令也可以达到相同的效果，详见<a href="https://segmentfault.com/a/1190000042253190#">定义新的运算符</a>。</p><h3 id="14．如何高亮一行公式"><a href="#14．如何高亮一行公式" class="headerlink" title="14．如何高亮一行公式"></a>14．如何高亮一行公式</h3><p>使用 <code>\bbox[底色, (可选)边距, (可选)边框 border: 框宽度 框类型 框颜色]</code> 命令来高亮一行公式。<br>底色和框颜色支持详见“<a href="https://segmentfault.com/a/1190000042253190#">更改文字颜色</a>”，边距及框宽度支持 <code>绝对像素 px</code> 或 <code>相对大小 em</code>，框类型支持 <code>实线 solid</code> 或 <code>虚线 dashed</code>。</p><ul><li><p>例子：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line"><span class="string">\bbox[yellow]&#123;</span></span><br><span class="line">  e^x=<span class="string">\lim_&#123;n\to\infty&#125;</span> <span class="string">\left(</span> <span class="number">1</span>+<span class="string">\frac&#123;x&#125;&#123;n&#125;</span> <span class="string">\right)^n</span> <span class="string">\qquad</span> (<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure></li><li><p>显示：</p></li></ul><p>$$ \bbox[yellow]{ e^x&#x3D;\lim_{n\to\infty} \left( 1+\frac{x}{n} \right)^n \qquad (1) } $$</p><ul><li>例子：</li></ul><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line"><span class="string">\bbox[#9ff,</span> <span class="number">5px</span>]&#123; % 此处向外添加 <span class="number">5</span> 像素的边距</span><br><span class="line">    e^x=<span class="string">\lim_&#123;n\to\infty&#125;</span> <span class="string">\left(</span> <span class="number">1</span>+<span class="string">\frac&#123;x&#125;&#123;n&#125;</span> <span class="string">\right)^n</span> <span class="string">\qquad</span> (<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><ul><li>显示：</li></ul><p>$$ \bbox[#9ff, 5px]{ e^x&#x3D;\lim_{n\to\infty} \left( 1+\frac{x}{n} \right)^n \qquad (1) } $$</p><ul><li>例子：</li></ul><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">% 此处使用 <span class="number">0.5</span> 倍行高作为边距，附加 <span class="number">2</span> 像素的实线边框（Ctrl+Alt+Y 可见）</span><br><span class="line"><span class="string">\bbox[#2f3542,</span> <span class="number">0.5em</span>, border:<span class="number">2px</span> solid <span class="comment">#f1f2f6]&#123;</span></span><br><span class="line">    <span class="string">\color&#123;#f1f2f6&#125;&#123;e^x=\lim_&#123;n\to\infty&#125;</span> <span class="string">\left(</span> <span class="number">1</span>+<span class="string">\frac&#123;x&#125;&#123;n&#125;</span> <span class="string">\right)^n</span> <span class="string">\qquad</span> (<span class="number">1</span>)&#125;</span><br><span class="line">&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><ul><li>显示：</li></ul><p>$$ \bbox[#2f3542, 0.5em, border:2px solid #f1f2f6]{ \color</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;转载：&lt;a href=&quot;https://segmentfault.com/a/1190000042253190&quot;&gt;https://segmentfault.com/a/1190000042253190&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;一、公式使用参考&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    <category term="工具" scheme="http://ai.mak.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Markdown" scheme="http://ai.mak.cn/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>2023 哔哩哔哩技术精选技术干货</title>
    <link href="http://ai.mak.cn/2024/01/06/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/2023%20%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E6%8A%80%E6%9C%AF%E7%B2%BE%E9%80%89%E6%8A%80%E6%9C%AF%E5%B9%B2%E8%B4%A7/"/>
    <id>http://ai.mak.cn/2024/01/06/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/2023%20%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E6%8A%80%E6%9C%AF%E7%B2%BE%E9%80%89%E6%8A%80%E6%9C%AF%E5%B9%B2%E8%B4%A7/</id>
    <published>2024-01-05T16:00:00.000Z</published>
    <updated>2024-02-20T09:06:59.773Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2023-哔哩哔哩技术精选技术干货"><a href="#2023-哔哩哔哩技术精选技术干货" class="headerlink" title="2023 哔哩哔哩技术精选技术干货"></a>2023 哔哩哔哩技术精选技术干货</h1><p>作者：哔哩哔哩技术 <a href="https://www.bilibili.com/read/cv28997672/">https://www.bilibili.com/read/cv28997672/</a> 出处：bilibili</p><p>哔哩哔哩技术精彩回顾（点击标题查看）</p><p><strong>01</strong> <a href="https://www.bilibili.com/read/cv22150189/?from=search&spm_id_from=333.337.0.0"><strong>节省数亿IT成本，B站FinOps实践</strong></a></p><blockquote><p>B站在22年初开始落地FinOps，并连续两年实现了，业务增长技术成本零增长。本文介绍了B站如何落地FinOps，推进成本洞察、技术优化和运营优化，提升资源效率的经验，最终实现了数亿IT成本的节省。</p></blockquote><p><strong>02</strong> <a href="https://www.bilibili.com/read/cv24473211/?from=search&spm_id_from=333.337.0.0"><strong>持续降本：B站日志平台3.0演进之路</strong></a></p><blockquote><p>基于ClickHouse的Billions 2.0日志方案上线后，我们又引入了基于Iceberg的湖仓一体架构，推出了Billions 3.0方案。本文介绍了Billions 3.0方案如何进一步提高资源利用率，以实现降本增效的目标，以及我们在存储和引擎层面针对日志场景所做的优化工作。</p></blockquote><p><strong>03</strong> <a href="https://www.bilibili.com/read/cv27753037/?from=search&spm_id_from=333.337.0.0"><strong>云厂商CDN故障后，连夜设计了云边端协同新方案</strong></a></p><blockquote><p>CDN、SLB和BFS网关类流量层组件，天然具备分布式容灾能力，在故障的转移、降级重试和熔断层面，做好上下游的限流统一口径、分层分组件的降级预案、以及服务SLO指标承诺，同时结合端侧开放的调度能力，可以大大提升整体链路的容灾降级能力。</p></blockquote><p><strong>04</strong> <a href="https://www.bilibili.com/read/cv23920810/?from=search&spm_id_from=333.337.0.0"><strong>账号多租户架构升级与落地实践</strong></a></p><blockquote><p>当我们有很多重复的轮子时，服务维护成本高且效率低，平台化建设就显得尤为重要。本文介绍了账号平台化建设的经验，详细分析了账号系统的架构设计逻辑，平台化下不同业务差异化逻辑的设计方案，以及系统灰度切换方案。</p></blockquote><p><strong>05</strong> <a href="https://www.bilibili.com/read/cv25743553/?from=search&spm_id_from=333.337.0.0"><strong>从0到1:哔哩哔哩智能客服系统的设计与实现</strong></a></p><blockquote><p>B站过去的客服系统是通过外部采购获得的，已经运行了几年。然而，随着公司业务的快速发展，外部采购的系统逐渐暴露出其局限性。该系统难以根据业务需求进行定制化开发，而且也无法与公司内部系统进行高效整合，进而影响了工作效率的提升。为了解决这些问题，我们决定开展新客服系统的自主研发工作。经过深入调研、访谈和体验评估，我们确定了几个关键的指标，如用户满意度、智能问答拦截率和平均处理时长。这些核心指标为新客服系统的研发提供了明确的方向。我们从0到1研发了客服系统的智能问答，坐席调度，工作台，知识库，IM聊天基础能力，客服工单，权限管理。本文将带你了解各个核心模块的主要设计思想和实现过程。</p></blockquote><p><strong>06</strong><a href="https://www.bilibili.com/read/cv21576373/?from=search&spm_id_from=333.337.0.0"><strong>【点个赞吧】 - B站千亿级点赞系统服务架构设计</strong></a></p><blockquote><p>B站最具代表的功能之一，为了经受住百万流量、千亿存储的压力，且提供超高的服务可用性与容灾能力，点赞高可用系统应运而生。同时系统不断改造升级，多级|多态存储、双机房等不断演进。</p></blockquote><p><strong>07</strong> <a href="https://www.bilibili.com/read/cv22750308/?from=search&spm_id_from=333.337.0.0"><strong>B站PC客户端-架构设计</strong></a></p><blockquote><p>相对与WEB网页，PC客户端具有跓留电脑的快捷、独立的应用窗口、特有的交互方式等优势。我站之前有一个收编于第三方的UWP客户端，不仅UI粗糙而且还有维护困难、不能跨平台等问题。在21年底，一个电脑预装的需求让我们有了开发一个全新的PC客户端的想法。在降本增效的大背景下，我们通过现有团队抽调人力的方式，采用成熟的跨平台Electron框架，爆肝3个多月完成了1.0版本的研发，实现了直播、推荐、番剧、影视、动态、空间和UGC&#x2F;OGV视频播放等功能，后续迭代中还实现了消息、离线缓存、增量更新、播放本地视频、精选模式、视频投稿等新功能。新版本哔哩哔哩PC客户端于22年5月10在官网正式上线，包含MacOS和Windows两个版本，适配Arm和X86系统架构。我们与联想、惠普达成了预装合作，在微软商店、腾讯管家、华为应用市场、360软件管家等多个PC软件渠道完成了上线，还入选了23年微软商店『精选娱乐应用』和华为市场的『闲暇时光首选』。</p></blockquote><p><strong>08</strong> <a href="https://www.bilibili.com/read/cv26375467/?from=search&spm_id_from=333.337.0.0"><strong>告警平台：给告警一个胶带</strong></a></p><blockquote><p>因为需要质量所以需要告警。从告警覆盖到告警处理、跟进与治理的闭环有助于持续改善告警。告警系统好比一个强力宽胶带把业务研发、组件研发、SRE粘合在一起，快速感知故障，提前发现隐患，让B站行稳致远。本文介绍了B站告警平台一年来的具体演进，包括但不限于构建告警合作模式、丰富告警处理手段、告警治理提升超10倍信噪比实践等，希望能给到大家帮助。</p></blockquote><p><strong>09</strong> <a href="https://www.bilibili.com/read/cv20999025/?from=search&spm_id_from=333.337.0.0"><strong>热点检测治理</strong></a></p><blockquote><p>热门活动和突发热点话题往往会带来瞬间的极端流量，同时这种流量存在极大的负载倾斜。为了快速识别突发热点以及解决热点带来的负载倾斜问题， 我们开发了自动热点识别与治理框架。该框架基于HeavyKeeper算法实现，同时通过衰减优化极大提高了热点检测的灵敏度，达到了热点流量的秒级识别。此外对于识别到的热点，框架自动集成了local cache，通过local cache可以大幅降低后端服务的负载，local cache还支持运营侧白名单配置，支持热门活动的快速预热。灵敏的热点识别度以及高命中率的local cache大幅提升了业务应对突发热点冲击的可用性。</p></blockquote><p><strong>10</strong> <strong><a href="https://www.bilibili.com/read/cv28615128/?from=search&spm_id_from=333.337.0.0">爬虫与反爬-接口安全的风控介绍</a></strong></p><blockquote><p>互联网平台开放的接口众多，其中不少包含了平台重要的数据信息，网络上各式各样的爬虫经常会针对这些接口进行攻击，对于接口的保护和对爬虫流量的清理，对于平台的稳定和数据安全有着至关重要的作用。本文从哔哩哔哩上存在的爬虫形式入手，介绍了当前针对爬虫的攻击，在数据链路、可信校验、风险识别策略、异常感知、风险处置等方面做的防控工作。</p></blockquote><p><strong>11</strong> <strong><a href="https://www.bilibili.com/read/cv27467636/?from=search&spm_id_from=333.337.0.0">B站KAFKA探索与实践</a></strong></p><blockquote><p>开源kafka作为消息组件的主要选择，在大数据领域也有重要的作用。尽管kafka已是成熟的组件，然而在大规模高流量场景下，kafka的维护工作依然是很痛的。本文介绍了我们在kafka的稳定性层面的思考，以及对应的优化思路，一步步将kafka打造成多租户隔离高吞吐低成本的自维护系统。</p></blockquote><p><strong>12</strong> <strong><a href="https://www.bilibili.com/read/cv24072108/?from=search&spm_id_from=333.337.0.0">竟然是”你”偷走了那0.001的服务可用性</a></strong></p><blockquote><p>在业务开发过程中，或多或少会遇到一些性能问题，不少还是疑难杂症，难以下手。我们也知道go有强大的pprof性能分析工具，但是实战时经常一头雾水。本文以一次服务抖动性能问题解决过程为例，讲述go性能问题排查思路以及常用手段，没有难懂的理论知识，简单直白。</p></blockquote><p><strong>13</strong> <a href="https://www.bilibili.com/read/cv28773484/?from=search&spm_id_from=333.337.0.0"><strong>B站大型开播平台重构</strong></a></p><blockquote><p>B站开播平台作为直播内容的产出入口，伴随着B站直播的成长贯穿始终。然而业务飞速成长的同时也必然伴随着技术债务的积累，加之业务知识的遗忘、技术栈的不统一等问题，开播平台几乎已经变成了一个遗留系统，无法满足业务快速迭代的需求，因此从PHP到Go的重构势在必行。本文讲述的重构采用了领域驱动设计作为架构理念，并使用六边形架构作为架构风格。同时，采用了测试驱动开发等方法论来推动项目的实施，并借助事件溯源、流量复制、链路观测等工程设计和运维方法，以确保新系统的顺利上线。在本文中，你还可以了解到开播平台重构全过程的问题分析、设计思路和实际示例，以及安全的新旧服务切换操作和项目顺利上线后的提升效果展示。让我们一起深入探索B站开播平台重构的历程吧，相信在读完本文能让你对大型重构项目有所思考~</p></blockquote><p><strong>14</strong> <a href="https://www.bilibili.com/read/cv25913386/?from=search&spm_id_from=333.337.0.0"><strong>高达平台 - 全链路低代码解决方案</strong></a></p><blockquote><p>低代码开发平台已成为现代软件开发的革命性工具，它们极大地简化了应用程序的开发过程，使得无需深入编程经验的开发者也能快速构建和部署应用。通过图形化界面和预置组件，低代码平台使企业能够迅速响应业务需求、加速数字转型并优化客户体验。这种方法不仅提高了开发效率和生产力，还降低了开发成本和复杂性，使更多的组织能够在竞争激烈的市场中保持敏捷和创新。它将继续推动着业务和IT部门之间的协同工作，为未来的数字化时代创造更多的可能性。</p></blockquote><p><strong>15</strong> <strong><a href="https://www.bilibili.com/read/cv27905829/?from=search&spm_id_from=333.337.0.0">B站故障演练平台实践</a></strong></p><blockquote><p>B 站故障演练平台，深度结合公司业务特点，在微服务框架中嵌入故障演练中间件，提供依赖自动收集、基础组件故障注入、灵活的爆炸半径控制、丰富的演练场景策略等多种能力，助力业务实现强弱依赖治理，提升系统稳定性。此外，通过丰富的开放接口，平台可实现与各类自动化流程打通，实现演练的自动化、常态化，有效提升演练的效率。</p></blockquote><p><strong>16</strong> <a href="https://www.bilibili.com/read/cv21313074/?from=search&spm_id_from=333.337.0.0"><strong>B站微服务API管理</strong></a></p><blockquote><p>API管理在应用开发的过程中至关重要，B站采用自动生成的方式，通过标准化接口定义，自动采集和生成API文档，从而提高开发效率并减少管理工作。文章总结了B站在API管理方面的经验，阐述API管理对于降低成本和提高效率的关键作用。随着公司规模扩大和接口数量增加，统一的API管理平台能够减少跨部门沟通成本。</p></blockquote><p><strong>17</strong> <a href="https://www.bilibili.com/read/cv22232558/?from=search&spm_id_from=333.337.0.0"><strong>资源隔离技术之内存隔离</strong></a></p><blockquote><p>本文由混部技术的内存隔离问题引入对龙蜥社区开源内核memcg OOM 优先级和memcg后台异步回收特性的分析，并基于相关特性进行了简单的模拟混部测试，结果表明：memcg OOM优先级可以降低在线任务被杀死的概率，优先杀死离线任务，但先祖memcg发生OOM时，对在线任务造成的性能影响仍然无法消除；memcg后台异步回收可以降低在线任务触发直接内存回收的概率，但在线任务<code>Page Cache</code>也被回收，可能对其性能造成一定影响；未来我们将通过不断地实践内存隔离能力在混部场景中的应用，持续发现和解决其中存在的问题，打磨出最适合B站业务混部的内存隔离方案，助力降本增效。</p></blockquote><p><strong>18</strong> <strong><a href="https://www.bilibili.com/read/cv22970825/?from=search&spm_id_from=333.337.0.0">实现亿级费用减省,B站大数据治理之路</a></strong></p><blockquote><p>如今各行各业都开始认同 数据治理 是发挥数据资产价值的必要手段，2020年开始 B站大数据团队 开始实践数据治理，2022年 公司成立了数据委员会 继续发力支持数据治理工作。 本文详细拆解了 团队在2个治理阶段中的 核心问题 与 解题思路，主要包括对如下问题的深度探讨：如何启动数据治理？如何让用户参与配合？如何化被动为主动？</p></blockquote><p><strong>19</strong> <strong><a href="https://www.bilibili.com/read/cv22543150/?from=search&spm_id_from=333.337.0.0">bilibili-AVIF图片格式落地</a></strong></p><blockquote><p>文章介绍了B站在AVIF图片格式落地方面的实践和经验。AVIF是一种开源的图片格式，具有更高的压缩率和更小的文件体积，对于提升网页性能和用户体验具有重要意义。文章详细介绍了B站在AVIF格式落地过程中的技术选型、方案设计、性能测试等方面的考虑，以及在实际应用中遇到的问题和解决方案。通过采用AVIF格式，B站成功地提升了网页加载速度和用户体验，同时也为其他网站提供了有益的参考和借鉴。</p></blockquote><p><strong>20</strong> <a href="https://www.bilibili.com/read/cv21867369/?from=search&spm_id_from=333.337.0.0"><strong>B站流程引擎设计与实践</strong></a></p><blockquote><p>在企业快速发展的档口，如何搭建一套兼容当前IT架构且能适应未来变化的通用业务流程引擎是提升企业运营效率的关键。Comet流程引擎自 2019 年启动研发并发布第一个版本，至今已陆续发布多个正式版本。该系统以其足够的灵活性、通用性和易用性，支撑了B站业务中大量需要借助流程引擎来实现逻辑流转和自动化的场景，跨度从底层基础设施、基础架构到上层各类业务，如各类资源申请、应用发布、推送审核、电子签约、版权评级等等。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2023-哔哩哔哩技术精选技术干货&quot;&gt;&lt;a href=&quot;#2023-哔哩哔哩技术精选技术干货&quot; class=&quot;headerlink&quot; title=&quot;2023 哔哩哔哩技术精选技术干货&quot;&gt;&lt;/a&gt;2023 哔哩哔哩技术精选技术干货&lt;/h1&gt;&lt;p&gt;作者：哔哩哔哩技术 </summary>
      
    
    
    
    <category term="技术小栈" scheme="http://ai.mak.cn/categories/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/"/>
    
    
    <category term="技术小栈" scheme="http://ai.mak.cn/tags/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>2023 中国开源开发者报告</title>
    <link href="http://ai.mak.cn/2023/12/28/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/2023%20%E4%B8%AD%E5%9B%BD%E5%BC%80%E6%BA%90%E5%BC%80%E5%8F%91%E8%80%85%E6%8A%A5%E5%91%8A/"/>
    <id>http://ai.mak.cn/2023/12/28/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/2023%20%E4%B8%AD%E5%9B%BD%E5%BC%80%E6%BA%90%E5%BC%80%E5%8F%91%E8%80%85%E6%8A%A5%E5%91%8A/</id>
    <published>2023-12-27T16:00:00.000Z</published>
    <updated>2024-02-20T02:56:11.332Z</updated>
    
    <content type="html"><![CDATA[<p>《2023 中国开源开发者报告》正式发布。</p><p><img src="https://p8.itc.cn/q_70/images01/20231230/4281dad4482343a5ab5ff8d45e000974.png" alt="img"></p><p>此报告由开源中国与 Gitee 发布，整体分为三章，分别是：</p><ul><li>第一章《开源开发者事件回顾》</li><li>第二章《2023 LLM 技术报告》</li><li>第三章《&lt;Gitee × OSS Compass&gt; Insight：中国开发者开源新动向》</li></ul><p>开源开发者圈子来看，2023 年是大模型 LLM 年、生成式 AI GenAI 年。</p><p>LLM 领域大放异彩，此报告浓墨重彩地在《2023 LLM 技术报告》中梳理了 2023 年 LLM 的技术行情。报告整体围绕 LLM Tech Map 梳理逻辑来展开，从基础设施、大模型、Agent、AI 编程、工具和平台，以及算力几个方面，为开发者整理了当前 LLM 中最为热门和硬核的技术领域以及相关的软件产品和开源项目。</p><p><img src="https://p1.itc.cn/q_70/images01/20231229/d2cac718b89b4e5e93fb59eec81d34ac.png" alt="img"></p><p><strong>《2023 LLM 技术报告》详情可查看（这是子报告）：</strong><br><strong><a href="https://talk.gitee.com/report/china-open-source-2023-llm-report.pdf?fr=media">https://talk.gitee.com/report/china-open-source-2023-llm-report.pdf?fr=media</a></strong></p><p>除了 LLM，开源开发者圈当然还有更多高亮事件，此次年度报告中整理成了另一篇章《开源开发者事件回顾》，这一篇章梳理成了 9 个大块：</p><ul><li>【AIGC】回顾 2023 大语言模型 LLM 元年的重磅事件。</li><li><strong>【1024 黄金眼】关注 IT 相关民生事件，以老百姓的眼睛看 IT 圈，和开发者零距离接触。</strong></li><li>【项目停更】到了该说 “再见” 的时候了，江湖有缘再见。</li><li><strong>【生产事故】冥场面！速来围观 2023 十大生产事故 “名场面”。</strong></li><li>【开源治理】开源健康发展必不可少的一环。</li><li><strong>【硬核发版】最硬核、最极客的年度发版汇总！</strong></li><li>【热门话题】回顾 2023 年度热门开发者事件！</li><li><strong>【重磅官宣】2023 年度开源官宣。</strong></li><li>【R.I.P.】谨以此篇纪念今年离我们而去的行业巨擘。</li></ul><p>这些事件，作为圈内人的你还有印象吗？</p><p>第三章《&lt;Gitee × OSS Compass&gt; Insight：中国开发者开源新动向》中，采用 Gitee 与 OSS Compass 作为数据来源，试图通过数据来反映 2023 年开源开发者圈子的相关情况。亮点数据：</p><ul><li>TypeScript 是增长最快的编程语言，增长率达到 49.04%</li><li>MulanPSL-2.0 在 “2023 年使用增长率最快的开源许可证” 中排行第二，增长率为 18.34%</li><li>较为活跃的社区代表：OpenHarmony、openEuler 与 MindSpore</li></ul><p><strong>详情请查看完整报告：</strong><br><strong><a href="https://talk.gitee.com/report/china-open-source-2023-annual-report.pdf?fr=media">https://talk.gitee.com/report/china-open-source-2023-annual-report.pdf?fr=media</a></strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;《2023 中国开源开发者报告》正式发布。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://p8.itc.cn/q_70/images01/20231230/4281dad4482343a5ab5ff8d45e000974.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;此</summary>
      
    
    
    
    <category term="技术小栈" scheme="http://ai.mak.cn/categories/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/"/>
    
    
    <category term="技术小栈" scheme="http://ai.mak.cn/tags/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>系统性能指标规范</title>
    <link href="http://ai.mak.cn/2023/11/23/%E6%9D%82%E8%AE%B0/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87%E8%A7%84%E8%8C%83/"/>
    <id>http://ai.mak.cn/2023/11/23/%E6%9D%82%E8%AE%B0/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87%E8%A7%84%E8%8C%83/</id>
    <published>2023-11-22T16:00:00.000Z</published>
    <updated>2024-02-18T06:45:32.894Z</updated>
    
    <content type="html"><![CDATA[<ol><li><strong>系统界面操作反应时间要求：</strong><ul><li>用户界面操作应在2秒以内响应，确保用户体验流畅。</li><li>针对复杂操作或数据加载，允许最长5秒的等待时间。</li><li>超过5秒的操作，采用异步交互设计。</li></ul></li><li><strong>系统最大承载容量：</strong><ul><li>平台应支持同时管理xxx千万台网络设备。</li><li>平台设计容量应考虑未来扩展，确保在硬件升级的情况下能够支持更大规模的网元管理。</li></ul></li><li><strong>并发性要求：</strong><ul><li>平台应支持最少1000个并发用户会话。</li><li>同时，平台应具备处理至少10,000个并发操作的能力，以保证多用户&#x2F;多系统同时执行任务时系统稳定性。</li></ul></li><li><strong>程序异常恢复时间要求：</strong><ul><li>系统应在出现异常情况时自动触发故障恢复机制，按照故障等级，确保在30分钟内恢复正常状态。</li><li>异常恢复过程中，系统应记录详细的日志，以便进行故障分析和改进。</li></ul></li><li><strong>日志记录与管理：</strong><ul><li>平台应具备完善的日志记录功能，记录所有关键操作和异常情况。</li><li>日志存储时间不少于60天，且支持日志的检索与导出功能。</li></ul></li><li><strong>安全性能指标：</strong><ul><li>平台应具备防护措施，确保对恶意攻击和未授权访问的及时响应。</li><li>安全审计功能应记录所有敏感操作，并在检测到异常行为时触发告警。</li></ul></li><li><strong>系统可用性要求：</strong><ul><li>平台应实现99.99%的系统可用性，包括计划维护期内的可用性。</li><li>系统升级和维护应在低峰时段进行，最小化对用户的影响。</li></ul></li><li><strong>性能监控与调优：</strong><ul><li>平台应提供性能监控工具，用于实时监测系统各项指标。</li><li>周期性进行性能调优，确保系统在长时间运行中依然保持高性能状态。</li></ul></li><li><strong>用户培训与支持：</strong><ul><li>提供详尽的用户手册和培训材料，以帮助用户更好地了解和使用系统。</li><li>设立专业技术支持团队，及时响应用户的问题和反馈。</li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;系统界面操作反应时间要求：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;用户界面操作应在2秒以内响应，确保用户体验流畅。&lt;/li&gt;
&lt;li&gt;针对复杂操作或数据加载，允许最长5秒的等待时间。&lt;/li&gt;
&lt;li&gt;超过5秒的操作，采用异步交互设计。&lt;/li&gt;
&lt;</summary>
      
    
    
    
    <category term="工具" scheme="http://ai.mak.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="运维" scheme="http://ai.mak.cn/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>得到精选｜运动的杠杆：真正有效的锻炼方法是什么</title>
    <link href="http://ai.mak.cn/2023/10/16/%E6%9D%82%E8%AE%B0/%E8%BF%90%E5%8A%A8%E7%9A%84%E6%9D%A0%E6%9D%86%EF%BC%9A%E7%9C%9F%E6%AD%A3%E6%9C%89%E6%95%88%E7%9A%84%E9%94%BB%E7%82%BC%E6%96%B9%E6%B3%95%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
    <id>http://ai.mak.cn/2023/10/16/%E6%9D%82%E8%AE%B0/%E8%BF%90%E5%8A%A8%E7%9A%84%E6%9D%A0%E6%9D%86%EF%BC%9A%E7%9C%9F%E6%AD%A3%E6%9C%89%E6%95%88%E7%9A%84%E9%94%BB%E7%82%BC%E6%96%B9%E6%B3%95%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/</id>
    <published>2023-10-15T16:00:00.000Z</published>
    <updated>2023-10-23T03:15:44.310Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>节选自：得到精选｜运动的杠杆：真正有效的锻炼方法是什么</p></blockquote><p>咱们继续讲彼得·阿提亚的《超预期寿命》这本书。前面我们已经介绍了导致现代人衰老和死亡最重要的四种原因 —— 代谢障碍、心血管疾病、癌症和神经退行性疾病 —— 这“四骑士”的机制，这一讲开始我们来说应对方法。</p><p>阿提亚把应对策略分为五个方面：运动、营养、睡眠、情绪和药物，其中药物都是穿插提到，我们重点说前四个方面。</p><p>有个笑话说，如果我知道我将来会死在哪里，我只要确保不去那个地方就行了。这个思路其实是有用的。如果我们知道自己最有可能死亡的原因，而且这个原因碰巧又可以用比较微小的代价避免，那这就是一个杠杆，你就很值得去做一点事情避免那个情况。</p><p>幸运的是，确实存在这样的杠杆。</p><p>比如说，每年都有很多人死于车祸，通常大家认为车祸的原因有超速、酒后驾车、开车注意力不集中等等，这些对我们的帮助不是很大，因为你防不胜防。但是有一个数据，却是特别有用。</p><p>有相当高比例的车祸死亡事故，是发生在交叉路口。</p><p>你正常开车驶过一个路口，你的前方是绿灯，你没毛病。可是跟你交叉的路上有个司机闯红灯，正好从左侧撞到你的车上……遇到这种情况你特别容易死。</p><p>但这种情况也特别容易避免。只要你每次过路口的时候，哪怕自己是绿灯，也先往左边看一眼，确保那边的车都停下了你再过。这是一个非常小的动作，但是它能让你避免一种非常常见的交通意外死亡。四两拨千斤，这就是杠杆。所以这就是你必须做的事情。</p><p>同样道理，我们不可能把所有时间都花在长寿上，这里面也需要杠杆。如果花20%的时间就能起到80%的作用，那就应该优先做好那20%。</p><p>而对长寿来说，最重要的杠杆就是我们这一讲要说的运动。<strong>运动是对健康和寿命最有效的干预，比任何药物、任何其他干预措施都有效。</strong></p><p>而且哪怕你每天只做一点运动，就比完全不运动要好得多。研究表明每周90分钟的运动量 —— 也就是每天十几分钟 —— 就能把各种原因导致的死亡风险降低14%：你很难找到这么有效的药物。这就是你最值得做的事情。</p><p>而且运动之中还有运动的杠杆。<strong>我们最应该关心的是三个指标：心肺功能、肌肉力量和稳定性。</strong></p><p>✵</p><p>在讲这三个指标之前，咱们先说一种最基本的运动，也是我们专栏之前讲丹尼尔·利伯曼的《锻炼》那本书时提到过的，叫做「中等强度有氧运动」。阿提亚把它称之为「第二区」运动，这是一般健身教练根据运动强度进行的分区，第二区是强度比较弱但不是散步那种最弱的，是大约介于快走和慢跑之间。</p><p>你快走、慢跑、游泳或者骑自行车都可以，要点是在做这个运动的时候你可以说完整的句子，但是说话感觉有点费力。你的心率大约是你最高心率的70%-85%。</p><p>这个运动本身并不费力，你甚至觉得挺轻松，可以坚持很长时间。初学者只要快走就能进入第二区，有运动基础的可能得比如用跑步机走个上坡，都比较容易。中等强度有氧运动锻炼的是所谓「1型肌肉纤维」，也就是慢肌腱，适合慢节奏、高耐力的动作，长时间使用也不会疲劳。</p><p>从利伯曼和阿提亚这两本书看来，现在学界已经形成共识，这个中等强度有氧运动，就是一切锻炼的根本。如果你只能练一门功夫，练这个就对了。</p><p>中等强度有氧不仅有利于减肥，而且有利于身体的综合健康，它给做其他任何事情提供了耐力基础。</p><p>其中一个重要作用是改善线粒体。线粒体是帮助细胞产生能量的一种物质，它能燃烧葡萄糖和脂肪。衰老最显著的特征就是线粒体的数量和质量在下降。中等强度有氧运动能刺激细胞产生更有效的线粒体。线粒体健康，身体代谢葡萄糖和脂肪的能力就强，尤其是能代谢更多的脂肪 —— 这就是为什么中等强度有氧运动最有利于减肥，也最能有效控制1型和2型糖尿病。</p><p>中等强度有氧的强度又不高，方法又随意，那么关键就是得保证运动时间。如果年龄比较大或是刚刚开始训练，每周两次、每次30分钟就大有助益。如果你有一定的运动基础，每周4次、每次45分钟效果更好。</p><p>而且这种运动还对大脑有好处。我们专栏前面讲过散步对大脑思维的好处，阿提亚这里则是特别强调二区运动能增加大脑的血流量，而这有助于预防阿尔茨海默症、提升认知能力。</p><p>这样说来，每天快走几十分钟，一边走一边听听得到什么的，就是你最重要的长寿杠杆。</p><p>在这个基础之上，我们需要优化三项指标。</p><p>✵</p><p><strong>第一个是心肺功能指标，叫做「最大摄氧量（VO2 Max）」</strong>。它的意思是你每公斤体重每分钟可以消耗的最大氧气量。这个数值越大越好。</p><p>人在静止不动的情况下消耗的氧气是最少的，运动强度越高需要的氧气流量就越大，但是每个人都有个极限值，这就是最大摄氧量。有些医院和健身中心能帮你测量最大摄氧量，一般是在跑步机上带着面罩猛跑。</p><p>阿提亚说，最大摄氧量也许是唯一最有力的长寿标志。最大摄氧量高说明心肺功能强。什么叫身体好？这就叫身体好。</p><p>最大摄氧量越低，各种疾病的死亡率就越高。统计表明心肺功能差的坏处比吸烟、糖尿病、癌症和心脏病的坏处都要大。而且最大摄氧量给人带来的好处是没有上限的，也就是说哪怕你的心肺功能已经很好，你也还是可以继续锻炼提高，它会让你更好。</p><p>中等强度有氧运动也能在一定程度上提高最大摄氧量，但是为了更有效，你最好上高强度的有氧训练。这是一种间歇式的训练，快跑、骑自行车和用划船机都可以。比如你可以以接近冲刺的速度快跑4分钟，然后慢走4分钟，然后再快跑再慢走，这样重复四到六次。</p><p>阿提亚建议刚刚开始锻炼的人先专门练习五、六个月的中等强度有氧，完了再加入最大摄氧量训练。这种高强度有氧每周搞个一两次就可以了。但是请注意，老年人，不要把年老体弱当借口，也应该做这个训练，因为也有好处。</p><p>✵</p><p><strong>第二个指标是肌肉力量</strong>。前面说的中等强度有氧练的都是1型肌肉纤维，但是你还需要锻炼2型肌肉纤维，也就是能快速抽动、让你“有劲儿”的肌肉。</p><p>简单说，就是你的负重能力和握力有多强 —— 你能不能双手各提一个大箱子走一段路。锻炼肌肉力量的最直接方法是举重。</p><p>我知道纳西姆·塔勒布特别喜欢举重。不过他练得可能有点不得法，经常受伤。</p><p>锻炼肌肉也对线粒体也有好处，而且有的研究认为肌肉力量比心肺功能还要重要。</p><p>衰老的一个显著标志就是力量下降。一般人在65岁以后肌肉质量会急剧下降，到75岁以后下降幅度会更大，而且肌肉的萎缩是难以恢复的。如果一个人本来身体挺健康，因为摔伤了、骨折了，卧床不起，一段时间之后他的肌肉就会萎缩。他起来之后再怎么锻炼，也难以达到之前的水平。</p><p>肌肉之外还有一个重要指标是骨密度，也可以通过力量训练提高，但是可能需要辅助营养和药物，咱们就不细说了。</p><p>✵</p><p><strong>第三个指标是稳定性</strong>。稳定性的作用是让你不受伤。</p><p>很多老年人之所以不锻炼，各种活动都下降，并不是因为身体的自然衰老，也不是因为不愿意锻炼 —— 而是因为他有伤。你未必能想象到，45岁以上的美国人中有超过27%的人患有慢性疼痛，有10%到12%人表示在过去六个月中，疼痛在“大多数日子或每天”限制了他们的活动。</p><p>他们之所以受伤，是因为不能很好地控制自己的身体。老年人意外死亡最重要的原因，就是跌倒。跌倒可能让人直接死亡，也可能只是骨折。骨折后的生命质量会很差，因为你不能动；然后就是肌肉萎缩，在无奈和疼痛中缓慢地走向死亡。</p><p>所以人到了一定年龄，避免受伤是第一位的。</p><p>要想不受伤，你就需要比较强的稳定能力。这是一种下意识地驾驭力量的能力：该减速能减速，该停止能停止，面对外部刺激能迅速做一个调整，任何情况下都能尽量让身体保持稳定。</p><p>具体的训练方法你可能得找健身教练。阿提亚笼统地讲了一些，包括什么呼吸练习、双脚的平衡、脊柱等等。一个简单方法是上台阶：找一个特别结实的箱子放在你面前，它的高度是你抬腿上去的时候大腿正好跟地面平行，就这样你上去再下来。</p><p>我听说过的一个测量稳定性的方法是双手叉腰单腿站立 ——</p><p>四十多岁的人的标准是闭眼单腿站立7秒钟，睁眼40秒钟；七十多岁则是闭眼2秒钟，睁眼18秒。更详细的标准见下表 ——</p><p>达不到标准，就意味着容易跌倒受伤。</p><p>✵</p><p>这一讲我们说了四种锻炼方法 ——</p><p>\1. 中等强度有氧运动，这是一切锻炼的基础，也是最简单最容易做到的，也是好处最大的。每天出去快走一圈就可以；</p><p>\2. 高强度有氧，用于提升心肺功能。它需要的时间短，但是强度大；</p><p>\3. 力量训练，用于保持肌肉。主要训练方法是负重。力量跟长寿也很有关系，但它更重要的作用是保证你的生命质量：你希望一直都有劲儿；</p><p>\4. 稳定性训练，则是为了保证安全，避免受伤。</p><p>你说这四种锻炼有啥不一般的吗？其实这就是对人最自然的要求：你需要经常运动，偶尔快速运动，你需要有劲儿，你需要一定的稳定性。你只是在这个不正常的现代环境中寻求做个正常人而已。</p><p>我认为这一讲的一个重要认知是<strong>具体的训练方法不重要，重要的是强度，是你在针对哪个指标进行训练。</strong>快走、跑步、游泳、自行车、划船机、椭圆机、举重、搬运箱子，你干什么都可以，只要别受伤就行。</p><p>你完全不需要、也不应该参加那种跟一大帮人用四肢在大街上爬行的怪异运动。简单点更不容易受伤，也不尴尬。</p><p>阿提亚本人是个锻炼狂人。除了我们说的这些他还练习过拳击之类的项目，而且强度非常高，都是专业水平。我从全书的逻辑分析，花那么多时间锻炼应该是不必要的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;节选自：得到精选｜运动的杠杆：真正有效的锻炼方法是什么&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;咱们继续讲彼得·阿提亚的《超预期寿命》这本书。前面我们已经介绍了导致现代人衰老和死亡最重要的四种原因 —— 代谢障碍、心血管疾病、癌症和神经退行性疾病</summary>
      
    
    
    
    <category term="杂记" scheme="http://ai.mak.cn/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="杂记" scheme="http://ai.mak.cn/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>运营商的网络架构</title>
    <link href="http://ai.mak.cn/2023/10/08/%E7%BD%91%E7%BB%9C/%E8%BF%90%E8%90%A5%E5%95%86%E7%9A%84%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84%E6%98%AF%E4%BB%80%E4%B9%88/"/>
    <id>http://ai.mak.cn/2023/10/08/%E7%BD%91%E7%BB%9C/%E8%BF%90%E8%90%A5%E5%95%86%E7%9A%84%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84%E6%98%AF%E4%BB%80%E4%B9%88/</id>
    <published>2023-10-07T16:00:00.000Z</published>
    <updated>2023-10-08T07:14:41.915Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="http://www.jx-ev.com/info/4004.html">转载自</a></p></blockquote><h2 id="本文目录一览："><a href="#本文目录一览：" class="headerlink" title="本文目录一览："></a>本文目录一览：</h2><ul><li>1、<a href="#%E4%BB%80%E4%B9%88%E6%98%AF%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84%EF%BC%9F">什么是网络架构？</a></li><li>2、<a href="#NSA%E5%92%8CSA%E7%BD%91%E7%BB%9C%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB?">NSA和SA网络有什么区别？</a></li><li>3、<a href="#%E7%A7%BB%E5%8A%A8%E7%BD%91%E7%BB%9C%E4%B8%8E%E8%81%94%E9%80%9A%E6%9E%84%E9%80%A0%E5%8E%9F%E7%90%86">移动网络与联通构造原理</a></li><li>4、<a href="#%E4%B8%89%E5%A4%A7%E8%BF%90%E8%90%A5%E5%95%86%EF%BC%88%E7%A7%BB%E5%8A%A8%E3%80%81%E7%94%B5%E4%BF%A1%E3%80%81%E8%81%94%E9%80%9A%EF%BC%89%E7%9A%84%E7%BB%84%E7%BB%87%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90">三大运营商（移动、电信、联通）的组织架构解析</a></li><li>5、<a href="#%E7%94%B5%E4%BF%A1%E8%BF%90%E8%90%A5%E5%95%86%E7%9A%84%E7%BD%91%E7%BB%9C%E5%B1%82%E6%AC%A1">电信运营商的网络层次</a></li></ul><h2 id="什么是网络架构？"><a href="#什么是网络架构？" class="headerlink" title="什么是网络架构？"></a>什么是网络架构？</h2><p>网络架构是进行通信连接的一种网络结构。</p><p>网络架构是为设计、构建和管理一个通信网络提供一个构架和技术基础的蓝图。网络构架定义了数据网络通信系统的每个方面，包括但不限于用户使用的接口类型、使用的网络协议和可能使用的网络布线的类型。</p><p>网络架构典型的有一个分层结构。分层是一种现代的网络设计原理，它将通信任务划分成很多更小的部分，每个部分完成一个特定的子任务和用小数量良好定义的方式与其它部分相结合。</p><p>扩展资料：</p><p>使用网络架构注意事项：</p><p>1、动态多路径</p><p>能够通过多个WAN链路对流量进行负载均衡并不是一项新功能。但是，在传统的WAN中，此功能很难配置，并且通常以静态方式将流量分配给给定的WAN链路。即使面对诸如拥塞链路之类的负面拥塞，也不能改变给定WAN链路的流量分配。</p><p>2、应用程序级别</p><p>如果应用程序的性能开始下降，因为该应用程序使用的托管虚拟化网络功能（VNF）的物理服务器的CPU利用率过高，则VNF可能会移动到利用率较低的服务器中。</p><p>3、能见度</p><p>有许多工具声称可以为网络组织提供对传统WAN的完全可见性，以便解决与网络和&#x2F;或应用程序性能相关的问题。但是，无论是这些工具的缺陷还是网络组织使用的故障排除流程，采用新的WAN架构将使故障排除任务变得更加复杂。</p><p>参考资料来源：百度百科：LTE网络架构</p><h2 id="NSA和SA网络有什么区别？"><a href="#NSA和SA网络有什么区别？" class="headerlink" title="NSA和SA网络有什么区别？"></a>NSA和SA网络有什么区别？</h2><p>1、核心不同：</p><p>NSA新建5G基站，采用4G核心网或新建5G核心网；SA新建5G基站和5G核心网。</p><p>2、运营商不同：</p><p>从运营商的角度来说，NSA（非独立组网）可以看做是5G初期的一种过渡方案，而SA（独立组网）才是5G的完全体。</p><p>由于NSA组网需要4G、5G公用核心网，因此这种方式将不能支持5G低时延的特性。随着5G网络的建设，绝大多数运营商都将逐渐转向SA组网，或采用SA&#x2F;NSA混合组网的方式。</p><p>3、网络架构不同：</p><p>NSA是融合现在4G基站和网络架构部署的5G网络。因此，其建设速度非常快，直接利用4G基站加装5G基站。</p><p>即可实现5G网络覆盖。但由于架构使用的还是4G网络架构，导致5G网络的海量物联网接入和低时延特性无法发挥。而SA组网被称为独立组网。换言之就是重新建设5G基站和后端5G网络，从而完全实现5G网络的所有特性和功能。</p><h2 id="移动网络与联通构造原理"><a href="#移动网络与联通构造原理" class="headerlink" title="移动网络与联通构造原理"></a>移动网络与联通构造原理</h2><p>移动网络和联通网络构造原理都属于移动通信网络体系架构：网络架构，该架构可分为三大模块：网络部署场景、接入网和核心网。</p><p>具体的构造原理和试验如下：</p><p>3.1.1中国移动黑龙江公司网络部署场景设计方案</p><p>1.室外借助分布式天线（distributedantennasystem，DAS）和大规模MIMO（multipleinputmulti-pleoutput）配备基站，天线元件分散放置在小区，且通过光纤与基站连接。移动事物（如终端）部署Mo-bileFemtocell，可以动态地改变其到运营商核心网络的连接。同时，部署虚拟蜂窝作为宏蜂窝的补充，提升了室外覆盖率。</p><p>2.室内用户需要与安装在室外建筑的大型天线阵列的室内AP进行通信，这样就可以利用多种适用于短距离通信的技术实现高速率传输，比如60GHz毫米波通信，可以解决频谱稀缺问题。</p><p>3.1.2 中国移动黑龙江公司接入网设计方案</p><p>5G通信网络接入网部署中，采用新型的分布式基站进行组网把宏基站的部分载波通过标准的CPRI接口拉远实现分布式组网，也就是将传统基站的基带处理部分（BBU）和射频收发信机部分（RRU）设计成单独的模块。分布式基站不仅带来快速、便捷的网络部署，而且有利于大幅降低运营商建网的成本。由于无线频谱资源的高价格、高频通信技术的使用，使原有基站覆盖密度越来越大，因此必须对无线接入侧的网络做相应的调整，才能保证5G网络下的无线带宽及物联需求的应用。</p><p>CoP(CPRI over Packet)承载技术是承接5G通信网络接入网中的研究和部署重点。为满足业务需求和基站承载，需要建立一种新的承载技术架构来满足云通信的需求，现通过以下几点方案进行接入网部署：</p><p>在RRU增加的情况下使其满足免机房需要，新的CoP FO 设备能跟RRU供址部署，建立成一个新的前传网络（Fronthanl）,通过CoP FO 设备将RRU进行汇聚传给接入侧的A设备。该方式针对现有IP RAN设备基本无需改动，只需要在原有的设备中插入带有CRPI协议的新增板卡就可以工作。</p><p>对于Fronthanl接入侧的保护机制有CPRI接口和ETH接口；网络侧保护机制可以采用线性“1+1”保护或环网Wrapping、Steering保护。</p><p>对于无线侧RRU的接入点模块FO是全室外模式，易部署、省机房，满足于大网络容量要求。</p><p>在组网类型上，优先选用环型拓扑结构，可以实现RRU任意的部署，实现接入设备A无源CWDM解决方案。</p><p>3.1.2 中国移动黑龙江公司核心网设计方案</p><p>1.现有核心网网元由传统平台向云平台演进</p><p>（1）RCS在互联网基地部署应用，IMS AS、CSCF&#x2F;BGCF等网元进行技术试点；</p><p>（2）控制类网元（MME、PCRF）、数据类网元（HSS、HLR）、信令转接网元（DRA）等正在研究设计阶段，成熟后马上推动现网引入；</p><p>（3）媒体转发面网元（MGW&#x2F;SBC）,根据SDN技术进行进行部署；</p><p>（4）2G、3G电路域相关网元正逐步融合、替换和退网，不再考虑运化升级。</p><p>构建以DC为中心的网络云化平台，部署基于云化架构的NFV（网络功能虚拟化），引入跨DC部署与无状态设计，并将传统核心网业务搬迁至此云化平台；</p><p>2.控制面网元功能重构</p><p>（1）业务处理节点：承接传统核心网GW&#x2F;SBC等媒体接入处理类网元的功能；</p><p>（2）融合控制接节点：承接传统核心网MME&#x2F;CSCF&#x2F;HSS等管理控制类网元和HSS的等用户数据类网元的功能；</p><p>（3）业务能力节点：承接传统核心网应用服务AS&#x2F;业务平台类网元的功能层次，同时支持提供网络能力开放和网络拓扑设置功能。</p><p>3.引入C&#x2F;U分离，并利用MEC技术构建分布式网络，保障低时延业务应用。</p><p>4.引入SBA架构、网络切片Slicing、接入无关技术Access Agnostic，为各式各样差异化需求提供on demand服务，以支撑5G业务。</p><p>3.2 5G关键技术</p><p>3.2.1 CoP(CPRI over Packet)承载技术</p><p>CoP承载技术是集成前传承载和后传承载的中心枢纽模块，采用的是高效装载技术，其由于CRPI结构化和非结构化是的数据成帧灵活，便于整个网络调节，采用光承载，继承了原有波分承载的有点，也能进一步节省传输光缆。CPRI over Packet的NGFI承载方案，具体对比指标比较如下:</p><p>3.2.2 网络功能虚拟化（net-workfunctionvirtualization，NFV）</p><p>NFV（网络功能虚拟化）利用软硬件解耦及功能抽象，以虚拟化技术降低昂贵的设备成本费，根据业务需求进行自动部署、弹性伸缩、故障隔离等步骤，让运营商可通过此极速将承载各种网络功能的通用硬件与云计算虚拟化技术相结合，实现网元虚拟化和虚拟网络可编程，简化网络升级的步骤和降低购买新专用网络硬件的成本，把网络技术重点放到部署新的网络软件上。</p><p>3.2.3 基于OFDM优化的波形和多址接入</p><p>5G NR设计过程中最重要的一项决定，就是采用基于OFDM优化的波形和多址接入技术，因为OFDM 技术被当今的 4G LTE 和 Wi-Fi 系统广泛采用，因其可扩展至大带宽应用，而具有高频谱效率和较低的数据复杂性，因此能够很好地满足 5G 要求。 OFDM 技术家族可实现多种增强功能，例如通过加窗或滤波增强频率本地化、在不同用户与服务间提高多路传输效率，以及创建单载波 OFDM 波形，实现高能效上行链路传输。</p><p>不过OFDM体系也需要创新改造，才能满足5G的需求：</p><p>\1. 通过子载波间隔扩展实现可扩展的OFDM参数配置；</p><p>\2. 通过OFDM加窗提高多路传输效率。</p><p>3.2.4 灵活的框架设计</p><p>5G NR灵活的框架设计：</p><p>\1. 可扩展的时间间隔（Scalable Transmission Time Interval (TTI)）</p><p>相比当前的 4G LTE网络，5G NR将使时延降低一个数量级。目前LTE网络中，TTI（时间间隔）固定在1 ms（毫秒）。为此，3GPP在4G演进的过程中提出一个降低时延的项目。尽管技术细节还不得而知，但这一项目的规划目标就是要将一次傅里叶变换的时延降低为目前的1&#x2F;8（即从1.14ms降低至143µs（微秒）。</p><p>\2. 自包含集成子帧（Self-contained integrated subframe）</p><p>自包含集成子帧是另一项关键技术，对降低时延、向前兼容和其他一系列5G特性意义重大。通过把数据的传输（transmission）和确认（acknowledgement）包含在一个子帧内，时延可显著降低。</p><p>\3. 先进的新型无线技术（Advanced wireless technologies）</p><p>5G必然是在充分利用现有技术的基础之上，充分创新才能实现的，而4G LTE正是目前最先进的移动网络平台，5G在演进的同时，LTE本身也还在不断进化（比如最近实现的千兆级4G+），5G不可避免地要利用目前用在4G LTE上的先进技术，如载波聚合，MIMO技术，非共享频谱的利用等等。</p><p>大规模MIMO：</p><p>MIMO（Multiple-Input Multiple-Output）技术是目前无线通信领域的一个重要创新研究项目，通过智能使用多根天线（设备端或基站端），发射或接受更多的信号空间流，能显著提高信道容量；而通过智能波束成型，将射频的能量集中在一个方向上，可以提高信号的覆盖范围。</p><p>毫米波：</p><p>全新 5G 技术正首次将频率大于 24 GHz 以上频段（通常称为毫米波）应用于移动宽带通信。大量可用的高频段频谱可提供极致数据传输速度和容量，这将重塑移动体验。但毫米波的利用并非易事，使用毫米波频段传输更容易造成路径受阻与损耗（信号衍射能力有限）。通常情况下，毫米波频段传输的信号甚至无法穿透墙体，此外，它还面临着波形和能量消耗等问题。</p><h2 id="三大运营商（移动、电信、联通）的组织架构解析"><a href="#三大运营商（移动、电信、联通）的组织架构解析" class="headerlink" title="三大运营商（移动、电信、联通）的组织架构解析"></a>三大运营商（移动、电信、联通）的组织架构解析</h2><p>1949年11月1日，国家宣布成立邮电部，中国的邮政和电信业务都被邮电部垄断。</p><p>自此至1973年期间，邮电部，邮政和电信经历多次分离、合并。</p><p>1994年7月19日，由电子部、电力部、铁道部等15家单位出资，成立了中国联合通讯有限公司。</p><p>1997年，邮电部做出在全国实施“邮电分营”的决定。同年，从邮电部分离出来的电信在纽约和香港成功上市。</p><p>2000年4月20日，中国移动通信集团公司正式成立，负责原中国电信的移动通信网络业务。</p><p>自2001年开始，国内电信业又开始了新一轮的重组，原来的卫通、铁通、网通、吉通这几家不断被兼并，最终变成了现在的移动、电信、联通三家全业务牌照运营商共存的状态。</p><p>了解完中国运营商的发展史后，大家应该都清楚了现在的三大运营商都是国资委下面的国企。</p><p>而每年暑假开始，各家运营商都会陆续开展校园招聘，以中国电信2021年春季招聘为例，招聘单位包含公司总部、全国各省公司以及各控股子公司等，分布在全国各地。之前主要由各省公司和省级子公司统一组织，近几年逐渐将招聘下放到各个地市公司。</p><p>而招聘的岗位分类和专业要求举例如下：</p><p>一般而言，招聘面向的是当年应届的国内外普通高等院校毕业的本科生和硕士，总部部门和研究院会有少量研究岗位面向博士，同时有些公司在招聘公告上也会对学校、英语、计算机等提出相应的要求。</p><p>自从2009年我国正式进入3G时代开始，就开始了中国移动、中国电信和中国联通三家运营商三分天下的格局。 随着技术的发展，除了固话、移动电话、短信、宽带等这些传统业务，运营商近些年也开始在云业务、视频业务、IT系统等新业务上发力，组织架构也随之更新。</p><p>运营商都属于重资产的国有企业，均为 集团总公司 —— 各省公司（包括同级子公司和分支机构） —— 各市公司 —— 各县公司 的架构模式，主要以地域划分，同时兼顾业务分类。例如，集团总部统筹管理全国多个省份公司，其部门和某个省公司部门的大致对应关系图如下：</p><p>举一些具体业务部门的例子来说。</p><p>市场口和客服口的相关部门：</p><p>市场部：负责各类市场政策制定和策划安排</p><p>政企客户部：针对政府、企业、商业场所等大客户提供解决方案和营销</p><p>公众客户部：针对公众客户进行市场营销，拓展家庭和个人客户市场</p><p>客服&#x2F;用户调度中心：主要负责各类客户的售后服务、以及部分售前咨询、售中业务变更等</p><p>建设维护口的部门：</p><p>负责网络规划、设备采购、建设，以及有线&#x2F;无线网络的维护、优化，保障网络平稳高效运行</p><p>信息化口的部门：</p><p>负责IT系统（BSS、OSS、MSS、EDW）的运营维护</p><p>管控相关部门：</p><p>人事、行政、法律、财务等行政管理部门</p><p>具体到三家运营商目前的组织架构划分情况来看：</p><p>一、其中目前体量最大的 中国移动： 中国移动全资拥有中国移动（香港）集团有限公司，由其控股的中国移动有限公司在国内31个省（自治区、直辖市）和香港设立全资子公司，并在香港和纽约上市。</p><p>二、 中国电信集团公司： 总部拥有22个职能部门；管辖有31个省级子分公司；另有中电信欧洲公司、澳门公司、股份公司、通信服公司、信元公司、中英海底光缆公司等。另外还包括其它一些参股公司、三产公司、物业公司等。</p><p>中国电信2005年将组织结构转变成平衡独立的前端和后端结构：前端部门包括政企客户、家庭客户以及个人客户部门；而后端部门包括其他支持和行政单位。</p><p>三、 中国联合网络通信集团有限公司： 现在的联通于2009年1月6日由原中国网通和原中国联通合并重组而成，公司在国内31个省（自治区、直辖市）和境外多个国家和地区设有分支机构。</p><p>中国联通作为第一家央企集团层面的“混改”试点企业，混改成效众说纷纭，同时在5G时代，和电信共建共享的战略成效也有待时间的检验。</p><h2 id="电信运营商的网络层次"><a href="#电信运营商的网络层次" class="headerlink" title="电信运营商的网络层次"></a>电信运营商的网络层次</h2><p>现在网络分七层分别为</p><p><strong>物理层</strong> 为数据链路层提供物理连接，在其上串行传送比特流，即所传送数据的单位是比特。此外，该层中还具有确定连接设备的电气特性和物理特性等功能。</p><p><strong>数据链路层</strong> 负责在网络节点间的线路上通过检测、流量控制和重发等手段，无差错地传送以帧为单位的数据。为做到这一点，在每一帧中必须同时带有同步、地址、差错控制及流量控制等控制信息。</p><p><strong>网络层</strong> 为了将数据分组从源（源端系统）送到目的地（目标端系统），网络层的任务就是选择合适的路由和交换节点，使源的传输层传下来的分组信息能够正确无误地按照地址找到目的地，并交付给相应的传输层，即完成网络的寻址功能。</p><p><strong>传输层</strong> 传输层是高低层之间衔接的接口层。数据传输的单位是报文，当报文较长时将它分割成若干分组,然后交给网络层进行传输。传输层是计算机网络协议分层中的最关键一层，该层以上各层将不再管理信息传输问题。</p><p><strong>会话层</strong> 该层对传输的报文提供同步管理服务。在两个不同系统的互相通信的应用进程之间建立、组织和协调交互。例如，确定是双工还是半双工工作。</p><p><strong>表示层</strong> 该层的主要任务是把所传送的数据的抽象语法变换为传送语法，即把不同计算机内部的不同表示形式转换成网络通信中的标准表示形式。此外，对传送的数据加密（或解密）、正文压缩（或还原）也是表示层的任务。</p><p><strong>应用层</strong> 该层直接面向用户，是OSI中的最高层。它的主要任务是为用户提供应用的接口，即提供不同计算机间的文件传送、访问与管理，电子邮件的内容处理，不同计算机通过网络交互访问的虚拟终端功能等。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.jx-ev.com/info/4004.html&quot;&gt;转载自&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;本文目录一览：&quot;&gt;&lt;a href=&quot;#本文目录一览：&quot; class=&quot;headerlin</summary>
      
    
    
    
    <category term="网络" scheme="http://ai.mak.cn/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="网络" scheme="http://ai.mak.cn/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>开源系统监控工具简介</title>
    <link href="http://ai.mak.cn/2023/10/01/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/%E5%BC%80%E6%BA%90%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7%E7%AE%80%E4%BB%8B/"/>
    <id>http://ai.mak.cn/2023/10/01/%E6%8A%80%E6%9C%AF%E5%B0%8F%E6%A0%88/%E5%BC%80%E6%BA%90%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7%E7%AE%80%E4%BB%8B/</id>
    <published>2023-09-30T16:00:00.000Z</published>
    <updated>2024-01-05T09:31:33.849Z</updated>
    
    <content type="html"><![CDATA[<p>通过跟踪监控服务器的性能、网络流量、应用程序性能以及用户体验情况，可帮助我们更好地了解整个IT环境运行状态，为系统运维、调优提供支撑。掌握一些好的监控工具可以为我们更好地跟踪服务器状态，持续优化系统提供最佳解决方案。</p><p>本文主要列举了一些目前应用最好的开源免费系统监控工具。</p><h3 id="01-Nagios"><a href="#01-Nagios" class="headerlink" title="01 Nagios"></a>01 Nagios</h3><p><a href="https://www.nagios.org/">https://www.nagios.org/</a></p><blockquote><p>Nagios一个强大的开源工具，用于监控系统、网络和基础设施。它是监控工具的鼻祖，它的历史可以追溯到1999年。这个强大的开源工具提供了包括对系统、网络和基础设施的监控。Nagios可以持续监控服务器，跟踪服务器存在的潜在问题，在潜在问题转变成为严重问题之前及时提醒运维人员。Nagios的主要优势在于它的可扩展插件库和个性化定制能力，Nagios的插件库可以显著扩展工具的功能。但是，Nagios的学习曲线有些陡峭，对于初学者来说可能是一个缺点。</p></blockquote><h3 id="02-Zabbix"><a href="#02-Zabbix" class="headerlink" title="02 Zabbix"></a>02 Zabbix</h3><p><a href="https://www.zabbix.com/">https://www.zabbix.com</a></p><blockquote><p>Zabbix是另一个流行的开源监控解决方案，可以用于监控网络、服务器、应用程序等。该工具功能强大，可以有效地管理复杂网络，让运维人员能够详细了解和控制整个基础设施的性能。虽然Zabbix的整个界面不够简练，但Zabbix强大的模板功能可以用来简化整个监控设置。</p></blockquote><h3 id="03-Prometheus"><a href="#03-Prometheus" class="headerlink" title="03 Prometheus"></a>03 Prometheus</h3><p><a href="https://prometheus.io/">https://prometheus.io/</a></p><blockquote><p>Prometheus是一个基于时间序列数据库的开源监控系统，专门用于监控大规模的微服务和容器。特别适合在Kubernetes环境中收集各类运行指标并提供报告，这个工具是云原生体系的最爱。</p></blockquote><p>另外，可以通过集成Grafana，提高Prometheus的可视化能力。</p><h3 id="04-Grafana"><a href="#04-Grafana" class="headerlink" title="04 Grafana"></a>04 Grafana</h3><blockquote><p>Grafana是一个支持多平台、可分析、可视化的开源平台，经常与Prometheus等监控工具结合使用。它支持基于监控数据创建美观、直观的仪表盘。<br>  Grafana可以将应用服务器的响应时间、并发数、CPU指标、内存指标等监控数据转化为可视化图表，使运维人员更容易掌握运行趋势或者系统问题。</p></blockquote><h3 id="05-Netdata"><a href="#05-Netdata" class="headerlink" title="05 Netdata"></a>05 Netdata</h3><p><a href="https://www.netdata.cloud/">https://www.netdata.cloud/</a></p><blockquote><p>LNetdata是一个用于实时监控系统和应用程序的性能和运行状况的轻量级开源监控工具。它可以在各种系统上运行，并且它的前端WEB页面的易用性也很好。<br> Netdata可以提供有关服务器的磁盘I&#x2F;O、CPU使用率、RAM使用率和网络带宽的分析。</p></blockquote><h3 id="06-ELK-Stack"><a href="#06-ELK-Stack" class="headerlink" title="06 ELK Stack"></a>06 ELK Stack</h3><blockquote><p>ELK Stack是一组工具，用于分析结构化或非结构化数据。ELK Stack结合了Elasticsearch、Logstash和Kibana三种开源工具，可以在大部分类型的结构化或非结构化数据中进行实时检索并分析，并提供分析报告。目前广泛用于系统运行日志和事件数据分析。<br> 在微服务体系架构中，ELK Stack可以从每个微服务中收集日志，分析数据，并以易于理解的形式进行呈现。但ELK整体运行比较消耗资源，因此建议定期调整ELK配置，以避免浪费资源。</p></blockquote><h3 id="07-Icinga"><a href="#07-Icinga" class="headerlink" title="07 Icinga"></a>07 Icinga</h3><p><a href="https://icinga.com/">https://icinga.com/</a></p><blockquote><p>Icinga是一个开源的网络监控系统，它可以检查网络资源的可用性，将网络中断信息及时通知用户，并根据数据生成性能报告。这个工具有良好的可伸缩性和可扩展性，非常适合大型复杂环境。<br> 在一个庞大的IoT设备网络环境中，Icinga 可以跟踪每台设备，确保它们处于在线状态并正常运行。但Icinga的设置可能有点复杂，第一次使用的用户需要花点时间。</p></blockquote><h3 id="08-Cacti"><a href="#08-Cacti" class="headerlink" title="08 Cacti"></a>08 Cacti</h3><p><a href="https://www.cacti.net/">https://www.cacti.net/</a></p><blockquote><p>Cacti是一个基于Web的网络监控工具，它使用RRDTool来存储和显示网络统计数据。它提供了快速的轮询器、先进的图形模板以及多种数据采集的方法。<br> 如果网络中的设备类型比较多，Cacti的SNMP支持从各种网络设备中提取指标，并以易于理解的图形显示指标信息。但Cacti的主要缺点是用户界面并不怎么直观。</p></blockquote><h3 id="09-OpenNMS"><a href="#09-OpenNMS" class="headerlink" title="09 OpenNMS"></a>09 OpenNMS</h3><p><a href="https://www.opennms.com/">https://www.opennms.com/</a></p><blockquote><p>OpenNMS是一个开源网络管理应用程序，提供自动发现、事件管理、通知管理、性能检测和服务保证等功能。例如，OpenNMS可以监控核心网络设备，并提醒高延迟链路或故障设备等问题。</p></blockquote><h3 id="10-Collectd"><a href="#10-Collectd" class="headerlink" title="10 Collectd"></a>10 Collectd</h3><p><a href="https://github.com/collectd/collectd">https://github.com/collectd/collectd</a></p><blockquote><p>Collectd是一个可执行的守护进程，它可以定期收集系统和应用程序性能指标，并存储这些数值。这个工具它非常轻量级，几乎可以在任何系统上运行。<br> 例如，Collectd可以用来监视小型家庭网络，并收集网络延迟、带宽使用和设备状态相关的数据。将Collectd与Grafana等可视化工具结合使用，可获得更加完整的监控解决方案。</p></blockquote><h3 id="11-Sensu"><a href="#11-Sensu" class="headerlink" title="11 Sensu"></a>11 Sensu</h3><p><a href="https://github.com/sensu">https://github.com/sensu</a></p><blockquote><p>Sensu是一个开源的监控事件管道，提供自动化的监控工作流程。Sensu强大的框架能够用于各种小型、大型云基础实施，方便用于观察、自动化和控制。特别适合用于云基础设施。<br> 例如，在一个多个不同服务的大型云环境中，Sensu不仅可以监控这些服务的状态，还可以自动响应类似自动重新启动失败等服务的事件，</p></blockquote><h3 id="12-InfluxDB"><a href="#12-InfluxDB" class="headerlink" title="12 InfluxDB"></a>12 InfluxDB</h3><p><a href="https://github.com/influxdata/influxdb">https://github.com/influxdata/influxdb</a></p><blockquote><p>InfluxDB其实是一个能够处理高写入和高查询负载的时间序列数据库，旨在存储大量带时间戳的数据，它的高性能结构可以处理大量的写入和查询负载，支持存储、分析一段比较长时间内的趋势数据。<br> 因此，InfluxDB可以成为监控应用程序、实时分析等的理想选择。<br> 例如：我们要跟踪网站的用户参与度，InfluxDB可以存储包括点击率、跳出率和停留时间等相关指标。这为我们提供了一个用户行为随时间变化的全面数据视图。<br> 另外，由于InfluxDB本质是个数据库，为了便于分析，可以与Grafana结合在一起实现监控数据可视化。</p></blockquote><h2 id="13-Fluentd"><a href="#13-Fluentd" class="headerlink" title="13 Fluentd"></a>13 Fluentd</h2><p><a href="https://github.com/fluent/fluentd">https://github.com/fluent/fluentd</a></p><blockquote><p>Fluentd是一个数据采集和分析的开源工具，可用于建立统一的日志基础设施。支持从Web服务器、数据库和应用程序等各种来源收集日志，并以多种格式输出。并且还可以将日志和报告可以发送到Elasticsearch。</p></blockquote><h3 id="14-Telegraf"><a href="#14-Telegraf" class="headerlink" title="14 Telegraf"></a>14 Telegraf</h3><p><a href="https://github.com/influxdata/telegraf">https://github.com/influxdata/telegraf</a></p><blockquote><p>Telegraf是一个用于收集、处理、聚合和编写指标的代理，用于收集和发送各种系统指标。它是InfluxData平台的一部分（InfluxDB也是InfluxData的一部分）。<br> <strong>假如</strong>需要监视在不同平台上运行的几个不同应用程序的性能。那么可以使用Telegraf从每个应用程序中收集指标并将其存储到InfluxDB，从而创建统一的监控平台。Telegraf简单且灵活，但它也只是一个日志指标代理。</p></blockquote><h3 id="15-Logstash"><a href="#15-Logstash" class="headerlink" title="15 Logstash"></a>15 <strong>Logstash</strong></h3><p><a href="https://github.com/elastic/logstash">https://github.com/elastic/logstash</a></p><blockquote><p>Logstash是ELK Stack的一个重要组成部分，充当数据处理的管道。它可以从几乎任何类型的源获取数据、动态转换数据并将数据发送到目的地。<br> 假如我们要监控来多个系统（如Web服务器，安全设备和数据库），Logstash可以收集所有这些系统的日志，将收集到的数据以统一的格式发送到Elasticsearch。这使得分析和故障排除更加容易。Logstash虽然强大，但Logstash需要消耗一定的资源，如果您在较大的环境中使用Logstash，需要定期监控性能和微调，以避免资源浪费。</p></blockquote><h2 id="总之"><a href="#总之" class="headerlink" title="总之"></a><strong>总之</strong></h2><p>以上列举的几个工具各有优缺点，选择合适的系统监控工具取决于具体的运行环境和对监控的要求。另外，在实际生产环境中，工具无法解决所有的问题，但是一个好的工具可以为我们提供最佳的解决方案。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;通过跟踪监控服务器的性能、网络流量、应用程序性能以及用户体验情况，可帮助我们更好地了解整个IT环境运行状态，为系统运维、调优提供支撑。掌握一些好的监控工具可以为我们更好地跟踪服务器状态，持续优化系统提供最佳解决方案。&lt;/p&gt;
&lt;p&gt;本文主要列举了一些目前应用最好的开源免费系</summary>
      
    
    
    
    <category term="工具" scheme="http://ai.mak.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="运维" scheme="http://ai.mak.cn/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>使用脚本掩盖MBP闪烁问题</title>
    <link href="http://ai.mak.cn/2023/09/21/%E5%B7%A5%E5%85%B7/%E4%BD%BF%E7%94%A8%E8%84%9A%E6%9C%AC%E6%8E%A9%E7%9B%96MBP%E9%97%AA%E7%83%81%E9%97%AE%E9%A2%98/"/>
    <id>http://ai.mak.cn/2023/09/21/%E5%B7%A5%E5%85%B7/%E4%BD%BF%E7%94%A8%E8%84%9A%E6%9C%AC%E6%8E%A9%E7%9B%96MBP%E9%97%AA%E7%83%81%E9%97%AE%E9%A2%98/</id>
    <published>2023-09-20T16:00:00.000Z</published>
    <updated>2023-10-23T03:06:32.578Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用脚本掩盖MBP闪烁问题"><a href="#使用脚本掩盖MBP闪烁问题" class="headerlink" title="使用脚本掩盖MBP闪烁问题"></a>使用脚本掩盖MBP闪烁问题</h2><blockquote><p>电脑是 Mac Book Pro 最早一批带Touch Bar 的版本，不仅鸡肋，还过了质保，就开始坏,使用一段时间后，开始频繁闪烁，各种晃眼，维修成本还很高，查了各种资料，想要停用Touch Bar，主要制止闪烁就行，这里根据网上资料，整理</p></blockquote><p>该方法参考了以下文章：</p><p><a href="https://link.zhihu.com/?target=https://medium.com/macoclock/macbook-touchbar-flicker-fix-bafa754aae13">https://medium.com/macoclock/macbook-touchbar-flicker-fix-bafa754aae13medium.com/macoclock/macbook-touchbar-flicker-fix-bafa754aae13</a></p><p>对触控栏的闪烁情况进行了观察，发现触控栏存在三种状态：</p><ul><li><strong>工作状态</strong>：不断操作电脑时，触控栏处于工作状态，闪烁轻微，影响很小；</li><li><strong>中间状态</strong>：停止操作电脑1分钟后，触控栏进入中间状态，显示内容与工作状态相同，但闪烁明显，影响较大；</li><li><strong>闲置状态</strong>：进入中间状态15秒后，触控栏进入闲置状态，不再显示内容，却闪烁剧烈，影响很大。</li></ul><h3 id="①-编辑脚本"><a href="#①-编辑脚本" class="headerlink" title="① 编辑脚本"></a>① 编辑脚本</h3><p>打开程序 <code>脚本编辑器</code>，选择 <code>新建文稿</code>，编辑脚本如下：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">on</span> idle</span><br><span class="line"><span class="comment">-- 设置触控栏重置时间为59秒</span></span><br><span class="line"><span class="keyword">set</span> resetTime <span class="keyword">to</span> <span class="number">59</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 获取电脑闲置时间（纳秒，1E9纳秒=1秒）</span></span><br><span class="line"><span class="keyword">set</span> idleTime <span class="keyword">to</span> (<span class="built_in">do shell script</span> <span class="string">&quot;ioreg -c IOHIDSystem | sed -nE &#x27;s/.*\&quot;HIDIdleTime\&quot; = //p&#x27;&quot;</span>) <span class="keyword">as</span> <span class="built_in">integer</span></span><br><span class="line"><span class="comment">-- 将电脑闲置时间转换为秒</span></span><br><span class="line"><span class="keyword">set</span> idleTime <span class="keyword">to</span> idleTime / <span class="number">1.0E+9</span> <span class="keyword">as</span> <span class="built_in">integer</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 如果电脑闲置时间大于等于重置时间，进行触控栏重置</span></span><br><span class="line"><span class="keyword">if</span> idleTime ≥ resetTime <span class="keyword">then</span></span><br><span class="line"><span class="comment">-- 重置触控栏</span></span><br><span class="line"><span class="built_in">do shell script</span> <span class="string">&quot;pkill TouchBarServer&quot;</span> user <span class="built_in">name</span> <span class="string">&quot;[用户名]&quot;</span> password <span class="string">&quot;[密码]&quot;</span> <span class="keyword">with</span> administrator privileges</span><br><span class="line"><span class="comment">-- 等待重置时间后执行</span></span><br><span class="line"><span class="built_in">return</span> resetTime</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 当电脑闲置时间等于重置时间时执行</span></span><br><span class="line"><span class="built_in">return</span> resetTime - idleTime</span><br><span class="line"><span class="keyword">end</span> idle</span><br></pre></td></tr></table></figure><p>⚠️ 注意修改以下内容：</p><ul><li>修改常量重置时间 <code>resetTime</code> 的值。<br>当电脑闲置时间达到该值后，就重启触控栏。<br>该值应小于从停止操作电脑开始到触控栏发生闪烁的时间。<br>由于我的触控栏处于中间状态时，也有明显的闪烁，所以将该值设置为 <code>59</code> 秒，在触控栏进入中间状态前就对其重启。<br>若您的触控栏中间状态闪烁不明显，则可将该值设置为 <code>74</code> 秒，在触控栏进入闲置状态前对其重启即可。</li><li>设置系统用户名和密码。<br>在重置触控栏时，需使用系统用户名和密码进行授权，所以需将脚本中的 <code>[用户名]</code> 和 <code>[密码]</code> 分别替换为您的用户名和密码。</li></ul><h3 id="②-导出程序"><a href="#②-导出程序" class="headerlink" title="② 导出程序"></a>② 导出程序</h3><p>在 <code>脚本编辑器</code> 菜单中选择 <code>文件 → 导出</code>，在导出对话框中进行以下设置后，选择 <code>存储</code> 按钮。</p><ul><li>导出为：触控<a href="https://www.zhihu.com/search?q=%E6%A0%8F%E9%97%AA%E7%83%81%E4%BF%AE%E5%A4%8D&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2844450021%7D">栏闪烁修复</a>.app</li><li>位置：应用程序</li><li>文件格式：应用程序</li><li>选项：☑︎ 运行处理程序后保持打开</li><li><a href="https://www.zhihu.com/search?q=%E4%BB%A3%E7%A0%81%E7%AD%BE%E5%90%8D&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2844450021%7D">代码签名</a>：签名以在本地运行</li></ul><p><img src="https://picx.zhimg.com/80/v2-ec3f7e55a91080e7171fab06527df33b_1440w.webp?source=1940ef5c" alt="img"></p><p>导出程序</p><h3 id="③-隐藏程序的运行痕迹（不介意可跳过）"><a href="#③-隐藏程序的运行痕迹（不介意可跳过）" class="headerlink" title="③ 隐藏程序的运行痕迹（不介意可跳过）"></a>③ 隐藏程序的运行痕迹（不介意可跳过）</h3><p>右键生成的 <code>触控栏闪烁修复.app</code>，选择 <code>显示包内容</code>，在 <code>Contents/Info.plist</code> <a href="https://www.zhihu.com/search?q=%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2844450021%7D">配置文件</a>中加入配置项 <code>LSUIElement</code>，以隐藏该程序的运行痕迹。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>LSUIElement<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置项 <a href="https://link.zhihu.com/?target=https://developer.apple.com/documentation/bundleresources/information_property_list/lsuielement">LSUIElement</a> 的描述名称为 <code>Application is agent (UIElement)</code>，类型为<a href="https://www.zhihu.com/search?q=%E5%B8%83%E5%B0%94%E5%9E%8B&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2844450021%7D">布尔型</a>，指示该应用程序是否为在<a href="https://www.zhihu.com/search?q=%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2844450021%7D">后台运行</a>且不显示在程序坞中的<a href="https://www.zhihu.com/search?q=%E4%BB%A3%E7%90%86%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2844450021%7D">代理应用程序</a>。</p><p>当然，如果可以接受该程序运行时在屏幕顶部显示的菜单栏和在<a href="https://www.zhihu.com/search?q=%E7%A8%8B%E5%BA%8F%E5%9D%9E&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:2844450021%7D">程序坞</a>中显示的图标，可跳过这一步。</p><h3 id="④-设置程序开机自启动"><a href="#④-设置程序开机自启动" class="headerlink" title="④ 设置程序开机自启动"></a>④ 设置程序开机自启动</h3><p>打开 <code>系统设置 → 设置登录项 → 通用 → 登录项 → 登录时打开</code>，选择程序 <code>触控栏闪烁修复.app</code>。</p><p>作者：Jqgsninimo<br>链接：<a href="https://www.zhihu.com/question/327169975/answer/2844450021">https://www.zhihu.com/question/327169975/answer/2844450021</a><br>来源：知乎</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;使用脚本掩盖MBP闪烁问题&quot;&gt;&lt;a href=&quot;#使用脚本掩盖MBP闪烁问题&quot; class=&quot;headerlink&quot; title=&quot;使用脚本掩盖MBP闪烁问题&quot;&gt;&lt;/a&gt;使用脚本掩盖MBP闪烁问题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;电脑是 Mac Book </summary>
      
    
    
    
    <category term="工具" scheme="http://ai.mak.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Mac" scheme="http://ai.mak.cn/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>史铁生语录02</title>
    <link href="http://ai.mak.cn/2023/09/08/%E8%AF%AD%E5%BD%95/%E5%8F%B2%E9%93%81%E7%94%9F%E8%AF%AD%E5%BD%9502/"/>
    <id>http://ai.mak.cn/2023/09/08/%E8%AF%AD%E5%BD%95/%E5%8F%B2%E9%93%81%E7%94%9F%E8%AF%AD%E5%BD%9502/</id>
    <published>2023-09-07T16:00:00.000Z</published>
    <updated>2023-09-09T15:46:12.334Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">拖延的最大坏处还不是耽误，</span><br><span class="line">而是会使自已变得犹豫，</span><br><span class="line">甚至丧失信心。</span><br><span class="line">不管什么事，决定了，</span><br><span class="line">就立刻去做，</span><br><span class="line">这本身就能使人生气勃勃，</span><br><span class="line">保持一种主动和快乐的心情。</span><br><span class="line"></span><br><span class="line">史铁生《最有用的事》</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight text&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>史铁生语录01</title>
    <link href="http://ai.mak.cn/2023/09/07/%E8%AF%AD%E5%BD%95/%E5%8F%B2%E9%93%81%E7%94%9F%E8%AF%AD%E5%BD%9501/"/>
    <id>http://ai.mak.cn/2023/09/07/%E8%AF%AD%E5%BD%95/%E5%8F%B2%E9%93%81%E7%94%9F%E8%AF%AD%E5%BD%9501/</id>
    <published>2023-09-06T16:00:00.000Z</published>
    <updated>2023-09-09T15:46:14.969Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> 步步都是走在回去的路上。</span><br><span class="line"> 当牵牛花初开的时节，</span><br><span class="line"> 葬礼的号角就已吹响。</span><br><span class="line"> 但是太阳，他每时每刻都是夕阳也都是旭日。</span><br><span class="line"> 当他熄灭着走下山去收尽苍凉残照之际，</span><br><span class="line"> 正是他在另一面燃烧着爬上山巅布散烈烈朝辉之时。</span><br><span class="line"> 有一天，我也将沉静着走下山去，扶着我的拐杖。</span><br><span class="line"> 那一天.在某一处山洼里，</span><br><span class="line"> 势必会跑上来一个欢蹦的孩子，抱着他的玩具。</span><br><span class="line">当然，那不是我。</span><br><span class="line">但是，那不是我吗?</span><br><span class="line">宇宙以其不息的欲望将一个歌舞炼为永恒。</span><br><span class="line">这欲望有怎样一个人间的姓名，大可忽略不计。</span><br><span class="line">                   </span><br><span class="line">                                     写于一九八九年五月五日</span><br><span class="line">                                     修改于一九九O年一月七日</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight text&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>骑起来</title>
    <link href="http://ai.mak.cn/2023/08/30/%E8%AF%AD%E5%BD%95/%E9%AA%91%E8%B5%B7%E6%9D%A5/"/>
    <id>http://ai.mak.cn/2023/08/30/%E8%AF%AD%E5%BD%95/%E9%AA%91%E8%B5%B7%E6%9D%A5/</id>
    <published>2023-08-29T16:00:00.000Z</published>
    <updated>2023-09-10T00:53:13.991Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>白天归顺生活，夜晚臣服于灵魂，生活原本沉闷，但骑起来就会有风……</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;白天归顺生活，夜晚臣服于灵魂，生活原本沉闷，但骑起来就会有风……&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>MAC移动硬盘非正常断开连接后硬盘无法识别</title>
    <link href="http://ai.mak.cn/2023/08/20/%E5%B7%A5%E5%85%B7/MAC%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98%E9%9D%9E%E6%AD%A3%E5%B8%B8%E6%96%AD%E5%BC%80%E8%BF%9E%E6%8E%A5%E5%90%8E%E7%A1%AC%E7%9B%98%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB/"/>
    <id>http://ai.mak.cn/2023/08/20/%E5%B7%A5%E5%85%B7/MAC%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98%E9%9D%9E%E6%AD%A3%E5%B8%B8%E6%96%AD%E5%BC%80%E8%BF%9E%E6%8E%A5%E5%90%8E%E7%A1%AC%E7%9B%98%E6%97%A0%E6%B3%95%E8%AF%86%E5%88%AB/</id>
    <published>2023-08-19T16:00:00.000Z</published>
    <updated>2023-08-20T11:42:55.892Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MAC移动硬盘非正常断开连接后硬盘无法识别"><a href="#MAC移动硬盘非正常断开连接后硬盘无法识别" class="headerlink" title="MAC移动硬盘非正常断开连接后硬盘无法识别"></a>MAC移动硬盘非正常断开连接后硬盘无法识别</h1><p>步骤1：先找到外接移动硬盘，在 Mac “终端”执行命令</p><p>步骤2：加载移动硬盘，可以在终端执行以下两个命令之一</p><p>步骤3：终止后台自动执行的“磁盘修复进程”</p><p>步骤4：手动执行磁盘修复命令</p><p>步骤5：Windows系统的磁盘修复</p><p>参考6：修复方案及相关命令详解</p><hr><p>  MAC 的移动硬盘非正常退出后（断电、直接拔掉等），重新连接后无法在“Finder桌面”或“磁盘工具”里正常看到移动硬盘的图标。</p><p>  每次出现这个问题都是在网上搜索一番，敲几行命令，有实话敲完就OK，，有时候不管，放一段时间自动修复了，还是在一次成功解决后，记录下来吧</p><h1 id="步骤1：先找到外接移动硬盘，在-Mac-“终端”执行命令"><a href="#步骤1：先找到外接移动硬盘，在-Mac-“终端”执行命令" class="headerlink" title="步骤1：先找到外接移动硬盘，在 Mac “终端”执行命令"></a><strong>步骤1：先找到外接移动硬盘，在 Mac “终端”执行命令</strong></h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diskutil list</span><br></pre></td></tr></table></figure><p>  执行后，显示的信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/dev/disk0 (internal, physical):</span><br><span class="line"><span class="meta prompt_">   #</span><span class="language-bash">:                       TYPE NAME                    SIZE       IDENTIFIER</span></span><br><span class="line">   0:      GUID_partition_scheme                        *500.3 GB   disk0</span><br><span class="line">   1:                        EFI ⁨EFI⁩                     314.6 MB   disk0s1</span><br><span class="line">   2:                 Apple_APFS ⁨Container disk1⁩         500.0 GB   disk0s2</span><br><span class="line"></span><br><span class="line">/dev/disk1 (synthesized):</span><br><span class="line"><span class="meta prompt_">   #</span><span class="language-bash">:                       TYPE NAME                    SIZE       IDENTIFIER</span></span><br><span class="line">   0:      APFS Container Scheme -                      +500.0 GB   disk1</span><br><span class="line">                                 Physical Store disk0s2</span><br><span class="line">   1:                APFS Volume ⁨Macintosh HD - 数据⁩     278.7 GB   disk1s1</span><br><span class="line">   2:                APFS Volume ⁨Preboot⁩                 301.7 MB   disk1s2</span><br><span class="line">   3:                APFS Volume ⁨Recovery⁩                1.1 GB     disk1s3</span><br><span class="line">   4:                APFS Volume ⁨VM⁩                      1.1 GB     disk1s4</span><br><span class="line">   5:                APFS Volume ⁨Macintosh HD⁩            15.4 GB    disk1s5</span><br><span class="line">   6:              APFS Snapshot ⁨com.apple.os.update-...⁩ 15.4 GB    disk1s5s1</span><br><span class="line"></span><br><span class="line">/dev/disk2 (external, physical):</span><br><span class="line"><span class="meta prompt_">   #</span><span class="language-bash">:                       TYPE NAME                    SIZE       IDENTIFIER</span></span><br><span class="line">   0:     FDisk_partition_scheme                        *1.0 TB     disk2</span><br><span class="line">   1:               Windows_NTFS ⁨Elements⁩                1.0 TB     disk2s1</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  从终端提示内容可以看到，外接移动硬盘（external, physical）名称是：disk2, 容量1TB，硬盘的文件格式没有明确标注，从microsoft Basic Data 几个字样推断，再加上之前在 Windows 系统也能正常使用，应该是能兼容 Windows 和 Mac 系统的 exFAT 格式（<em>不同的文件格式，请参考文末链接</em>），当然从后面运行命令后，系统提示的信息也能看到。</p><p>  另外，disk2 下面包括两个盘符标记：disk2s1 和 disk2s2, 多个盘符表示硬盘包括多个分区，可以看到disk2s1的 TYPE NAME 是 EFI ：</p><blockquote><p>EFI系统分区中存放了可供引导启动的文件，作用是引导操作系统正常启动。EFI系统分区是一个使用FAT32格式化的小分区，该分区在Windows操作系统下一般是不可见的，其中存储已安装系统的EFI引导加载程序以及启动时固件使用的应用程序。</p></blockquote><p>  因为 EFI 分区在这里对我们没有什么意义，我们实际存储数据的的硬盘分区是 disk2s2，后面命令的操作对象和执行结果也是针对的硬盘分区 disk2s2 来说的。</p><h1 id="步骤2：加载移动硬盘，可以在终端执行以下两个命令之一"><a href="#步骤2：加载移动硬盘，可以在终端执行以下两个命令之一" class="headerlink" title="步骤2：加载移动硬盘，可以在终端执行以下两个命令之一"></a><strong>步骤2：加载移动硬盘，可以在终端执行以下两个命令之一</strong></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># mount命令可以只挂载硬盘的某个分区</span><br><span class="line">diskutil mount /dev/disk2s2# mountdisk命令可以实现挂载整个硬盘（包括所有分区）</span><br><span class="line">diskutil mountdisk /dev/disk2</span><br></pre></td></tr></table></figure><p>  通常异常退出的移动硬盘，执行这两个命令都会提示错误信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 执行 sudo diskutil mount /dev/disk2s2 命令报错</span><br><span class="line">Volume on disk2 timed out waiting to mount# 执行 sudo diskutil mountDisk /dev/disk2 命令报错：</span><br><span class="line">One or more volume(s) failed to mount</span><br></pre></td></tr></table></figure><p>  <strong>为什么会提示等待超时呢？</strong>其实是因为你把硬盘的数据线重新接上电脑时，系统检测到硬盘异常，Mac 系统会在“<strong>后台自动运行</strong>” 磁盘修复进程: <strong>fsck</strong>，从而导致 <strong>diskutil mount</strong> 命令运行超时。</p><blockquote><p><strong>如果你刚接上硬盘不能识别，不要着急反复拔掉和重新连接，可以稍微耐心等待系统的自动修复完成。如果等待时间过长还没有恢复，可以继续执行下面的步骤。</strong></p></blockquote><h1 id="步骤3：终止后台自动执行的“磁盘修复进程”"><a href="#步骤3：终止后台自动执行的“磁盘修复进程”" class="headerlink" title="步骤3：终止后台自动执行的“磁盘修复进程”"></a><strong>步骤3：终止后台自动执行的“磁盘修复进程”</strong></h1><p>  先执行下面命令，找到后台运行的 fsck 进程的PID：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep fsck</span><br></pre></td></tr></table></figure><p>  显示后台正在运行的 fsck 进程，从下面截图能看到：<strong>fsck_exfat -y -x &#x2F;dev&#x2F;rdisk2s2</strong> ，从这里也能判断硬盘文件格式应该是：<strong>exfat</strong>。</p><p>  执行命令 kill fsck，终止自动修复进程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 21364 是 PID 进程号</span><br><span class="line">sudo pkill -f fsck 或 sudo kill -9 21364</span><br></pre></td></tr></table></figure><p>  注意：执行完毕后，再次执行【步骤2】的磁盘加载命令，一般都能装载成功，桌面上会出现移动硬盘盘符标志。但是运气比较差的话，杀死 fsck 进程后，硬盘会自动以”<strong>只读状态</strong>“完成加载，并弹出提示对话框，如下图所示。接下来可以继续尝试后面的步骤来进行硬盘修复。</p><h1 id="步骤4：手动执行磁盘修复命令"><a href="#步骤4：手动执行磁盘修复命令" class="headerlink" title="步骤4：手动执行磁盘修复命令"></a><strong>步骤4：手动执行磁盘修复命令</strong></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fsck_exfat -y -x /dev/disk2s2</span><br></pre></td></tr></table></figure><p>  一般常用的磁盘修复命令有： <strong>fsck_hfs、fsck_exfat、fsck_apfs</strong> 等，<strong>fsck</strong> 代表磁盘修复命令，下划线后面 <strong>hfs，exfat，apfs</strong> 代表硬盘的文件格式。（<em>fsck 命令详解，请参考文末链接</em>）。 </p><p>  注意，<strong>fask_[文件格式]</strong> 命令要正确，另外，“手动执行修复命令”与“系统提供【磁盘工具】- 【急救】”是一样的原理和效果，在终端手动执行修复命令后，会显示修复过程中的详细信息，例如那些文件是问题的</p><p>  【步骤4】如果能顺利执行完毕就可以加载硬盘成功，但是【步骤4】的时长不好判断，从几分钟到半个小时的都有，甚至还有人等待十几个小时最后放弃的。笔者碰到的情况是：“手动修复方式”和“磁盘工具-急救”两种方案都试过了，都是等待几个小时也没有等到修复结束的时刻。虽然“磁盘工具 - 急救”对话框有个“详情”标签展开可以检测到错误文件的信息，对话框页面也有一个进度条，但是一直都只显示空空进度条，没有任何进度更新，只好放弃！</p><h1 id="步骤5：Windows系统的磁盘修复"><a href="#步骤5：Windows系统的磁盘修复" class="headerlink" title="步骤5：Windows系统的磁盘修复"></a><strong>步骤5：Windows系统的磁盘修复</strong></h1><p>  如果【步骤四】不幸失败了，但是你必须要拯救这块硬盘的话，就去找一台 Windows 系统的电脑，<strong>既然 Mac 系统修复失败，那么为什么不试试 Windows 系统的磁盘修复功能呢？</strong>前面提到过，这块硬盘文件格式是 exFAT，兼容两个系统。</p><p>  在接上安装有 Windows 10 系统的笔记本电脑后，系统提示：“磁盘错误，需要扫描和修复”，于是点击“确认”，开始修复和修复结束的对话框如图所示:</p><p>  这次等待时间接近3个小时，虽然时间很长，但是进度条在缓慢移动，相比 Mac 系统，至少让你还有等待下去的期待。这个时间可能跟硬盘大小、速度、文件数量有关系（笔者的硬盘是机械硬盘，2T，剩余空间60G）。以上是 Win10 的提供的磁盘修复对话框，如果接上硬盘后，系统没有任何提示，你可以在 DOS 窗口手动输入命令来实现相同的修复过程。（<em>Windows Dos磁盘修复方法，参考文末链接</em>）。</p><p>  如果最终没有成功的话，可能真的是磁盘数据损坏无法修复了，需要及时备份以防数据丢失。</p><h1 id="参考6：修复方案及相关命令详解"><a href="#参考6：修复方案及相关命令详解" class="headerlink" title="参考6：修复方案及相关命令详解"></a><strong>参考6：修复方案及相关命令详解</strong></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># mac下移动硬盘异常退出修复方法</span><br><span class="line">https://zhuanlan.zhihu.com/p/83542978</span><br><span class="line">https://blog.csdn.net/Bobdragery/article/details/95086132</span><br><span class="line">https://apple.stackexchange.com/questions/235309/external-drive-does-not-mount-after-plug-off-without-eject# Windows Dos磁盘修复方法</span><br><span class="line">https://blog.csdn.net/qq_26834611/article/details/107968650# MacOS 磁盘管理工具 diskutil 介绍</span><br><span class="line">https://www.jianshu.com/p/6a1f365617ad# Linux fsck命令介绍：检测和修复文件系统</span><br><span class="line">http://c.biancheng.net/view/887.html# unmount, unmountdisk, eject命令的区别</span><br><span class="line">http://newsn.com.cn/say/mac-umount.html</span><br><span class="line"># mount与mountdisk命令的区别</span><br><span class="line">https://newsn.net/say/mac-mount-2.html# Fat32、NTFS、exFAT、HFS+、APFS文件系统的区别</span><br><span class="line">https://blog.csdn.net/qq_39111085/article/details/103800464</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MAC移动硬盘非正常断开连接后硬盘无法识别&quot;&gt;&lt;a href=&quot;#MAC移动硬盘非正常断开连接后硬盘无法识别&quot; class=&quot;headerlink&quot; title=&quot;MAC移动硬盘非正常断开连接后硬盘无法识别&quot;&gt;&lt;/a&gt;MAC移动硬盘非正常断开连接后硬盘无法识别&lt;/</summary>
      
    
    
    
    <category term="工具" scheme="http://ai.mak.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="mac" scheme="http://ai.mak.cn/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>创新</title>
    <link href="http://ai.mak.cn/2023/08/18/%E8%AF%AD%E5%BD%95/%E5%88%9B%E6%96%B0/"/>
    <id>http://ai.mak.cn/2023/08/18/%E8%AF%AD%E5%BD%95/%E5%88%9B%E6%96%B0/</id>
    <published>2023-08-17T16:00:00.000Z</published>
    <updated>2023-08-20T13:24:51.927Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>鸡蛋从外打破叫破碎，从内部打破叫新生</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">连续式创新</span><br><span class="line">平台式创建</span><br><span class="line">颠覆式创新</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;鸡蛋从外打破叫破碎，从内部打破叫新生&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;lin</summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>山</title>
    <link href="http://ai.mak.cn/2023/08/05/%E8%AF%AD%E5%BD%95/%E5%B1%B1/"/>
    <id>http://ai.mak.cn/2023/08/05/%E8%AF%AD%E5%BD%95/%E5%B1%B1/</id>
    <published>2023-08-04T16:00:00.000Z</published>
    <updated>2023-08-20T11:49:45.756Z</updated>
    
    <content type="html"><![CDATA[<h3 id="山"><a href="#山" class="headerlink" title="山"></a>山</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">很近又遥远，</span><br><span class="line">威严又慈祥，</span><br><span class="line">巍峨又低矮，</span><br><span class="line">磅礴又渺小，</span><br><span class="line">宁静又热烈，</span><br><span class="line"></span><br><span class="line">跨越时光长河，</span><br><span class="line">即使汗流浃背,</span><br><span class="line">纵是身心煎熬，</span><br><span class="line">冥冥中，默默引领</span><br><span class="line">终是会跨越山川</span><br><span class="line">崇敬，感恩</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;山&quot;&gt;&lt;a href=&quot;#山&quot; class=&quot;headerlink&quot; title=&quot;山&quot;&gt;&lt;/a&gt;山&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span </summary>
      
    
    
    
    <category term="语录" scheme="http://ai.mak.cn/categories/%E8%AF%AD%E5%BD%95/"/>
    
    
    <category term="语录" scheme="http://ai.mak.cn/tags/%E8%AF%AD%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Windows Server 默认只能2个用户远程桌面登录</title>
    <link href="http://ai.mak.cn/2023/07/18/%E5%B7%A5%E5%85%B7/Windows%20Server%20%E9%BB%98%E8%AE%A4%E5%8F%AA%E8%83%BD2%E4%B8%AA%E7%94%A8%E6%88%B7%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E7%99%BB%E5%BD%95/"/>
    <id>http://ai.mak.cn/2023/07/18/%E5%B7%A5%E5%85%B7/Windows%20Server%20%E9%BB%98%E8%AE%A4%E5%8F%AA%E8%83%BD2%E4%B8%AA%E7%94%A8%E6%88%B7%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E7%99%BB%E5%BD%95/</id>
    <published>2023-07-17T16:00:00.000Z</published>
    <updated>2023-07-24T08:15:14.601Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Windows Server默认情况下，只能同时登录2个用户，如果第3个用户远程登录，则必须要踢掉1个才能继续登录。</p></blockquote><p>解决办法：</p><p>1、  gpedit.msc,回车打开组策略编辑器,依次展开计算机配置-&gt;管理模板-&gt;windows组件-&gt;终端服务,选中终端服务,在窗口右边找到【限制连接数量】修改为合适的数量</p><p>2、【将远程桌面服务用户限制到单独的远程桌面服务会话】修改为禁用</p><p>3、 执行命令 gpupdate &#x2F;Force  更新组策略</p><blockquote><p><strong>注意</strong> win 套娃问题，win + R 等快捷键打开运行窗口输入的命令，配置成本机的策略组。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Windows Server默认情况下，只能同时登录2个用户，如果第3个用户远程登录，则必须要踢掉1个才能继续登录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解决办法：&lt;/p&gt;
&lt;p&gt;1、  gpedit.msc,回车打开组策略编辑器,依次展开计</summary>
      
    
    
    
    <category term="工具" scheme="http://ai.mak.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="运维" scheme="http://ai.mak.cn/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>得到头条 145｜2023高校毕业致辞金句集，请收好</title>
    <link href="http://ai.mak.cn/2023/07/04/%E6%9D%82%E8%AE%B0/%E5%BE%97%E5%88%B0%E5%A4%B4%E6%9D%A1%20145%EF%BD%9C2023%E9%AB%98%E6%A0%A1%E6%AF%95%E4%B8%9A%E8%87%B4%E8%BE%9E%E9%87%91%E5%8F%A5%E9%9B%86%EF%BC%8C%E8%AF%B7%E6%94%B6%E5%A5%BD/"/>
    <id>http://ai.mak.cn/2023/07/04/%E6%9D%82%E8%AE%B0/%E5%BE%97%E5%88%B0%E5%A4%B4%E6%9D%A1%20145%EF%BD%9C2023%E9%AB%98%E6%A0%A1%E6%AF%95%E4%B8%9A%E8%87%B4%E8%BE%9E%E9%87%91%E5%8F%A5%E9%9B%86%EF%BC%8C%E8%AF%B7%E6%94%B6%E5%A5%BD/</id>
    <published>2023-07-03T16:00:00.000Z</published>
    <updated>2023-08-20T13:17:55.978Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>节选自：得到头条 145｜2023高校毕业致辞金句集，请收好</p></blockquote><p>今天，我将从两个话题出发，为你提供知识服务。第一个是，高校毕业季来临。第二个是，618过后，电商迎来退货潮。</p><p>先来看今天的第一条。我们聊个青春气息很浓的话题，这就是，毕业典礼。眼下正是毕业季。而且今年，各大高校毕业典礼的校长寄语，金句密度更是相当高。毕竟，这是疫情之后的第一个毕业季。毕业的人，是赶上全部完整疫情期的一届大学生，估计从校长到学生，也都憋了一肚子话。</p><p>这些毕业寄语，我强烈建议你看一看。一来，金句非常多。即使你要经常做总结、做汇报、做公开发言，也足够用上一年的。二来，更重要的，这些毕业演讲，能给我们传递一个非常珍贵的感受，这就是，少年气。也就是，<strong>当一个人刚学了一身本领，最踌躇满志、最无所畏惧的时候，所释放出的气息。</strong> 就像许巍那句歌词唱的，曾梦想仗剑走天涯，看一看世界的繁华。说的就是少年气。</p><p>今天，咱们就盘一盘，2023年毕业典礼上的金句。</p><p>第一句，堪称是全国高校最短的毕业寄语，就一句话，这句金句，本身就是演讲全文，来自西南政法大学。6月21日，西南政法大学举办毕业典礼，但特别不巧的是，当天突然来了一场大雨。校长付子堂在发表讲话时，就把原本准备的3500多字的讲稿，全部省略，只念了一个标题。</p><p>这句话是，<strong>知行合一致良知，德法兼修事上练。</strong> </p><p>说完之后还补充了一句，这本来是我典礼致辞的标题，全文一会儿学校官微有推送，请同学们自己看。</p><p>怎么样，这个方式帅不帅？从演讲的技术角度分析，这有点像1941年的时候，罗斯福的第四次就职演说。这也是演讲史上的经典案例。当时美国经济正处于低谷，同时还在打仗。按理说，罗斯福有很多话可说。但是，他只说了几句话，大概是，现在是非常时期，我们没有时间长篇大论。我们应该去工作，并且打完这场仗。演讲全程还不到三分钟。你看，演讲的主题是务实，演讲的方式，也很干练务实。</p><p>而这回，付子堂校长的讲话，重点在最后三个字，事上练。说的就是凡事关键在于实干。同样，讲话方式，也很实干。这个效果，估计比讲完3500字还要好。</p><p>第二句金句，来自中国矿业大学的校长葛世荣。我们都知道，矿业大学，长项是做基础研究，要求人必须有耐心，能钻研，坐得住。因此这回，葛世荣校长的毕业致辞，主题就是，自律。</p><p>其中最精彩的几句话，是这么说的。<strong>自律是拼搏路上披荆斩棘的开山斧，目标高度决定成才亮度。自律是拼搏路上锲而不舍的金刚钻，钻研深度决定成就厚度。自律是拼搏路上勇往直前的青锋剑，拼搏力度决定成功新度。</strong> </p><p>假如你身边有朋友从事科研工作，这句话建议你送给他。不仅有力量，而且非常工整。同样，要论工整程度，还有一所著名的科技类高校也很厉害。</p><p>请听第三句金句，来自北京科技大学的校长，杨仁树。在2023年北京科技大学的毕业典礼上，杨仁树校长的致辞主题是，少年同风，扶摇万里。</p><p>其中有几句话很精彩，紧扣着主题少年同风，是这么说的。<strong>送你们浩荡东风，愿你们热爱脚下土地，献身民族复兴。送你们破浪长风，愿你们苦练过硬本领，勇于自我超越。送你们徐徐清风，愿你们笑对人生百态，活出精彩自己。</strong> </p><p>这也是今年毕业典礼上，一个很有意思的现象。越是理工科高校，毕业致辞在文笔上越考究，越讲求对仗工整。</p><p>第四组金句，是今年网上最火的毕业致辞之一，罗翔在2023年中国政法大学毕业晚会上的致辞。很接地气，大概是这么说的。</p><p>我很想祝大家一帆风顺，但是我觉得这不现实。智者说，人这一生至少有三件事是无法避免的，一个是苦难，一个是邪恶，还有一个是人生的终点。所以，愿我们每时每刻都在当下储存足够多美好的记忆，去对抗人生不期而至的苦楚。也愿我们在记忆中能够储存足够多的美善，能够与邪恶对抗而不和它同流合污。更愿我们能够在记忆中有更多的美好，能让我们平静从容地走向人生的终点。纪伯伦说过，这个世界有两种痛苦，一种是野心还没实现的痛苦，还有一种是野心成就后的无聊。我见过很多成功和正在追逐成功的人，他们都在这两种痛苦中双向切换。所以有人说，<strong>真正能够带给我们宁静的，是我们内心的原则。</strong> 最后真心祝各位同学，能够找到内心的宁静，一生平安。</p><p>好，转述完毕。你觉得这个发言为什么打动人？因为它足够接地气。什么叫接地气？按照过去的理解，是足够生活化，足够真实。但是，关于接地气，我还听过一个更贴切的表述。<strong>所谓接地气，就是正视负面情绪，直面真实困境。</strong> 从这个角度看，这算是今年最接地气的毕业致辞之一。</p><p>第五组金句，来自清华大学2023年本科生毕业典礼，清华大学的王希勤校长的一段讲话。主题是，敏察情绪，善用理智。其中有一段话，讲的是，我们应该怎么找到人生的意义？是这么说的。</p><p>生命是意义之母。很多人都在思考活着的意义，也经常因此而困惑。我们要看到，<strong>生命是大自然的奇迹，它从无数的偶然性中产生，也蕴含着无限的可能性。生命本身就有意义，没有生命就谈不上意义。</strong> 我们要珍惜每时每刻的生命感受，去体悟生命的独特与伟大。</p><p>最后，咱们再看第六组金句。来自北京大学国家发展研究院的毕业典礼。北大国发院的院长姚洋教授，做了一段致辞。其中有一句话是这么说的，乐观者赢得未来，悲观者赢得现在。</p><p>注意，这不是要说，我们一定要在乐观和悲观之间二选一，而是，既要做一个乐观者，也要做一个悲观者。</p><p>为什么要乐观？按照姚洋教授的话说，今天的中国，处在一个承前启后的转折时刻，疫情结束，但经济的恢复尚待时日，社会和家庭也需要疗伤的时间。这样的时刻，信心是最宝贵的东西。信心从哪来？从乐观中来。当然，这个乐观不是盲目的。因为今天的中国正处在科技革命的当口，过去的十几年里，我们几乎点对了所有的科技树。比如AI应用、新能源、电动汽车等等。同时，中国的量子通信、光子芯片和核聚变技术也处在世界第一阵营。因此，我们有理由乐观。</p><p>但是，光有乐观的心态还不够。企业家是乐观主义者，但要做好企业，他们必须要有一个悲观的总经理，帮他们把困难都想到，并且想办法解决。我们普通人要想成功，就必须同时是一个乐观主义者和一个悲观主义者。<strong>在想象未来时保持乐观，在对待眼前的工作时保持悲观。世界不会给我们准备完美的结局。接受不完美是成就伟大事业的起点。</strong> </p><p>好，今天的六组金句讲完了。因为金句已经够多了，咱们就不再上价值做总结了。最后，我想发起一个号召。请你写下，你毕业时，印象最深刻的毕业寄语或者致辞，把它分享到留言区。同时，也推荐你把自己的毕业致辞，配上今天的节目，一起分享给身边的朋友。</p><p>再来看今天的第二条。618刚过不久，今年跟往年一样，又迎来了一波退货潮。虽然还没出具体数据，但大概率上，今年的退货率，比往年还要高。</p><p>首先，是退货的成本更低了。平台为了抢客源，都推出了无条件退换活动。除了淘宝、京东、拼多多，其他平台也在陆续推出类似的服务。比如，网易严选，早在6月初就发布了《不喜欢就退》声明。再加上有的品类退货率本来就高。比如，中低价位的服装，退货率一直在40%左右。其次，是今年直播电商大范围入局。因为用户在直播间，更容易冲动消费，事后后悔的概率也更高。比如，同样是服装，直播间的退货率高达60%。</p><p>换句话说，618虽然过了，但商家还有另一场硬仗要打，这就是，怎么把退货的损失降低？</p><p>前段时间，《哈佛商业评论》发表了一篇文章，介绍了多伦多大学和波士顿大学做的一项研究，或许对解决这个问题有帮助。这个研究主要说的是一个现象，叫退款效应。</p><p><strong>所谓退款效应，就是消费者会把退款当成已经花出去的钱。</strong> 就好比有人欠你钱不还，隔了一年突然还你，你会感觉跟捡到钱一样。</p><p>在研究过程中，研究人员招募了199名多伦多大学的学生，把他们分成两组，各给4美元。第一组学生，先拿4美元买东西，又把东西退了。相当于，他们拿到的是退款。第二组，什么都不做，一直拿着这4美元。后面，研究人员分别问两组学生，是否愿意拿这4美元买一张星巴克礼品卡。结果发现，退款组的购买意愿是78%。而另一组的购买率，是48%。前后足足差了30%。</p><p>换句话说，已经花出去的钱，即使退回来，你大概率上，也会把它花出去。这个原理，跟我们之前经常说的心理账户很像。花出去的钱，有一个单独的心理账户。</p><p>注意，到这一步，结论还不算很新。有意思的是下一步，退回的钱在我们心里，到底是一个什么地位？</p><p>研究人员又做了一个实验。这回招募了203名志愿者。分成三组，给每人90美元。然后，告诉第一组，这是他们之前买彩票中的奖。告诉第二组，这是他们的退税收入。告诉第三组，把这笔钱花出去，买点什么，然后再退掉。</p><p>下一步，研究人员拿了一件T恤给这三组人看。跟他们说，这件T恤价值70美元，谁愿意买？结果发现，<strong>退款组的购买意愿，不仅比退税组高，居然比彩票组还要高。</strong> 要知道，彩票可是纯粹的运气钱，而退款好歹也是自己的钱。按理说，大家应该更心疼退款才对。但事实上，大家对退款，往往更不在乎。</p><p>同时，这个实验还有一个附带结论。就是，退款的还原度越低，你就越容易不拿它当钱。比如，原账户返回，你再花出去的概率就会降低。假如用虚拟币或者是代金券的方式退回，你几乎会百分百再花出去。</p><p>因此，很多商家也在利用这个原理。比如，亚马逊，在收到退货申请之后，会询问顾客希望用什么方式退回。假如要亚马逊的消费卡，就能马上到账。假如要现金，就得等一周。当然，咱们中国电商的服务，比他们的服务要好多了。咱们就不多说了。</p><p>在这里，向你介绍一个方法，来自著名的运动品零售公司美捷步。他们有一个策略，叫三双鞋策略，特别适合退货率高的商品。三双鞋策略，就是你在他们那买一双鞋，他们会给你寄三双。另外两双，是他们最近出的新品，觉得可能适合你，请你试穿。你要是喜欢，就直接买下。不喜欢，就原路退货，一分邮费不用花。你看，这个动作至少有三个好处。</p><p>首先，因为顾客买了你的商品，因此你能掌握他们的尺码。其次，买你商品的顾客，大概率认可你这个品牌，这比说服一个全新的用户要容易得多。最后，虽然这么做会增加物流成本，但退货本身就不可避免。同时，这会触发一个良性循环。因为美捷步的体验好，顾客就愿意再买。只要购买在发生，那么美捷步就会持续寄送试穿，用户再购买的概率就会提高。而且久而久之，品牌和用户之间，就形成了持续的互动，其他竞品就很难打进去。</p><p>换句话说，<strong>商品只是一个独立的点。它得通过互动，与用户之间织起一条线。线织得多了，就形成了一张网。这就成了品牌，最重要的护城河之一。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;节选自：得到头条 145｜2023高校毕业致辞金句集，请收好&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今天，我将从两个话题出发，为你提供知识服务。第一个是，高校毕业季来临。第二个是，618过后，电商迎来退货潮。&lt;/p&gt;
&lt;p&gt;先来看今天的第一条。</summary>
      
    
    
    
    <category term="杂记" scheme="http://ai.mak.cn/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="杂记" scheme="http://ai.mak.cn/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
</feed>
